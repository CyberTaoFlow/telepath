/*
 * File: app/view/Behavior.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.Behavior', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.behavior',

    requires: [
        'Ext.form.Panel',
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Split',
        'Ext.menu.Menu',
        'Ext.menu.Item',
        'Ext.form.Label',
        'Ext.form.field.Radio',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Number',
        'Ext.form.field.Hidden',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.grid.plugin.CellEditing',
        'Ext.Img',
        'Ext.form.field.Display',
        'Ext.grid.plugin.DragDrop',
        'Ext.selection.RowModel'
    ],

    border: 0,
    id: 'behavioralPanel',
    layout: 'fit',
    bodyBorder: false,
    manageHeight: false,
    title: 'Behavior Rules',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    height: 700,
                    id: 'behavioralInside',
                    width: 1022,
                    layout: 'fit',
                    title: '',
                    dockedItems: [
                        {
                            xtype: 'treepanel',
                            dock: 'left',
                            id: 'b_ruleGroups',
                            width: 255,
                            resizable: true,
                            resizeHandles: 'e',
                            title: 'Rules',
                            emptyText: 'No Rules or Groups Exist',
                            scroll: 'horizontal',
                            store: 'b_rulesTreeStore',
                            rootVisible: false,
                            viewConfig: {
                                minHeight: 30,
                                overflowX: 'auto',
                                overflowY: 'auto',
                                resizable: false,
                                emptyText: 'No Rules or Groups Exist',
                                listeners: {
                                    itemcontextmenu: {
                                        fn: me.onTreeviewItemContextMenu,
                                        scope: me
                                    },
                                    itemmouseenter: {
                                        fn: me.onViewItemMouseEnter,
                                        scope: me
                                    },
                                    itemmouseleave: {
                                        fn: me.onViewItemMouseLeave,
                                        scope: me
                                    }
                                }
                            },
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'splitbutton',
                                            id: 'b_addRule',
                                            icon: 'Htmls/images/add.gif',
                                            text: 'Add',
                                            menu: {
                                                xtype: 'menu',
                                                id: 'b_add_button_menu',
                                                width: 120,
                                                items: [
                                                    {
                                                        xtype: 'menuitem',
                                                        icon: 'Htmls/images/folder.gif',
                                                        text: 'Category',
                                                        listeners: {
                                                            click: {
                                                                fn: me.onMenuitemClick2,
                                                                scope: me
                                                            }
                                                        }
                                                    },
                                                    {
                                                        xtype: 'menuitem',
                                                        icon: 'Htmls/images/group.png',
                                                        text: 'Rule',
                                                        listeners: {
                                                            click: {
                                                                fn: me.onMenuitemClick1,
                                                                scope: me
                                                            }
                                                        }
                                                    },
                                                    {
                                                        xtype: 'menuitem',
                                                        icon: 'Htmls/images/rule.png',
                                                        text: 'Criterion',
                                                        listeners: {
                                                            click: {
                                                                fn: me.onMenuitemClick,
                                                                scope: me
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            listeners: {
                                                click: {
                                                    fn: me.onB_addRuleClick,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            disabled: true,
                                            id: 'b_delete',
                                            icon: 'Htmls/images/delete.gif',
                                            text: 'Delete',
                                            listeners: {
                                                click: {
                                                    fn: me.onB_deleteClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ],
                            listeners: {
                                select: {
                                    fn: me.onB_ruleGroupsSelect,
                                    scope: me
                                },
                                beforeitemexpand: {
                                    fn: me.onB_ruleGroupsBeforeItemExpand,
                                    scope: me
                                }
                            }
                        }
                    ],
                    items: [
                        {
                            xtype: 'container',
                            id: 'b_info',
                            layout: 'fit',
                            items: [
                                {
                                    xtype: 'form',
                                    hidden: true,
                                    id: 'b_groupInfoPanel',
                                    overflowY: 'auto',
                                    layout: 'absolute',
                                    title: 'Rule Information',
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            x: 241,
                                            y: 5,
                                            dock: 'top',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    id: 'b_saveGroup',
                                                    icon: 'Htmls/images/save.gif',
                                                    text: 'Save',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onB_saveGroupClick,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    id: 'b_cancelGroup',
                                                    icon: 'Htmls/images/x.gif',
                                                    text: 'Cancel',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onB_cancelGroupClick1,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    items: [
                                        {
                                            xtype: 'container',
                                            x: 10,
                                            y: 10,
                                            height: 40,
                                            id: 'b_rgi_general_info',
                                            width: 760,
                                            layout: 'absolute',
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    x: 0,
                                                    y: 10,
                                                    id: 'b_rgiName',
                                                    fieldLabel: 'Name',
                                                    labelSeparator: ' ',
                                                    readOnly: true,
                                                    allowBlank: false
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    x: 250,
                                                    y: 10,
                                                    id: 'b_rgiDescription',
                                                    style: 'margin-left:20px;',
                                                    width: 470,
                                                    fieldLabel: 'Description',
                                                    labelSeparator: ' ',
                                                    readOnly: true,
                                                    allowBlank: false
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 0,
                                                    y: 70,
                                                    hidden: true,
                                                    text: 'Score Type'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 0,
                                                    y: 100,
                                                    hidden: true,
                                                    id: 'b_rgiLiteralCB',
                                                    fieldLabel: '',
                                                    readOnly: true,
                                                    boxLabel: '',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_rgiLiteralCBChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    x: 30,
                                                    y: 97,
                                                    hidden: true,
                                                    id: 'b_rgiLiteralField',
                                                    style: 'margin-left:3px;',
                                                    width: 180,
                                                    fieldLabel: 'Literal',
                                                    labelSeparator: ' ',
                                                    labelStyle: 'margin-top:2px;',
                                                    value: 'Low',
                                                    readOnly: true,
                                                    editable: false,
                                                    displayField: 'field',
                                                    queryMode: 'local',
                                                    store: 'b_rgiLiteralFieldStore'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    hidden: true,
                                                    id: 'b_lastSelected1',
                                                    fieldLabel: 'Label'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 0,
                                                    y: 130,
                                                    hidden: true,
                                                    id: 'b_rgiNumericCB',
                                                    fieldLabel: '',
                                                    readOnly: true,
                                                    boxLabel: '',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_rgiNumericCBChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'numberfield',
                                                    x: 30,
                                                    y: 127,
                                                    hidden: true,
                                                    id: 'b_rgiNumericField',
                                                    style: 'margin-left:3px;',
                                                    width: 160,
                                                    fieldLabel: 'Numeric',
                                                    labelSeparator: ' ',
                                                    labelStyle: 'margin-top:2px;',
                                                    readOnly: true
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 200,
                                                    y: 130,
                                                    hidden: true,
                                                    text: '%'
                                                },
                                                {
                                                    xtype: 'hiddenfield',
                                                    id: 'b_groupId',
                                                    fieldLabel: 'Label'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'form',
                                            x: 10,
                                            y: 60,
                                            border: 0,
                                            height: 320,
                                            id: 'b_rgi_actions',
                                            width: 740,
                                            bodyPadding: 10,
                                            title: '',
                                            dockedItems: [
                                                {
                                                    xtype: 'label',
                                                    dock: 'top',
                                                    cls: 'tp-title',
                                                    width: 740,
                                                    text: 'Actions'
                                                }
                                            ],
                                            items: [
                                                {
                                                    xtype: 'container',
                                                    layout: {
                                                        type: 'table',
                                                        columns: 2
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'checkboxfield',
                                                            disabled: true,
                                                            hidden: true,
                                                            id: 'b_rgiLogCB',
                                                            fieldLabel: '',
                                                            readOnly: true,
                                                            boxLabel: 'Log',
                                                            checked: true
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    width: 699,
                                                    layout: {
                                                        type: 'table',
                                                        columns: 2
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'checkboxfield',
                                                            id: 'b_rgiSyslogCB',
                                                            fieldLabel: '',
                                                            readOnly: true,
                                                            boxLabel: 'Syslog'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    hidden: true,
                                                    width: 702,
                                                    layout: {
                                                        type: 'table',
                                                        columns: 2
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'checkboxfield',
                                                            id: 'b_rgiFlowCB',
                                                            fieldLabel: '',
                                                            readOnly: true,
                                                            boxLabel: '',
                                                            listeners: {
                                                                change: {
                                                                    fn: me.onB_rgiFlowCBChange,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'combobox',
                                                            id: 'b_rgiFlowField',
                                                            style: 'margin-left:3px;',
                                                            fieldLabel: 'Flow',
                                                            labelSeparator: ' ',
                                                            labelStyle: 'margin-top:2px;',
                                                            validateOnChange: false,
                                                            readOnly: true,
                                                            allowBlank: false,
                                                            editable: false,
                                                            displayField: 'group',
                                                            queryCaching: false,
                                                            store: 'general_flow_group_store'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    height: 183,
                                                    width: 708,
                                                    layout: 'absolute',
                                                    items: [
                                                        {
                                                            xtype: 'checkboxfield',
                                                            id: 'b_rgiEmailCB',
                                                            fieldLabel: '',
                                                            readOnly: true,
                                                            boxLabel: 'Email',
                                                            listeners: {
                                                                change: {
                                                                    fn: me.onB_rgiEmailCBChange,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'container',
                                                            x: 90,
                                                            y: 0,
                                                            height: 180,
                                                            hidden: true,
                                                            id: 'b_rgiEmailField_cont',
                                                            width: 400,
                                                            layout: 'absolute',
                                                            items: [
                                                                {
                                                                    xtype: 'textfield',
                                                                    id: 'b_rgiEmailField_field',
                                                                    width: 330,
                                                                    fieldLabel: 'Address',
                                                                    labelSeparator: ' ',
                                                                    labelWidth: 60,
                                                                    validateOnChange: false,
                                                                    allowBlank: false,
                                                                    enableKeyEvents: true,
                                                                    regex: /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/,
                                                                    regexText: 'illegal email address',
                                                                    listeners: {
                                                                        keypress: {
                                                                            fn: me.onTextfieldKeypress122,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'button',
                                                                    x: 340,
                                                                    y: 0,
                                                                    width: 40,
                                                                    text: 'Add',
                                                                    listeners: {
                                                                        click: {
                                                                            fn: me.c_network_ipclick1,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'gridpanel',
                                                                    x: 0,
                                                                    y: 30,
                                                                    height: 140,
                                                                    id: 'b_rgiEmailField',
                                                                    width: 380,
                                                                    title: '',
                                                                    forceFit: true,
                                                                    store: 'b_ri_group_emails',
                                                                    columns: [
                                                                        {
                                                                            xtype: 'gridcolumn',
                                                                            width: 395,
                                                                            dataIndex: 'address',
                                                                            text: 'Address',
                                                                            editor: {
                                                                                xtype: 'textfield',
                                                                                allowBlank: false,
                                                                                regex: /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/,
                                                                                regexText: 'illegal email address'
                                                                            }
                                                                        },
                                                                        {
                                                                            xtype: 'gridcolumn',
                                                                            hidden: true,
                                                                            dataIndex: 'td1',
                                                                            text: 'MyColumn204'
                                                                        },
                                                                        {
                                                                            xtype: 'gridcolumn',
                                                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                                                return '<div><img src="Htmls/images/edit.gif" onclick="Ext.getCmp(\'b_rgiEmailField\').getPlugin(\'b_rgiEmailField_edit\').startEdit('+rowIndex+',Ext.getCmp(\'b_rgiEmailField\').columns[0])" align="center"></div>';
                                                                            },
                                                                            maxWidth: 60,
                                                                            text: ''
                                                                        },
                                                                        {
                                                                            xtype: 'gridcolumn',
                                                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                                                return '<div><img src="Htmls/images/delete.gif" onclick="remove_item_from_table(\''+record.internalId+'\',\'b_rgiEmailField\')" align="center"></div>';
                                                                            },
                                                                            maxWidth: 60,
                                                                            width: 111,
                                                                            text: ''
                                                                        }
                                                                    ],
                                                                    plugins: [
                                                                        Ext.create('Ext.grid.plugin.CellEditing', {
                                                                            pluginId: 'b_rgiEmailField_edit',
                                                                            listeners: {
                                                                                validateedit: {
                                                                                    fn: me.onCellEditingValidateedit,
                                                                                    scope: me
                                                                                }
                                                                            }
                                                                        })
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'hiddenfield',
                                            anchor: '100%',
                                            id: 'b_ruleId',
                                            fieldLabel: 'Label'
                                        },
                                        {
                                            xtype: 'container',
                                            x: 0,
                                            y: 380,
                                            height: 253,
                                            id: 'b_ri_rule_alerts_cont',
                                            width: 750,
                                            layout: 'absolute',
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    x: 10,
                                                    y: 10,
                                                    cls: 'tp-title ',
                                                    width: 740,
                                                    text: 'Parameters to show upon alert for the rule'
                                                },
                                                {
                                                    xtype: 'button',
                                                    x: 10,
                                                    y: 50,
                                                    id: 'b_ri_alert_add',
                                                    icon: 'Htmls/images/add.gif',
                                                    text: 'Add ',
                                                    listeners: {
                                                        click: {
                                                            fn: me.b_ri_alert_add_click,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    hidden: true,
                                                    id: 'b_ri_alert_id',
                                                    fieldLabel: 'Label',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_ri_alert_idChange11,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    hidden: true,
                                                    id: 'b_ri_alert_name',
                                                    fieldLabel: 'Label'
                                                },
                                                {
                                                    xtype: 'gridpanel',
                                                    x: 10,
                                                    y: 80,
                                                    height: 160,
                                                    id: 'b_ri_alert_params',
                                                    width: 380,
                                                    title: '',
                                                    enableColumnHide: false,
                                                    forceFit: true,
                                                    store: 'b_ri_alert_params_store',
                                                    columns: [
                                                        {
                                                            xtype: 'gridcolumn',
                                                            width: 395,
                                                            dataIndex: 'td0',
                                                            text: 'Parameter'
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            hidden: true,
                                                            dataIndex: 'td1',
                                                            text: 'MyColumn204'
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                                return '<div><img src="Htmls/images/edit.gif" onclick="open_parameters_window_for_alerts(\'b_ri_alert_params\','+record.data.td1+')" align="center"></div>';
                                                            },
                                                            maxWidth: 60,
                                                            text: ''
                                                        },
                                                        {
                                                            xtype: 'gridcolumn',
                                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                                return '<div><img src="Htmls/images/delete.gif" onclick="remove_item_from_table(\''+record.internalId+'\',\'b_ri_alert_params\')" align="center"></div>';
                                                            },
                                                            maxWidth: 60,
                                                            width: 111,
                                                            text: ''
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'panel',
                                    height: 100,
                                    id: 'b_startPanel',
                                    margin: 'auto',
                                    width: 788,
                                    layout: 'absolute',
                                    items: [
                                        {
                                            xtype: 'label',
                                            x: 10,
                                            y: 10,
                                            height: 15,
                                            id: 'b_startLabel',
                                            style: 'margin-left:auto;\nmargin-right:auto;',
                                            width: 290,
                                            text: 'Please select a rule to display details'
                                        }
                                    ],
                                    listeners: {
                                        show: {
                                            fn: me.onB_startPanelShow,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'form',
                                    height: 1328,
                                    hidden: true,
                                    id: 'b_ruleInfoPanel',
                                    overflowY: 'auto',
                                    bodyPadding: 10,
                                    hideCollapseTool: true,
                                    title: 'Criteria Information',
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'top',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    id: 'b_saveRule',
                                                    icon: 'Htmls/images/save.gif',
                                                    text: 'Save',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onB_saveRuleClick,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    id: 'b_cancelRule',
                                                    icon: 'Htmls/images/x.gif',
                                                    text: 'Cancel',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onB_cancelGroupClick,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    items: [
                                        {
                                            xtype: 'container',
                                            height: 340,
                                            id: 'b_riGeneralInfo',
                                            width: 730,
                                            layout: 'absolute',
                                            items: [
                                                {
                                                    xtype: 'checkboxfield',
                                                    anchor: '100%',
                                                    x: 0,
                                                    y: 0,
                                                    id: 'b_riRuleEnabled',
                                                    maxWidth: 120,
                                                    width: 150,
                                                    fieldLabel: '',
                                                    readOnly: true,
                                                    boxLabel: 'Criterion Enabled',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_riRuleEnabledChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    y: 40,
                                                    id: 'b_riName',
                                                    width: 200,
                                                    fieldLabel: 'Name',
                                                    labelSeparator: ' ',
                                                    labelWidth: 50,
                                                    allowBlank: false
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    x: 210,
                                                    y: 40,
                                                    id: 'b_riDesc',
                                                    style: 'margin-left:10px;',
                                                    width: 330,
                                                    fieldLabel: 'Description',
                                                    labelSeparator: ' ',
                                                    allowBlank: false
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    x: 570,
                                                    y: 40,
                                                    id: 'b_riOwner',
                                                    style: 'margin-left:10px;',
                                                    width: 150,
                                                    fieldLabel: 'Owner',
                                                    labelSeparator: ' ',
                                                    labelWidth: 50,
                                                    allowBlank: false
                                                },
                                                {
                                                    xtype: 'numberfield',
                                                    y: 80,
                                                    hidden: true,
                                                    id: 'b_riStartIndex',
                                                    width: 200,
                                                    fieldLabel: 'Trigger criteria after',
                                                    labelSeparator: ' ',
                                                    labelWidth: 120,
                                                    allowBlank: false,
                                                    allowDecimals: false,
                                                    maxValue: 100,
                                                    minValue: 1
                                                },
                                                {
                                                    xtype: 'numberfield',
                                                    x: 360,
                                                    y: 80,
                                                    id: 'b_riAppearance',
                                                    style: 'margin-left:10px;',
                                                    width: 180,
                                                    fieldLabel: 'Trigger alert after',
                                                    labelSeparator: ' ',
                                                    labelWidth: 120,
                                                    allowBlank: false,
                                                    allowDecimals: false,
                                                    maxValue: 10,
                                                    minValue: 0
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 570,
                                                    y: 83,
                                                    text: 'criterion matches'
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    x: 0,
                                                    y: 165,
                                                    disabled: true,
                                                    id: 'b_riRuleType',
                                                    fieldLabel: '',
                                                    readOnly: true,
                                                    allowBlank: false,
                                                    editable: false,
                                                    displayField: 'type',
                                                    queryMode: 'local',
                                                    store: 'b_riRuleTypeStore',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_riRuleTypeChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 165,
                                                    height: 20,
                                                    id: 'b_image',
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onB_imageRender,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 0,
                                                    y: 130,
                                                    cls: 'tp-title',
                                                    width: 730,
                                                    text: 'Criterion Type'
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 0,
                                                    y: 200,
                                                    cls: 'tp-title',
                                                    width: 730,
                                                    text: 'Scope'
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    x: 0,
                                                    y: 237,
                                                    id: 'b_riAppCB',
                                                    fieldLabel: '',
                                                    boxLabel: '',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_riAppCBChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    x: 10,
                                                    y: 235,
                                                    disabled: true,
                                                    id: 'b_riAppField',
                                                    style: 'margin-top:2px;\nmargin-left:10px;',
                                                    width: 295,
                                                    fieldLabel: 'Application',
                                                    labelSeparator: ' ',
                                                    allowBlank: false,
                                                    editable: false,
                                                    displayField: 'app',
                                                    queryCaching: false,
                                                    store: 'general_appsStore',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_riAppFieldChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 237,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    x: 0,
                                                    y: 267,
                                                    id: 'b_riIpCB',
                                                    fieldLabel: '',
                                                    boxLabel: '',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_riIpCBChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 220,
                                                    y: 84,
                                                    hidden: true,
                                                    text: 'Requests'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    x: 10,
                                                    y: 265,
                                                    disabled: true,
                                                    id: 'b_riIpField',
                                                    style: 'margin-top:2px;\nmargin-left:10px;',
                                                    width: 295,
                                                    fieldLabel: 'IP',
                                                    labelSeparator: ' ',
                                                    allowBlank: false,
                                                    regex: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/,
                                                    regexText: 'Invalid IP Address'
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 267,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    x: 0,
                                                    y: 297,
                                                    id: 'b_riUserCB',
                                                    fieldLabel: '',
                                                    boxLabel: '',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_riUserCBChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    x: 10,
                                                    y: 295,
                                                    disabled: true,
                                                    id: 'b_riUserField',
                                                    style: 'margin-top:2px;\nmargin-left:10px;',
                                                    width: 295,
                                                    fieldLabel: 'User Name',
                                                    labelSeparator: ' ',
                                                    allowBlank: false
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 297,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender2211,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    x: 327,
                                                    y: 268,
                                                    disabled: true,
                                                    id: 'b_riIpAdd',
                                                    text: 'Add IP(s)',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onB_rIpAddClick,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    x: 400,
                                                    y: 269,
                                                    disabled: true,
                                                    id: 'b_riIpNot',
                                                    fieldLabel: '',
                                                    boxLabel: 'Not'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'container',
                                            height: 80,
                                            id: 'b_ri_rule_score_cont',
                                            width: 730,
                                            layout: 'absolute',
                                            items: [
                                                {
                                                    xtype: 'combobox',
                                                    x: 0,
                                                    y: 35,
                                                    id: 'b_riScoreType1',
                                                    style: 'margin-top:10px;',
                                                    fieldLabel: '',
                                                    allowBlank: false,
                                                    editable: false,
                                                    displayField: 'type',
                                                    queryMode: 'local',
                                                    store: 'b_irScoreType_AStore',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_riScoreType1_AChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 0,
                                                    y: 10,
                                                    cls: 'tp-title',
                                                    width: 730,
                                                    text: 'Score Type'
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 42,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    x: 190,
                                                    y: 35,
                                                    id: 'b_riScoreType3',
                                                    style: 'margin-top:10px',
                                                    width: 101,
                                                    fieldLabel: '',
                                                    allowBlank: false,
                                                    editable: false,
                                                    displayField: 'type',
                                                    queryMode: 'local',
                                                    store: 'rw_literal'
                                                },
                                                {
                                                    xtype: 'numberfield',
                                                    x: 190,
                                                    y: 35,
                                                    id: 'b_riScoreType2',
                                                    style: 'margin-top:10px',
                                                    width: 101,
                                                    fieldLabel: '',
                                                    allowBlank: false,
                                                    emptyText: '0-100',
                                                    allowDecimals: false,
                                                    maxValue: 100,
                                                    minValue: 0
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'container',
                                            reset: function() {
                                                Ext.getCmp('b_riAttributeField_P').reset();//default
                                                Ext.getCmp('b_riAttributeField_P_id').reset();
                                                Ext.getCmp('b_riPageField_par').reset();

                                                Ext.getCmp('b_riPageField_id_par').reset();
                                                Ext.getCmp('b_riHeuristicCB_P').setValue(true);//default
                                                Ext.getCmp('b_riStringCB_P').setValue(false);//default
                                                Ext.getCmp('b_riRegexCB_P').setValue(false);//default
                                                Ext.getCmp('b_riStringCB_P').setValue(false);//default
                                                Ext.getCmp('b_riRegexCB_P').setValue(false);//default
                                                Ext.getCmp('b_riRegexField_P').reset();
                                                Ext.getCmp('b_riRegexNotCB_P').setValue(false);//default
                                                Ext.getCmp('b_riStringCB_P').setValue(false);//default
                                                Ext.getCmp('b_riStringField_P').reset();
                                                Ext.getCmp('b_riStringNotCB_P').setValue(false);//default

                                                Ext.getCmp('b_riCharLengthField_P').reset();
                                                Ext.getCmp('b_riCharLengthCB_P').setValue(false);//default

                                                Ext.getCmp('b_riLengthField2_P').reset();
                                                Ext.getCmp('b_riLengthField1_P').reset();
                                                Ext.getCmp('b_riLengthCB_P').setValue(false);//default

                                                Ext.getCmp('b_riSimilarField_P').reset();
                                                Ext.getCmp('b_riSimilarCB_P').setValue(false);//default


                                                Ext.getCmp('b_par_get_cb').reset();
                                                Ext.getCmp('b_par_post_cb').reset();
                                                Ext.getCmp('b_par_header_cb').reset();

                                                Ext.getCmp('b_par_radio_2').reset()

                                                Ext.getCmp('b_par_radio_1').reset()
                                            },
                                            height: 359,
                                            hidden: true,
                                            id: 'b_parameterRuleCont',
                                            width: 750,
                                            layout: 'absolute',
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    x: 0,
                                                    y: 0,
                                                    cls: 'tp-title',
                                                    width: 730,
                                                    text: 'Parameter'
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 0,
                                                    y: 45,
                                                    id: 'b_par_radio_1',
                                                    fieldLabel: '',
                                                    boxLabel: '',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_par_radio_1Change,
                                                            scope: me
                                                        },
                                                        render: {
                                                            fn: me.onB_par_radio_1Render,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'container',
                                                    x: 30,
                                                    y: 30,
                                                    height: 70,
                                                    id: 'b_par_cb1_cont',
                                                    width: 420,
                                                    layout: 'absolute',
                                                    items: [
                                                        {
                                                            xtype: 'displayfield',
                                                            id: 'b_riPageField_par',
                                                            width: 295,
                                                            fieldLabel: 'Page',
                                                            labelSeparator: ' ',
                                                            labelWidth: 90
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            x: 140,
                                                            hidden: true,
                                                            id: 'b_riPageField_id_par',
                                                            fieldLabel: '',
                                                            emptyText: 'Select a Page'
                                                        },
                                                        {
                                                            xtype: 'button',
                                                            x: 330,
                                                            disabled: true,
                                                            hidden: true,
                                                            id: 'b_riPageField_browse_par',
                                                            text: 'Browse',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.onB_riPageField_browseClick,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'image',
                                                            x: 680,
                                                            height: 20,
                                                            width: 20,
                                                            src: 'Htmls/images/question.png',
                                                            listeners: {
                                                                render: {
                                                                    fn: me.onImageRender36,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            x: 100,
                                                            y: 190,
                                                            hidden: true,
                                                            id: 'b_riAttributeField_P_id',
                                                            fieldLabel: 'Label',
                                                            allowBlank: false
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            y: 30,
                                                            id: 'b_riAttributeField_P',
                                                            width: 295,
                                                            fieldLabel: 'Parameter',
                                                            labelSeparator: ' ',
                                                            labelWidth: 90,
                                                            allowBlank: false
                                                        },
                                                        {
                                                            xtype: 'button',
                                                            x: 320,
                                                            y: 30,
                                                            disabled: true,
                                                            height: 20,
                                                            id: 'b_riBrowse',
                                                            text: 'Browse',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.b_ri_browseclick,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'image',
                                                            x: 680,
                                                            y: 30,
                                                            height: 20,
                                                            width: 20,
                                                            src: 'Htmls/images/question.png',
                                                            listeners: {
                                                                render: {
                                                                    fn: me.onImageRender3,
                                                                    scope: me
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 410,
                                                    y: 45,
                                                    id: 'b_par_radio_2',
                                                    fieldLabel: '',
                                                    boxLabel: '',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_par_radio_2Change,
                                                            scope: me
                                                        },
                                                        render: {
                                                            fn: me.onB_par_radio_2Render,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 600,
                                                    y: 35,
                                                    id: 'b_par_radio_3',
                                                    fieldLabel: '',
                                                    boxLabel: 'Title',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_par_radio_2Change1,
                                                            scope: me
                                                        },
                                                        render: {
                                                            fn: me.onB_par_radio_2Render1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 600,
                                                    y: 55,
                                                    id: 'b_par_radio_4',
                                                    fieldLabel: '',
                                                    boxLabel: 'URI',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_par_radio_2Change11,
                                                            scope: me
                                                        },
                                                        render: {
                                                            fn: me.onB_par_radio_2Render11,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'container',
                                                    x: 440,
                                                    y: 25,
                                                    height: 70,
                                                    id: 'b_par_cb2_cont',
                                                    width: 140,
                                                    layout: 'absolute',
                                                    items: [
                                                        {
                                                            xtype: 'checkboxfield',
                                                            id: 'b_par_post_cb',
                                                            fieldLabel: '',
                                                            boxLabel: 'POST'
                                                        },
                                                        {
                                                            xtype: 'checkboxfield',
                                                            y: 20,
                                                            id: 'b_par_get_cb',
                                                            fieldLabel: '',
                                                            boxLabel: 'GET'
                                                        },
                                                        {
                                                            xtype: 'checkboxfield',
                                                            y: 40,
                                                            id: 'b_par_header_cb',
                                                            fieldLabel: '',
                                                            boxLabel: 'HEADER'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'panel',
                                                    y: 100,
                                                    border: 0,
                                                    height: 270,
                                                    id: 'b_par_string_inspection_cont',
                                                    layout: 'absolute',
                                                    bodyBorder: false,
                                                    items: [
                                                        {
                                                            xtype: 'label',
                                                            x: 0,
                                                            y: 0,
                                                            cls: 'tp-title',
                                                            width: 730,
                                                            text: 'String Inspection'
                                                        },
                                                        {
                                                            xtype: 'container',
                                                            y: 30,
                                                            height: 30,
                                                            id: 'b_par_heuristic_cont',
                                                            width: 740,
                                                            layout: 'absolute',
                                                            items: [
                                                                {
                                                                    xtype: 'radiofield',
                                                                    x: 0,
                                                                    id: 'b_riHeuristicCB_P',
                                                                    width: 100,
                                                                    fieldLabel: '',
                                                                    boxLabel: '           Heuristic',
                                                                    listeners: {
                                                                        change: {
                                                                            fn: me.onB_riHeuristicCB_PChange,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'image',
                                                                    x: 710,
                                                                    height: 20,
                                                                    width: 20,
                                                                    src: 'Htmls/images/question.png',
                                                                    listeners: {
                                                                        render: {
                                                                            fn: me.onImageRender11,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'container',
                                                            y: 60,
                                                            height: 30,
                                                            id: 'b_par_regex_cont',
                                                            layout: 'absolute',
                                                            items: [
                                                                {
                                                                    xtype: 'radiofield',
                                                                    x: 0,
                                                                    id: 'b_riRegexCB_P',
                                                                    fieldLabel: '',
                                                                    boxLabel: '',
                                                                    listeners: {
                                                                        change: {
                                                                            fn: me.onB_riRegexCB_PChange,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'textfield',
                                                                    x: 10,
                                                                    disabled: true,
                                                                    id: 'b_riRegexField_P',
                                                                    style: 'margin-top:2px;\nmargin-left:10px;',
                                                                    width: 295,
                                                                    fieldLabel: 'Regex',
                                                                    labelSeparator: ' ',
                                                                    allowBlank: false
                                                                },
                                                                {
                                                                    xtype: 'checkboxfield',
                                                                    x: 320,
                                                                    disabled: true,
                                                                    id: 'b_riRegexNotCB_P',
                                                                    fieldLabel: '',
                                                                    boxLabel: 'Not'
                                                                },
                                                                {
                                                                    xtype: 'image',
                                                                    x: 710,
                                                                    height: 20,
                                                                    width: 20,
                                                                    src: 'Htmls/images/question.png',
                                                                    listeners: {
                                                                        render: {
                                                                            fn: me.onImageRender4,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'container',
                                                            y: 90,
                                                            height: 30,
                                                            id: 'b_par_contains_cont',
                                                            layout: 'absolute',
                                                            items: [
                                                                {
                                                                    xtype: 'radiofield',
                                                                    x: 0,
                                                                    id: 'b_riStringCB_P',
                                                                    fieldLabel: '',
                                                                    boxLabel: '',
                                                                    listeners: {
                                                                        change: {
                                                                            fn: me.onB_riStringCB_PChange,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'textfield',
                                                                    x: 10,
                                                                    disabled: true,
                                                                    id: 'b_riStringField_P',
                                                                    style: 'margin-top:2px;\nmargin-left:10px;',
                                                                    width: 295,
                                                                    fieldLabel: 'String contains',
                                                                    labelSeparator: ' ',
                                                                    allowBlank: false
                                                                },
                                                                {
                                                                    xtype: 'checkboxfield',
                                                                    x: 320,
                                                                    disabled: true,
                                                                    id: 'b_riStringNotCB_P',
                                                                    fieldLabel: '',
                                                                    boxLabel: 'Not'
                                                                },
                                                                {
                                                                    xtype: 'image',
                                                                    x: 710,
                                                                    height: 20,
                                                                    width: 20,
                                                                    src: 'Htmls/images/question.png',
                                                                    listeners: {
                                                                        render: {
                                                                            fn: me.onImageRender5,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'container',
                                                            y: 120,
                                                            height: 30,
                                                            id: 'b_par_fuzzy_cont',
                                                            layout: 'absolute',
                                                            items: [
                                                                {
                                                                    xtype: 'radiofield',
                                                                    x: 0,
                                                                    id: 'b_riFuzzyCB_P',
                                                                    fieldLabel: '',
                                                                    boxLabel: '',
                                                                    listeners: {
                                                                        change: {
                                                                            fn: me.onB_riFuzzyCB_PChange,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'combobox',
                                                                    x: 10,
                                                                    disabled: true,
                                                                    id: 'b_riFuzzyField_P',
                                                                    style: 'margin-top:2px;\nmargin-left:10px;',
                                                                    width: 295,
                                                                    fieldLabel: 'String length',
                                                                    labelSeparator: ' ',
                                                                    value: 'Is too Short',
                                                                    allowBlank: false,
                                                                    editable: false,
                                                                    displayField: 'length',
                                                                    queryMode: 'local',
                                                                    store: 'b_riFuzzyLengthStore'
                                                                },
                                                                {
                                                                    xtype: 'image',
                                                                    x: 710,
                                                                    height: 20,
                                                                    width: 20,
                                                                    src: 'Htmls/images/question.png',
                                                                    listeners: {
                                                                        render: {
                                                                            fn: me.onImageRender6,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'container',
                                                            y: 150,
                                                            height: 30,
                                                            id: 'b_par_length_cont',
                                                            layout: 'absolute',
                                                            items: [
                                                                {
                                                                    xtype: 'radiofield',
                                                                    id: 'b_riCharLengthCB_P',
                                                                    fieldLabel: '',
                                                                    boxLabel: '',
                                                                    listeners: {
                                                                        change: {
                                                                            fn: me.onB_riCharLengthCB_PChange,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'numberfield',
                                                                    x: 10,
                                                                    disabled: true,
                                                                    id: 'b_riCharLengthField_P',
                                                                    style: 'margin-top:2px;\nmargin-left:10px;',
                                                                    width: 173,
                                                                    fieldLabel: 'Length ',
                                                                    labelSeparator: ' ',
                                                                    allowBlank: false,
                                                                    allowDecimals: false,
                                                                    minValue: 0
                                                                },
                                                                {
                                                                    xtype: 'image',
                                                                    x: 710,
                                                                    height: 20,
                                                                    width: 20,
                                                                    src: 'Htmls/images/question.png',
                                                                    listeners: {
                                                                        render: {
                                                                            fn: me.onImageRender7,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'container',
                                                            y: 180,
                                                            height: 30,
                                                            id: 'b_par_between_cont',
                                                            layout: 'absolute',
                                                            items: [
                                                                {
                                                                    xtype: 'radiofield',
                                                                    x: 0,
                                                                    id: 'b_riLengthCB_P',
                                                                    fieldLabel: '',
                                                                    boxLabel: '',
                                                                    listeners: {
                                                                        change: {
                                                                            fn: me.onB_riLengthCB_PChange,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'numberfield',
                                                                    x: 20,
                                                                    disabled: true,
                                                                    id: 'b_riLengthField1_P',
                                                                    width: 172,
                                                                    fieldLabel: 'Length between',
                                                                    labelSeparator: ' ',
                                                                    allowBlank: false,
                                                                    allowDecimals: false
                                                                },
                                                                {
                                                                    xtype: 'numberfield',
                                                                    x: 200,
                                                                    disabled: true,
                                                                    id: 'b_riLengthField2_P',
                                                                    width: 115,
                                                                    fieldLabel: 'and',
                                                                    labelSeparator: ' ',
                                                                    labelWidth: 30,
                                                                    allowBlank: false,
                                                                    allowDecimals: false
                                                                },
                                                                {
                                                                    xtype: 'image',
                                                                    x: 710,
                                                                    height: 20,
                                                                    width: 20,
                                                                    src: 'Htmls/images/question.png',
                                                                    listeners: {
                                                                        render: {
                                                                            fn: me.onImageRender8,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            xtype: 'container',
                                                            y: 210,
                                                            height: 30,
                                                            id: 'b_par_similar_cont',
                                                            layout: 'absolute',
                                                            items: [
                                                                {
                                                                    xtype: 'radiofield',
                                                                    x: 0,
                                                                    id: 'b_riSimilarCB_P',
                                                                    fieldLabel: '',
                                                                    boxLabel: '',
                                                                    listeners: {
                                                                        change: {
                                                                            fn: me.onB_riSimilarCB_PChange,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'numberfield',
                                                                    x: 10,
                                                                    disabled: true,
                                                                    id: 'b_riSimilarField_P',
                                                                    style: 'margin-top:2px;\nmargin-left:10px;',
                                                                    width: 219,
                                                                    fieldLabel: 'Parameter values differ by',
                                                                    labelSeparator: ' ',
                                                                    labelWidth: 155,
                                                                    allowBlank: false,
                                                                    allowDecimals: false,
                                                                    minValue: 0
                                                                },
                                                                {
                                                                    xtype: 'label',
                                                                    x: 250,
                                                                    y: 3,
                                                                    style: 'margin-left:5px;',
                                                                    text: 'characters between requests'
                                                                },
                                                                {
                                                                    xtype: 'image',
                                                                    x: 710,
                                                                    height: 20,
                                                                    width: 20,
                                                                    src: 'Htmls/images/question.png',
                                                                    listeners: {
                                                                        render: {
                                                                            fn: me.onImageRender9,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            listeners: {
                                                show: {
                                                    fn: me.onB_parameterRuleContShow,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'container',
                                            reset: function() {
                                                Ext.getCmp('b_riAspectType_A').reset();
                                                Ext.getCmp('b_riPersonal_A').reset();
                                            },
                                            height: 140,
                                            hidden: true,
                                            id: 'b_aspectRuleCont',
                                            width: 730,
                                            layout: 'absolute',
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    cls: 'tp-title',
                                                    width: 730,
                                                    text: 'Aspect Type'
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 0,
                                                    y: 35,
                                                    text: 'Aspects are different characteristics of web users\' behavior. '
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    x: -1,
                                                    y: 60,
                                                    id: 'b_riAspectType_A',
                                                    style: 'margin-top:10px;',
                                                    fieldLabel: '',
                                                    allowBlank: false,
                                                    editable: false,
                                                    displayField: 'type',
                                                    queryMode: 'local',
                                                    store: 'global_aspect_type_store'
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 70,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'checkboxfield',
                                                    x: 0,
                                                    y: 100,
                                                    id: 'b_riPersonal_A',
                                                    fieldLabel: '',
                                                    boxLabel: 'Personal'
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 105,
                                                    height: 20,
                                                    hidden: true,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ],
                                            listeners: {
                                                show: {
                                                    fn: me.onB_aspectRuleContShow,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'container',
                                            reset: function() {
                                                Ext.getCmp('b_riIp_Pat').reset();
                                                Ext.getCmp('b_riSid_Pat').reset();
                                                Ext.getCmp('b_riOther_Pat').reset();
                                                Ext.getCmp('b_riOtherField_Pat').reset();
                                                Ext.getCmp('b_riOtherField_Pat_id').reset();
                                                Ext.getCmp('b_riDynamic_Pat').reset();
                                                Ext.getCmp('b_riDynamic_Pat_id').reset();
                                                Ext.getCmp('b_riPageField_pat').reset();
                                                Ext.getCmp('b_riPageField_id_pat').reset();
                                                Ext.getCmp('b_riCount_Pat').reset();
                                                Ext.getCmp('b_riTime1_Pat').reset();
                                                Ext.getCmp('b_riTime2_Pat').reset();

                                            },
                                            height: 399,
                                            hidden: true,
                                            id: 'b_patternRuleCont',
                                            width: 730,
                                            layout: 'absolute',
                                            items: [
                                                {
                                                    xtype: 'panel',
                                                    border: 0,
                                                    height: 130,
                                                    width: 730,
                                                    layout: 'absolute',
                                                    title: '',
                                                    dockedItems: [
                                                        {
                                                            xtype: 'label',
                                                            dock: 'top',
                                                            cls: 'tp-title',
                                                            width: 840,
                                                            text: 'Anchor '
                                                        }
                                                    ],
                                                    items: [
                                                        {
                                                            xtype: 'radiofield',
                                                            id: 'b_riIp_Pat',
                                                            style: 'margin-top:5px;',
                                                            fieldLabel: '',
                                                            boxLabel: 'IP',
                                                            checked: true,
                                                            listeners: {
                                                                change: {
                                                                    fn: me.onB_riIp_PatChange,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'image',
                                                            x: 710,
                                                            y: 10,
                                                            height: 20,
                                                            width: 20,
                                                            src: 'Htmls/images/question.png',
                                                            listeners: {
                                                                render: {
                                                                    fn: me.onImageRender16,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'radiofield',
                                                            x: 0,
                                                            y: 25,
                                                            id: 'b_riSid_Pat',
                                                            style: 'margin-top:5px;',
                                                            fieldLabel: '',
                                                            boxLabel: 'SID',
                                                            listeners: {
                                                                change: {
                                                                    fn: me.onB_riSid_PatChange,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'image',
                                                            x: 710,
                                                            y: 30,
                                                            height: 20,
                                                            width: 20,
                                                            src: 'Htmls/images/question.png',
                                                            listeners: {
                                                                render: {
                                                                    fn: me.onImageRender17,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'radiofield',
                                                            y: 54,
                                                            id: 'b_riUser_Pat',
                                                            fieldLabel: '',
                                                            boxLabel: 'User',
                                                            listeners: {
                                                                change: {
                                                                    fn: me.onRadiofieldChange,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'image',
                                                            x: 710,
                                                            y: 53,
                                                            height: 20,
                                                            width: 20,
                                                            src: 'Htmls/images/question.png',
                                                            listeners: {
                                                                render: {
                                                                    fn: me.onImageRender171,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'container',
                                                            x: 0,
                                                            y: 78,
                                                            height: 30,
                                                            width: 770,
                                                            layout: 'absolute',
                                                            items: [
                                                                {
                                                                    xtype: 'radiofield',
                                                                    id: 'b_riOther_Pat',
                                                                    fieldLabel: '',
                                                                    boxLabel: 'Other',
                                                                    listeners: {
                                                                        change: {
                                                                            fn: me.onB_riOther_PatChange,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'textfield',
                                                                    x: 100,
                                                                    y: 0,
                                                                    disabled: true,
                                                                    id: 'b_riOtherField_Pat',
                                                                    style: 'margin-left:40px;',
                                                                    fieldLabel: '',
                                                                    readOnly: true,
                                                                    allowBlank: false
                                                                },
                                                                {
                                                                    xtype: 'button',
                                                                    x: 310,
                                                                    y: 0,
                                                                    disabled: true,
                                                                    id: 'b_riOtherBrowser_Pat',
                                                                    text: 'Browse',
                                                                    listeners: {
                                                                        click: {
                                                                            fn: me.onB_riOtherBrowser_PatClick,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    xtype: 'textfield',
                                                                    hidden: true,
                                                                    id: 'b_riOtherField_Pat_id',
                                                                    fieldLabel: 'Label'
                                                                },
                                                                {
                                                                    xtype: 'image',
                                                                    x: 710,
                                                                    height: 20,
                                                                    width: 20,
                                                                    src: 'Htmls/images/question.png',
                                                                    listeners: {
                                                                        render: {
                                                                            fn: me.onImageRender18,
                                                                            scope: me
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    y: 135,
                                                    height: 10,
                                                    style: 'border-top:solid;\nborder-width:1px;\npadding-top:25px;',
                                                    width: 730
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 190,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender19,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 230,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender191,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 270,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender1911,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 0,
                                                    y: 150,
                                                    id: 'b_ri_page_radio',
                                                    fieldLabel: '',
                                                    boxLabel: 'Page',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_ri_page_radioChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 0,
                                                    y: 270,
                                                    id: 'b_ri_user_radio',
                                                    fieldLabel: '',
                                                    boxLabel: 'User Changes',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_ri_page_radioChange1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'container',
                                                    x: 155,
                                                    y: 150,
                                                    height: 25,
                                                    id: 'b_ri_page_container',
                                                    width: 310,
                                                    layout: 'absolute',
                                                    items: [
                                                        {
                                                            xtype: 'textfield',
                                                            disabled: true,
                                                            id: 'b_riPageField_pat',
                                                            width: 140,
                                                            fieldLabel: '',
                                                            labelSeparator: ' ',
                                                            labelWidth: 150,
                                                            readOnly: true,
                                                            allowBlank: false
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            hidden: true,
                                                            id: 'b_riPageField_id_pat',
                                                            fieldLabel: ''
                                                        },
                                                        {
                                                            xtype: 'button',
                                                            x: 170,
                                                            disabled: true,
                                                            id: 'b_riPageField_browse_pat',
                                                            text: 'Browse',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.onB_riPageField_browseClick,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'button',
                                                            x: 250,
                                                            disabled: true,
                                                            id: 'b_riPageField_remove_pat',
                                                            text: 'Remove',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.b_riPageField_id_pat_click,
                                                                    scope: me
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 150,
                                                    height: 20,
                                                    id: 'b_page_desc',
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender36,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 0,
                                                    y: 190,
                                                    id: 'b_ri_parameter_radio',
                                                    fieldLabel: '',
                                                    boxLabel: 'Parameter Changes',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_ri_parameter_radioChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'container',
                                                    x: 155,
                                                    y: 190,
                                                    height: 23,
                                                    id: 'b_ri_parameter_container',
                                                    width: 310,
                                                    layout: 'absolute',
                                                    items: [
                                                        {
                                                            xtype: 'textfield',
                                                            disabled: true,
                                                            id: 'b_riDynamic_Pat',
                                                            width: 140,
                                                            fieldLabel: '',
                                                            labelSeparator: ' ',
                                                            labelWidth: 150,
                                                            readOnly: true,
                                                            allowBlank: false,
                                                            emptyText: 'Select a Parameter'
                                                        },
                                                        {
                                                            xtype: 'textfield',
                                                            hidden: true,
                                                            id: 'b_riDynamic_Pat_id',
                                                            fieldLabel: 'Label'
                                                        },
                                                        {
                                                            xtype: 'button',
                                                            x: 170,
                                                            disabled: true,
                                                            id: 'b_riDynamicBrowser_Pat',
                                                            text: 'Browse',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.onB_riDynamicBrowser_PatClick,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'button',
                                                            x: 250,
                                                            disabled: true,
                                                            id: 'b_riDynamicRemove_Pat',
                                                            text: 'Remove',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.b_riDynamic_Pat_idrem_click,
                                                                    scope: me
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 0,
                                                    y: 230,
                                                    id: 'b_ri_flow_radio',
                                                    fieldLabel: '',
                                                    boxLabel: 'Repeated Action',
                                                    checked: true,
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_ri_parameter_radioChange1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    x: 95,
                                                    y: 227,
                                                    id: 'b_ri_flow_select',
                                                    style: 'margin-top:5px;\nmargin-left:60px;',
                                                    width: 220,
                                                    fieldLabel: '',
                                                    allowBlank: false,
                                                    enableKeyEvents: true,
                                                    editable: false,
                                                    displayField: 'group',
                                                    queryCaching: false,
                                                    queryMode: 'local',
                                                    store: 'general_flow_group_store',
                                                    listeners: {
                                                        keyup: {
                                                            fn: me.onRW1_f11Keyup11,
                                                            scope: me
                                                        },
                                                        expand: {
                                                            fn: me.onB_ri_flow_selectExpand,
                                                            scope: me
                                                        },
                                                        change: {
                                                            fn: me.onB_ri_flow_selectChange,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    x: 0,
                                                    y: 340,
                                                    id: 'b_riCount_Pat',
                                                    width: 280,
                                                    fieldLabel: 'Count',
                                                    labelSeparator: ' ',
                                                    labelWidth: 150,
                                                    allowBlank: false
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 345,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender20,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'container',
                                                    x: 0,
                                                    y: 375,
                                                    width: 380,
                                                    layout: {
                                                        type: 'table',
                                                        columns: 2
                                                    },
                                                    items: [
                                                        {
                                                            xtype: 'numberfield',
                                                            id: 'b_riTime1_Pat',
                                                            width: 280,
                                                            fieldLabel: 'Time Window',
                                                            labelSeparator: ' ',
                                                            labelWidth: 150,
                                                            value: 60,
                                                            allowBlank: false,
                                                            allowDecimals: false,
                                                            minValue: 1
                                                        },
                                                        {
                                                            xtype: 'combobox',
                                                            id: 'b_riTime2_Pat',
                                                            padding: '0 0 0 10',
                                                            width: 86,
                                                            fieldLabel: '',
                                                            value: 'Seconds',
                                                            editable: false,
                                                            displayField: 'field',
                                                            queryMode: 'local',
                                                            store: 'b_riTime2_Pat'
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 380,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender21,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 290,
                                                    y: 343,
                                                    text: 'times'
                                                }
                                            ],
                                            listeners: {
                                                show: {
                                                    fn: me.onB_patternRuleContShow,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'container',
                                            reset: function() {
                                                Ext.getCmp('b_riVelocity1_geo').reset();//should result in checked
                                                Ext.getCmp('b_riVelocity2_geo').reset();
                                                Ext.getCmp('b_riVelocity3_geo').reset();


                                                var storeSel;
                                                var storeAll;
                                                //reset the allow chosen to empty and reload the all store
                                                storeSel = Ext.getCmp('b_riBlockChosenList2_geo').getStore().removeAll();
                                                storeAll = Ext.getCmp('b_riBlockAllList2_geo').getStore().load();

                                                storeSel = Ext.getCmp('b_riAllowChosenList2_geo').getStore().removeAll();
                                                storeAll = Ext.getCmp('b_riAllowAllList2_geo').getStore().load()

                                            },
                                            height: 475,
                                            hidden: true,
                                            id: 'b_geoRuleCont',
                                            width: 730,
                                            layout: 'absolute',
                                            items: [
                                                {
                                                    xtype: 'radiofield',
                                                    id: 'b_riVelocity1_geo',
                                                    fieldLabel: '',
                                                    readOnly: true,
                                                    boxLabel: 'Geographic Change-of-Position Velocity',
                                                    checked: true,
                                                    listeners: {
                                                        change: {
                                                            fn: me.onRadiofieldChange2,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'numberfield',
                                                    x: 70,
                                                    y: 30,
                                                    id: 'b_riVelocity2_geo',
                                                    width: 90,
                                                    fieldLabel: 'Km in',
                                                    labelSeparator: ' ',
                                                    labelWidth: 35,
                                                    value: 60,
                                                    inputType: 'number',
                                                    readOnly: true,
                                                    maxValue: 99999,
                                                    minValue: 0
                                                },
                                                {
                                                    xtype: 'numberfield',
                                                    x: 10,
                                                    y: 30,
                                                    id: 'b_riVelocity3_geo',
                                                    width: 50,
                                                    labelSeparator: ' ',
                                                    value: 10,
                                                    inputType: 'number',
                                                    readOnly: true
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: 0,
                                                    y: 100,
                                                    id: 'b_riAllowCountry1_geo',
                                                    fieldLabel: '',
                                                    readOnly: true,
                                                    boxLabel: 'User Origin Outside of',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_riAllowCountry1_geoChange1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'radiofield',
                                                    x: -1,
                                                    y: 290,
                                                    id: 'b_riBlockCountry1_geo',
                                                    fieldLabel: '',
                                                    readOnly: true,
                                                    boxLabel: 'User Origin Inside',
                                                    listeners: {
                                                        change: {
                                                            fn: me.onB_riBlockCountry1_geoChange1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 10,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender291,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 100,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender301,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 290,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender311,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 750,
                                                    y: 460,
                                                    height: 20,
                                                    hidden: true,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender351,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 15,
                                                    y: 130,
                                                    text: '(Ctrl+Click)'
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 20,
                                                    y: 320,
                                                    text: '(Ctrl+Click)'
                                                },
                                                {
                                                    xtype: 'container',
                                                    x: 210,
                                                    y: 100,
                                                    disabled: true,
                                                    height: 160,
                                                    id: 'b_riAllowCont',
                                                    width: 430,
                                                    layout: 'absolute',
                                                    items: [
                                                        {
                                                            xtype: 'button',
                                                            x: 200,
                                                            y: 100,
                                                            id: 'b_remove1',
                                                            text: '<<',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.b_remove1click,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'button',
                                                            x: 200,
                                                            y: 60,
                                                            id: 'b_add1',
                                                            text: '>>',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.b_add1click,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridpanel',
                                                            x: 10,
                                                            y: 5,
                                                            height: 150,
                                                            id: 'b_riAllowAllList2_geo',
                                                            width: 150,
                                                            title: '',
                                                            forceFit: true,
                                                            store: 'b_geoOutsideAll',
                                                            columns: [
                                                                {
                                                                    xtype: 'gridcolumn',
                                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                                        return '<span class="flag flag-' + record.get('Alias') + '"></span>&nbsp;&nbsp;'+record.get('Country');
                                                                    },
                                                                    width: 185,
                                                                    dataIndex: 'Country',
                                                                    text: 'All'
                                                                }
                                                            ],
                                                            viewConfig: {
                                                                plugins: [
                                                                    Ext.create('Ext.grid.plugin.DragDrop', {

                                                                    })
                                                                ],
                                                                listeners: {
                                                                    drop: {
                                                                        fn: me.onGriddragdroppluginDrop21,
                                                                        scope: me
                                                                    }
                                                                }
                                                            },
                                                            selModel: Ext.create('Ext.selection.RowModel', {
                                                                mode: 'MULTI'
                                                            }),
                                                            listeners: {
                                                                render: {
                                                                    fn: me.onB_riAllowAllList2_geoRender,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridpanel',
                                                            x: 270,
                                                            y: 5,
                                                            height: 150,
                                                            id: 'b_riAllowChosenList2_geo',
                                                            width: 150,
                                                            title: '',
                                                            forceFit: true,
                                                            store: 'b_geoOutsideChosen',
                                                            columns: [
                                                                {
                                                                    xtype: 'gridcolumn',
                                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                                        return '<span class="flag flag-' + record.get('Alias') + '"></span>&nbsp;&nbsp;'+record.get('Country')+'</div>';
                                                                    },
                                                                    width: 185,
                                                                    dataIndex: 'Country',
                                                                    text: 'Selected'
                                                                }
                                                            ],
                                                            viewConfig: {
                                                                plugins: [
                                                                    Ext.create('Ext.grid.plugin.DragDrop', {

                                                                    })
                                                                ],
                                                                listeners: {
                                                                    drop: {
                                                                        fn: me.onGriddragdroppluginDrop111,
                                                                        scope: me
                                                                    }
                                                                }
                                                            },
                                                            selModel: Ext.create('Ext.selection.RowModel', {
                                                                mode: 'MULTI'
                                                            }),
                                                            listeners: {
                                                                render: {
                                                                    fn: me.onB_riAllowChosenList2_geoRender,
                                                                    scope: me
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'container',
                                                    x: 210,
                                                    y: 290,
                                                    disabled: true,
                                                    height: 160,
                                                    id: 'b_riBlockCont',
                                                    width: 430,
                                                    layout: 'absolute',
                                                    items: [
                                                        {
                                                            xtype: 'button',
                                                            x: 200,
                                                            y: 100,
                                                            id: 'b_remove2',
                                                            text: '<<',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.b_remove2click,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'button',
                                                            x: 200,
                                                            y: 60,
                                                            id: 'b_add2',
                                                            text: '>>',
                                                            listeners: {
                                                                click: {
                                                                    fn: me.b_add2click,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridpanel',
                                                            x: 10,
                                                            y: 5,
                                                            height: 150,
                                                            id: 'b_riBlockAllList2_geo',
                                                            width: 150,
                                                            title: '',
                                                            forceFit: true,
                                                            store: 'b_geoInsideAll',
                                                            columns: [
                                                                {
                                                                    xtype: 'gridcolumn',
                                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                                        return '<span class="flag flag-' + record.get('Alias') + '"></span>&nbsp;&nbsp;'+record.get('Country');
                                                                    },
                                                                    width: 185,
                                                                    dataIndex: 'Country',
                                                                    text: 'All'
                                                                }
                                                            ],
                                                            viewConfig: {
                                                                plugins: [
                                                                    Ext.create('Ext.grid.plugin.DragDrop', {

                                                                    })
                                                                ],
                                                                listeners: {
                                                                    drop: {
                                                                        fn: me.onGriddragdroppluginDrop211,
                                                                        scope: me
                                                                    }
                                                                }
                                                            },
                                                            selModel: Ext.create('Ext.selection.RowModel', {
                                                                mode: 'MULTI'
                                                            }),
                                                            listeners: {
                                                                render: {
                                                                    fn: me.onB_riBlockAllList2_geoRender,
                                                                    scope: me
                                                                }
                                                            }
                                                        },
                                                        {
                                                            xtype: 'gridpanel',
                                                            x: 270,
                                                            y: 5,
                                                            height: 150,
                                                            id: 'b_riBlockChosenList2_geo',
                                                            width: 150,
                                                            title: '',
                                                            forceFit: true,
                                                            store: 'b_geoInsideChosen',
                                                            columns: [
                                                                {
                                                                    xtype: 'gridcolumn',
                                                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

                                                                        return '<span class="flag flag-' + record.get('Alias') + '"></span>&nbsp;&nbsp;'+record.get('Country');
                                                                    },
                                                                    width: 185,
                                                                    dataIndex: 'Country',
                                                                    text: 'Selected'
                                                                }
                                                            ],
                                                            viewConfig: {
                                                                plugins: [
                                                                    Ext.create('Ext.grid.plugin.DragDrop', {

                                                                    })
                                                                ],
                                                                listeners: {
                                                                    drop: {
                                                                        fn: me.onGriddragdroppluginDrop1111,
                                                                        scope: me
                                                                    }
                                                                }
                                                            },
                                                            selModel: Ext.create('Ext.selection.RowModel', {
                                                                mode: 'MULTI'
                                                            }),
                                                            listeners: {
                                                                render: {
                                                                    fn: me.onB_riBlockChosenList2_geoRender,
                                                                    scope: me
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                {
                                                    xtype: 'label',
                                                    x: 170,
                                                    y: 33,
                                                    text: 'Seconds'
                                                }
                                            ],
                                            listeners: {
                                                show: {
                                                    fn: me.onB_geoRuleContShow,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'container',
                                            reset: function() {
                                                Ext.getCmp('b_riBotType_bot').reset();
                                            },
                                            height: 120,
                                            hidden: true,
                                            id: 'b_botRuleCont',
                                            width: 730,
                                            layout: 'absolute',
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    x: 0,
                                                    cls: 'tp-title',
                                                    width: 730,
                                                    text: 'Parameter'
                                                },
                                                {
                                                    xtype: 'combobox',
                                                    y: 40,
                                                    id: 'b_riBotType_bot',
                                                    fieldLabel: 'Bot Type',
                                                    labelAlign: 'top',
                                                    labelStyle: 'margin-bottom:20px;font-weight:bold;',
                                                    value: 'Tor',
                                                    editable: false,
                                                    displayField: 'type',
                                                    queryMode: 'local',
                                                    store: 'bot_type_store'
                                                },
                                                {
                                                    xtype: 'image',
                                                    x: 710,
                                                    y: 82,
                                                    height: 20,
                                                    width: 20,
                                                    src: 'Htmls/images/question.png',
                                                    listeners: {
                                                        render: {
                                                            fn: me.onImageRender23,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ],
                                            listeners: {
                                                show: {
                                                    fn: me.onB_botRuleContShow,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'numberfield',
                    hidden: true,
                    id: 'b_visited',
                    fieldLabel: 'Label',
                    value: 0
                }
            ]
        });

        me.callParent(arguments);
    },

    onTreeviewItemContextMenu: function(dataview, record, item, index, e, eOpts) {
        handleRightClick(dataview,record,item,index,e,eOpts);
    },

    onViewItemMouseEnter: function(dataview, record, item, index, e, eOpts) {
        telepath.rules.mouseEnter(dataview, record, item, index, e, eOpts);
    },

    onViewItemMouseLeave: function(dataview, record, item, index, e, eOpts) {
        telepath.rules.mouseLeave(dataview, record, item, index, e, eOpts);
    },

    onMenuitemClick2: function(item, e, eOpts) {
        Ext.create('MyApp.view.add_new_rules_category').show();
    },

    onMenuitemClick1: function(item, e, eOpts) {
        Ext.create('MyApp.view.add_new_rules_group').show();
    },

    onMenuitemClick: function(item, e, eOpts) {
        open_rules_wizard()
    },

    onB_addRuleClick: function(button, e, eOpts) {
        if (!button.hasVisibleMenu()){
            button.showMenu(  )
        }
        else{
            button.hideMenu(  )
        }

    },

    onB_deleteClick: function(button, e, eOpts) {
        open_delete_rule_window();
    },

    onB_ruleGroupsSelect: function(rowmodel, record, index, eOpts) {
        telepath.rules.selectRuleOrGroup(rowmodel,record,index,eOpts);
        if (!record.data.leaf){
            record.expand();
        }
    },

    onB_ruleGroupsBeforeItemExpand: function(nodeinterface, eOpts) {
        b_itemExpand(nodeinterface,eOpts);
    },

    onB_saveGroupClick: function(button, e, eOpts) {
        updateRulesGroupValues();

    },

    onB_cancelGroupClick1: function(button, e, eOpts) {
        cancel_group_edit()
    },

    onB_rgiLiteralCBChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_rgiLiteralField').enable();
            Ext.getCmp('b_rgiNumericCB').setValue(false);
            if (Ext.getCmp('b_rgiLiteralField').getValue()==null)
            Ext.getCmp('b_rgiLiteralField').setValue('Low');

        }
        else{
            Ext.getCmp('b_rgiLiteralField').disable();
            Ext.getCmp('b_rgiNumericCB').setValue(true);
        }
    },

    onB_rgiNumericCBChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_rgiNumericField').enable();
            Ext.getCmp('b_rgiLiteralCB').setValue(false);

        }
        else{
            Ext.getCmp('b_rgiNumericField').disable();
            Ext.getCmp('b_rgiLiteralCB').setValue(true);
        }
    },

    onB_rgiFlowCBChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_rgiFlowField').enable();

        }
        else{
            Ext.getCmp('b_rgiFlowField').disable();
        }
    },

    onB_rgiEmailCBChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_rgiEmailField_cont').show()
        }
        else{
            Ext.getCmp('b_rgiEmailField_cont').hide()
        }
    },

    onTextfieldKeypress122: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;
        var field = Ext.getCmp('b_rgiEmailField_field');
        var dup = check_for_duplicates(field,Ext.getCmp('b_rgiEmailField').getStore())
        var new_add = field.getValue();
        if (field.isValid() && !dup){
            Ext.getCmp('b_rgiEmailField').getStore().add({address:new_add});
        	field.reset();
        	field.clearInvalid()
        }
        if (dup){
            field.reset();
            field.clearInvalid()
        }

    },

    c_network_ipclick1: function(button, e, eOpts) {
        var field = Ext.getCmp('b_rgiEmailField_field');
        var dup = check_for_duplicates(field,Ext.getCmp('b_rgiEmailField').getStore())
        var new_add = field.getValue();
        if (field.isValid() && !dup){
            Ext.getCmp('b_rgiEmailField').getStore().add({address:new_add});
        	field.reset();
        	field.clearInvalid()
        }
        if (dup){
            field.reset();
            field.clearInvalid()
        }
    },

    onCellEditingValidateedit: function(editor, e, eOpts) {
        return validate_edition(editor,e)
    },

    b_ri_alert_add_click: function(button, e, eOpts) {
        open_parameters_window_for_alerts('b_ri_alert_params')
    },

    onB_ri_alert_idChange11: function(field, newValue, oldValue, eOpts) {
        var store=Ext.getCmp("b_ri_alert_params").getStore()
        var param_name = Ext.getCmp('b_ri_alert_name').getValue()
        var record = store.find('td1',newValue,0,false,false,true)
        if (record!=-1){
            Ext.Msg.alert('Info', 'Parameter '+param_name+' has already been selected.');
            return;
        }
        if (param_record_to_override){
            param_record_to_override.set('td1',newValue)
            param_record_to_override.set('td0',param_name)
            param_record_to_override = undefined
        }
        else{
            store.add({
                td0:param_name,
                td1:newValue
            })
        }

    },

    onB_startPanelShow: function(component, eOpts) {
        Ext.getCmp('b_ruleInfoPanel').hide()
        Ext.getCmp('b_groupInfoPanel').hide()
    },

    onB_saveRuleClick: function(button, e, eOpts) {
        updateRuleValues();
        Ext.getCmp('b_delete').disable();
    },

    onB_cancelGroupClick: function(button, e, eOpts) {
        changeAbility(false,"rule");
        Ext.getCmp('b_ruleGroups').enable();
        cancel_changes();
    },

    onB_riRuleEnabledChange: function(field, newValue, oldValue, eOpts) {
        select_parameter_if_needed(newValue);
    },

    onB_riRuleTypeChange: function(field, newValue, oldValue, eOpts) {
        if (newValue=="Parameter"){
            Ext.getCmp('b_parameterRuleCont').show();
        }
        else if(newValue=="Pattern"){
            Ext.getCmp('b_patternRuleCont').show();
        }
        else if(newValue=="Behavior"){
            Ext.getCmp('b_aspectRuleCont').show();
        }
        else if(newValue=="Geographic"){
            Ext.getCmp('b_geoRuleCont').show();
        }
        else if(newValue=="Bot-Intelligence"){
            Ext.getCmp('b_botRuleCont').show();
        }

        Ext.getCmp('b_ri_rule_score_cont').show();

        /*if (newValue != 'Parameter Rule') {
        Ext.getCmp('b_ri_rule_score_cont').show();
        } else {
        Ext.getCmp('b_ri_rule_score_cont').hide();
        }*/
    },

    onB_imageRender: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: '&#9679; <b>Parameter Rule</b><br>Rules may be limited to specific applications, specific user names or specific IP addresses. For instance: one may define one rule-set for internal IP addresses, and a different rule-set for external web users.Rules may be limited to specific applications, specific user names or specific IP addresses. For instance: one may define one rule-set for internal IP addresses, and a different rule-set for external web users.<br>&#9679; <b>Behaviour Rule</b> <br> Inspect one aspect of the web user\'s behavior such as: landing speed, path, geographic location and so on. This behavior aspect is measured heuristically and compared with known behavior.<br>&#9679; <b>Pattern Rule</b> <br>Detect repetitive patterns over a predefined period of time. Password brute-force attacks are a good example, for instance: ten different passwords attempted with the same user-name over a period of two minutes.'
        });


    },

    onB_riAppCBChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riAppField').enable();
        }
        else{
            Ext.getCmp('b_riAppField').disable();
        }
    },

    onB_riAppFieldChange: function(field, newValue, oldValue, eOpts) {
        // On change app unvalidate flow if set and not matching app
        if (Ext.getCmp('b_riRuleType').value == 'Pattern Rule') {

            if (newValue !="" && Ext.getCmp('b_riAppCB').value && Ext.getCmp('b_ri_flow_radio') && Ext.getCmp('b_ri_flow_select').value != '') {

                var app_store  = Ext.getCmp('b_riAppField').getStore();
                var app_app_id = false;

                app_store.each(function(record){
                    if (record.get('app')==newValue) {
                        app_app_id = record.get('id');
                    }
                });

                var flow_store = Ext.getCmp('b_ri_flow_select').getStore();
                var flow_app_id = false;

                flow_store.each(function(record){
                    if (record.get('group')==Ext.getCmp('b_ri_flow_select').value) {
                        flow_app_id = record.get('app_id');
                    }
                });

                if(app_app_id != flow_app_id) {
                    Ext.getCmp('b_ri_flow_select').setValue(null);
                }

            }

        }
    },

    onImageRender: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Application to apply rule on'
        });
    },

    onB_riIpCBChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riIpField').enable();
            Ext.getCmp('b_riIpNot').enable();
            Ext.getCmp('b_riIpAdd').enable();
        }
        else {
        	Ext.getCmp('b_riIpField').disable();
            Ext.getCmp('b_riIpNot').disable();
            Ext.getCmp('b_riIpAdd').disable();
        }
    },

    onImageRender1: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'IP to apply rule on'
        });
    },

    onB_riUserCBChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riUserField').enable();
           // Ext.getCmp('b_riAppCB').setValue(false);
           // Ext.getCmp('b_riIpCB').setValue(false);
        }
        else
            Ext.getCmp('b_riUserField').disable();
    },

    onImageRender2211: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'User to apply rule on'
        });
    },

    onB_rIpAddClick: function(button, e, eOpts) {
        telepath.rules.addIPsButtonClick('editor');
    },

    onB_riScoreType1_AChange: function(field, newValue, oldValue, eOpts) {
        if (newValue=="Numeric"){
            Ext.getCmp('b_riScoreType2').show();
            Ext.getCmp('b_riScoreType3').hide();
        }
        else{
            Ext.getCmp('b_riScoreType3').show();
            Ext.getCmp('b_riScoreType2').hide();
        }
    },

    onImageRender: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Alert if this score exceeds this grade (Or is Low/Medium/High when score type is "Literal")'
        });
    },

    onB_par_radio_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue) {

            Ext.getCmp('b_par_radio_2').setValue(false);
            Ext.getCmp('b_par_radio_3').setValue(false);
            Ext.getCmp('b_par_radio_4').setValue(false);

            var b_par_containers = ["b_par_similar_cont",
            "b_par_between_cont",
            "b_par_length_cont",
            "b_par_fuzzy_cont",
            "b_par_contains_cont",
            "b_par_regex_cont",
            "b_par_heuristic_cont"];

            $.each(b_par_containers, function(i, cont) {
                Ext.getCmp(cont).show();
            });

            Ext.getCmp('b_riBrowse').enable();
            Ext.getCmp('b_riAttributeField_P').enable();
            Ext.getCmp('b_par_post_cb').disable();
            Ext.getCmp('b_par_get_cb').disable();
            Ext.getCmp('b_par_header_cb').disable();

        }
    },

    onB_par_radio_1Render: function(component, eOpts) {
        Ext.getCmp('b_par_radio_1').fireEvent('change')
    },

    onB_riPageField_browseClick: function(button, e, eOpts) {
        telepath.rules.openParameters("Parameter_View_Page");
    },

    onImageRender36: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Page to apply rule on'
        });
    },

    b_ri_browseclick: function(button, e, eOpts) {
        telepath.rules.openParameters("Parameter_View_Attribute");
    },

    onImageRender3: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Attribute to apply rule on'
        });
    },

    onB_par_radio_2Change: function(field, newValue, oldValue, eOpts) {
        if (newValue) {

            Ext.getCmp('b_par_radio_1').setValue(false);
            Ext.getCmp('b_par_radio_3').setValue(false);
            Ext.getCmp('b_par_radio_4').setValue(false);
            Ext.getCmp('b_riRegexCB_P').setValue(true);

            var b_par_containers = ["b_par_similar_cont",
            "b_par_between_cont",
            "b_par_length_cont",
            "b_par_fuzzy_cont",
            "b_par_contains_cont",
            "b_par_heuristic_cont"];

            $.each(b_par_containers, function(i, cont) {
                Ext.getCmp(cont).hide();
            });

            Ext.getCmp('b_riBrowse').disable();
            Ext.getCmp('b_riAttributeField_P').disable();
            Ext.getCmp('b_par_post_cb').enable();
            Ext.getCmp('b_par_get_cb').enable();
            Ext.getCmp('b_par_header_cb').enable();

        }
    },

    onB_par_radio_2Render: function(component, eOpts) {
        Ext.getCmp('b_par_radio_2').fireEvent('change')
    },

    onB_par_radio_2Change1: function(field, newValue, oldValue, eOpts) {
        if (newValue) {

            Ext.getCmp('b_par_radio_1').setValue(false);
            Ext.getCmp('b_par_radio_2').setValue(false);
            Ext.getCmp('b_par_radio_4').setValue(false);

            var b_par_containers = [
            "b_par_between_cont",
            "b_par_length_cont",
            "b_par_fuzzy_cont",
            "b_par_similar_cont",
            "b_par_heuristic_cont" ];

            $.each(b_par_containers, function(i, cont) {
                Ext.getCmp(cont).hide();
            });

            Ext.getCmp("b_par_contains_cont").show();

            if(!Ext.getCmp("b_riStringCB_P").value && !Ext.getCmp("b_riRegexCB_P").value) {
                Ext.getCmp("b_riRegexCB_P").setValue(true);
            }



            Ext.getCmp('b_riBrowse').disable();
            Ext.getCmp('b_riAttributeField_P').disable();
            Ext.getCmp('b_par_post_cb').disable();
            Ext.getCmp('b_par_get_cb').disable();
            Ext.getCmp('b_par_header_cb').disable();

        }
    },

    onB_par_radio_2Render1: function(component, eOpts) {
        Ext.getCmp('b_par_radio_2').fireEvent('change')
    },

    onB_par_radio_2Change11: function(field, newValue, oldValue, eOpts) {
        if (newValue) {

            Ext.getCmp('b_par_radio_1').setValue(false);
            Ext.getCmp('b_par_radio_2').setValue(false);
            Ext.getCmp('b_par_radio_3').setValue(false);

            var b_par_containers = [
            "b_par_between_cont",
            "b_par_length_cont",
            "b_par_fuzzy_cont",
            "b_par_similar_cont",
            "b_par_heuristic_cont" ];

            $.each(b_par_containers, function(i, cont) {
                Ext.getCmp(cont).hide();
            });

            Ext.getCmp("b_par_contains_cont").show();

            if(!Ext.getCmp("b_riStringCB_P").value && !Ext.getCmp("b_riRegexCB_P").value) {
                Ext.getCmp("b_riRegexCB_P").setValue(true);
            }



            Ext.getCmp('b_riBrowse').disable();
            Ext.getCmp('b_riAttributeField_P').disable();
            Ext.getCmp('b_par_post_cb').disable();
            Ext.getCmp('b_par_get_cb').disable();
            Ext.getCmp('b_par_header_cb').disable();

        }
    },

    onB_par_radio_2Render11: function(component, eOpts) {
        Ext.getCmp('b_par_radio_2').fireEvent('change')
    },

    onB_riHeuristicCB_PChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riStringCB_P').setValue(false);
            Ext.getCmp('b_riRegexCB_P').setValue(false);
            Ext.getCmp('b_riFuzzyCB_P').setValue(false);
            Ext.getCmp('b_riCharLengthCB_P').setValue(false);
            Ext.getCmp('b_riLengthCB_P').setValue(false);
            Ext.getCmp('b_riSimilarCB_P').setValue(false);
            Ext.getCmp('b_riStringCB_P').setValue(false);

        }
    },

    onImageRender11: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: "Alert if the score heuristically exceeds the one in 'Score Type' field"
        });
    },

    onB_riRegexCB_PChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riStringCB_P').setValue(false);
            Ext.getCmp('b_riHeuristicCB_P').setValue(false);
            Ext.getCmp('b_riFuzzyCB_P').setValue(false);
            Ext.getCmp('b_riCharLengthCB_P').setValue(false);
            Ext.getCmp('b_riLengthCB_P').setValue(false);
            Ext.getCmp('b_riSimilarCB_P').setValue(false);
            Ext.getCmp('b_riStringCB_P').setValue(false);
            Ext.getCmp('b_riRegexField_P').enable();
            Ext.getCmp('b_riRegexNotCB_P').enable();

        }
        else{
            Ext.getCmp('b_riRegexField_P').disable();
            Ext.getCmp('b_riRegexNotCB_P').disable();
        }
    },

    onImageRender4: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Alert if the chosen attribute contains the Regex (Or not)'
        });
    },

    onB_riStringCB_PChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riHeuristicCB_P').setValue(false);
            Ext.getCmp('b_riRegexCB_P').setValue(false);
            Ext.getCmp('b_riFuzzyCB_P').setValue(false);
            Ext.getCmp('b_riCharLengthCB_P').setValue(false);
            Ext.getCmp('b_riLengthCB_P').setValue(false);
            Ext.getCmp('b_riSimilarCB_P').setValue(false);
            Ext.getCmp('b_riStringField_P').enable();
            Ext.getCmp('b_riStringNotCB_P').enable();
        }
        else{
            Ext.getCmp('b_riStringField_P').disable();
            Ext.getCmp('b_riStringNotCB_P').disable();
        }
    },

    onImageRender5: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: "Alert if the chosen attribute's value contains the string (Or not)"
        });
    },

    onB_riFuzzyCB_PChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riStringCB_P').setValue(false);
            Ext.getCmp('b_riRegexCB_P').setValue(false);
            Ext.getCmp('b_riHeuristicCB_P').setValue(false);
            Ext.getCmp('b_riCharLengthCB_P').setValue(false);
            Ext.getCmp('b_riLengthCB_P').setValue(false);
            Ext.getCmp('b_riSimilarCB_P').setValue(false);
            Ext.getCmp('b_riStringCB_P').setValue(false);
            if (Ext.getCmp("b_riFuzzyField_P").getValue()!="Is too Short" && Ext.getCmp("b_riFuzzyField_P").getValue()!="Is too Long" && Ext.getCmp("b_riFuzzyField_P").getValue()!="Either Short/Long")
            Ext.getCmp("b_riFuzzyField_P").setValue("Is too Short");
            Ext.getCmp('b_riFuzzyField_P').enable();
        }
        else{
            Ext.getCmp('b_riFuzzyField_P').disable();

        }
    },

    onImageRender6: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: "Check if the chosen attribute value's length is 'Short', 'Long' or both"
        });
    },

    onB_riCharLengthCB_PChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riStringCB_P').setValue(false);
            Ext.getCmp('b_riRegexCB_P').setValue(false);
            Ext.getCmp('b_riFuzzyCB_P').setValue(false);
            Ext.getCmp('b_riHeuristicCB_P').setValue(false);
            Ext.getCmp('b_riLengthCB_P').setValue(false);
            Ext.getCmp('b_riSimilarCB_P').setValue(false);
            Ext.getCmp('b_riStringCB_P').setValue(false);
            Ext.getCmp('b_riCharLengthField_P').enable();
        }
        else{
            Ext.getCmp('b_riCharLengthField_P').disable();
        }
    },

    onImageRender7: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: "Alert if this is the length of the chosen attribute's value"
        });
    },

    onB_riLengthCB_PChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riStringCB_P').setValue(false);
            Ext.getCmp('b_riRegexCB_P').setValue(false);
            Ext.getCmp('b_riFuzzyCB_P').setValue(false);
            Ext.getCmp('b_riCharLengthCB_P').setValue(false);
            Ext.getCmp('b_riHeuristicCB_P').setValue(false);
            Ext.getCmp('b_riSimilarCB_P').setValue(false);
            Ext.getCmp('b_riStringCB_P').setValue(false);
            Ext.getCmp('b_riLengthField1_P').enable();
            Ext.getCmp('b_riLengthField2_P').enable();
        }
        else{
            Ext.getCmp('b_riLengthField1_P').disable();
            Ext.getCmp('b_riLengthField2_P').disable();
        }
    },

    onImageRender8: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: "Alert if the length of the chosen attribute's value is in this range"
        });
    },

    onB_riSimilarCB_PChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_riStringCB_P').setValue(false);
            Ext.getCmp('b_riRegexCB_P').setValue(false);
            Ext.getCmp('b_riFuzzyCB_P').setValue(false);
            Ext.getCmp('b_riCharLengthCB_P').setValue(false);
            Ext.getCmp('b_riLengthCB_P').setValue(false);
            Ext.getCmp('b_riHeuristicCB_P').setValue(false);
            Ext.getCmp('b_riSimilarField_P').enable();
        }
        else{
            Ext.getCmp('b_riSimilarField_P').disable();

        }
    },

    onImageRender9: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: "Alert if attribute values assimilate by this number of characters"
        });
    },

    onB_parameterRuleContShow: function(component, eOpts) {
        Ext.getCmp('b_aspectRuleCont').hide();
        Ext.getCmp('b_patternRuleCont').hide();
        Ext.getCmp('b_botRuleCont').hide();
        Ext.getCmp('b_geoRuleCont').hide();
    },

    onImageRender: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Score type to focus on'
        });
    },

    onImageRender: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Consider rule per users individually'
        });
    },

    onB_aspectRuleContShow: function(component, eOpts) {
        Ext.getCmp('b_parameterRuleCont').hide();
        Ext.getCmp('b_patternRuleCont').hide();
        Ext.getCmp('b_botRuleCont').hide();
        Ext.getCmp('b_geoRuleCont').hide();
    },

    onB_riIp_PatChange: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onImageRender16: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Check this button if IP is constant and other attributes change'
        });
    },

    onB_riSid_PatChange: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onImageRender17: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Check this button if SID is constant and other attributes change'
        });
    },

    onRadiofieldChange: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onImageRender171: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Check this button if the user is constant and other attributes change'
        });
    },

    onB_riOther_PatChange: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onB_riOtherBrowser_PatClick: function(button, e, eOpts) {
        telepath.rules.openParameters("Pattern_Other_View");
    },

    onImageRender18: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Check this button if the value in field is constant and other attributes change'
        });
    },

    onImageRender19: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Alert if the value of this attribute is dynamic (Changes rapidly)'
        });
    },

    onImageRender191: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Business flow alert condition'
        });
    },

    onImageRender1911: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Username change alert condition'
        });
    },

    onB_ri_page_radioChange: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onB_ri_page_radioChange1: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onB_riPageField_browseClick: function(button, e, eOpts) {
        telepath.rules.openParameters("page_view");
    },

    b_riPageField_id_pat_click: function(button, e, eOpts) {
        Ext.getCmp('b_riPageField_pat').reset();
        Ext.getCmp('b_riPageField_id_pat').reset();
        Ext.getCmp('b_saveRule').disable();
    },

    onImageRender36: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Page to apply rule on'
        });
    },

    onB_ri_parameter_radioChange: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onB_riDynamicBrowser_PatClick: function(button, e, eOpts) {
        telepath.rules.openParameters("Pattern_Dynamic_View");
    },

    b_riDynamic_Pat_idrem_click: function(button, e, eOpts) {
        Ext.getCmp('b_riDynamic_Pat').reset();
        Ext.getCmp('b_riDynamic_Pat_id').reset();
        //Ext.getCmp('b_saveRule').disable();
    },

    onB_ri_parameter_radioChange1: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onRW1_f11Keyup11: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    onB_ri_flow_selectExpand: function(field, eOpts) {
        if(Ext.getCmp('b_riAppCB').value) { // App filter is on

        	var app_id = Ext.getCmp('b_riAppField').store.findRecord('app', Ext.getCmp('b_riAppField').value).data.id;
            Ext.getCmp('b_ri_flow_select').store.filterBy(function(rec) {
                return rec.data.app_id == app_id || app_id == -1;
        	});

        }
    },

    onB_ri_flow_selectChange: function(field, newValue, oldValue, eOpts) {
        if(newValue != '' && Ext.getCmp('b_ri_flow_radio').value) {
            Ext.getCmp('b_riAppCB').setValue(true);

        	var store  = Ext.getCmp('b_ri_flow_select').getStore();

            store.each(function(record){
                if (record.get('group')==newValue) {
                    var app_id = record.get('app_id');
                    var store  = Ext.getCmp('b_riAppField').getStore();
        			if(app_id != ""){
        					store.each(function(record){
        						if (record.get('id')==app_id){
        							Ext.getCmp('b_riAppField').setValue(record.get('app'));
        						}
        					});
        				}
                }
            });

        }
    },

    onImageRender20: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Alert after exceeding this number of rule-violation'
        });
    },

    onImageRender21: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Time window in which the violation was made'
        });
    },

    onB_patternRuleContShow: function(component, eOpts) {
        Ext.getCmp('b_parameterRuleCont').hide();
        Ext.getCmp('b_aspectRuleCont').hide();
        Ext.getCmp('b_botRuleCont').hide();
        Ext.getCmp('b_geoRuleCont').hide();
    },

    onRadiofieldChange2: function(field, newValue, oldValue, eOpts) {
        if (newValue){
                Ext.getCmp("b_riBlockCountry1_geo").setValue(false);
                Ext.getCmp("b_riAllowCountry1_geo").setValue(false);
                Ext.getCmp("b_riVelocity3_geo").enable();
                Ext.getCmp("b_riVelocity2_geo").enable();

        }
        else{

                Ext.getCmp("b_riVelocity3_geo").disable();
                Ext.getCmp("b_riVelocity2_geo").disable();
        }
    },

    onB_riAllowCountry1_geoChange1: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp("b_riBlockCountry1_geo").setValue(false);
            Ext.getCmp("b_riVelocity1_geo").setValue(false);
            Ext.getCmp("b_riAllowCont").enable();


        }
        else{

            Ext.getCmp("b_riAllowCont").disable();


        }
    },

    onB_riBlockCountry1_geoChange1: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp("b_riAllowCountry1_geo").setValue(false);
            Ext.getCmp("b_riVelocity1_geo").setValue(false);
            Ext.getCmp("b_riBlockCont").enable();


        }
        else{

            Ext.getCmp("b_riBlockCont").disable();


        }
    },

    onImageRender291: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Alert if user changes his/her location more frequent than "Time" and outside of "Radius"'
        });
    },

    onImageRender301: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Do Not treat these countries'
        });
    },

    onImageRender311: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Treat these countries only'
        });
    },

    onImageRender351: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Choose score type for rule'
        });
    },

    b_remove1click: function(button, e, eOpts) {

        var alreadySelected = Ext.getCmp('b_riAllowChosenList2_geo').getSelectionModel().getSelection();
        var storeSel = Ext.getCmp('b_riAllowChosenList2_geo').getStore();
        var storeAll = Ext.getCmp('b_riAllowAllList2_geo').getStore();
        for(var i=0;i<alreadySelected.length;i++){
            storeSel.remove(alreadySelected[i]);
            storeAll.add(alreadySelected[i]);
        }

        Ext.getCmp('b_riAllowAllList2_geo').getStore().sort('Country','ASC');
    },

    b_add1click: function(button, e, eOpts) {


        var newSelected = Ext.getCmp('b_riAllowAllList2_geo').getSelectionModel().getSelection();
        var storeSel = Ext.getCmp('b_riAllowChosenList2_geo').getStore();
        var storeAll = Ext.getCmp('b_riAllowAllList2_geo').getStore();
        for(var i=0;i<newSelected.length;i++){
            storeAll.remove(newSelected[i]);
            storeSel.add(newSelected[i]);
        }

        Ext.getCmp('b_riAllowChosenList2_geo').getStore().sort('Country','ASC');
    },

    onGriddragdroppluginDrop21: function() {
        Ext.getCmp('b_riAllowAllList2_geo').getStore().sort('Country','ASC');
    },

    onB_riAllowAllList2_geoRender: function(component, eOpts) {
        component.getStore().sort('Country','ASC');
    },

    onGriddragdroppluginDrop111: function() {
        Ext.getCmp('b_riAllowChosenList2_geo').getStore().sort('Country','ASC');
    },

    onB_riAllowChosenList2_geoRender: function(component, eOpts) {
        component.getStore().sort('Country','ASC');
    },

    b_remove2click: function(button, e, eOpts) {

        var alreadySelected = Ext.getCmp('b_riBlockChosenList2_geo').getSelectionModel().getSelection();
        var storeSel = Ext.getCmp('b_riBlockChosenList2_geo').getStore();
        var storeAll = Ext.getCmp('b_riBlockAllList2_geo').getStore();
        for(var i=0;i<alreadySelected.length;i++){
            storeSel.remove(alreadySelected[i]);
            storeAll.add(alreadySelected[i]);
        }

        Ext.getCmp('b_riBlockAllList2_geo').getStore().sort('Country','ASC');
    },

    b_add2click: function(button, e, eOpts) {



        var newSelected = Ext.getCmp('b_riBlockAllList2_geo').getSelectionModel().getSelection();
        var storeSel = Ext.getCmp('b_riBlockChosenList2_geo').getStore();
        var storeAll = Ext.getCmp('b_riBlockAllList2_geo').getStore();
        for(var i=0;i<newSelected.length;i++){
            storeAll.remove(newSelected[i]);
            storeSel.add(newSelected[i]);
        }

        Ext.getCmp('b_riBlockChosenList2_geo').getStore().sort('Country','ASC');
    },

    onGriddragdroppluginDrop211: function() {
        Ext.getCmp('b_riBlockAllList2_geo').getStore().sort('Country','ASC');
    },

    onB_riBlockAllList2_geoRender: function(component, eOpts) {
        component.getStore().sort('Country','ASC');
    },

    onGriddragdroppluginDrop1111: function() {
        Ext.getCmp('b_riBlockChosenList2_geo').getStore().sort('Country','ASC');
    },

    onB_riBlockChosenList2_geoRender: function(component, eOpts) {
        component.getStore().sort('Country','ASC');
    },

    onB_geoRuleContShow: function(component, eOpts) {
        Ext.getCmp('b_parameterRuleCont').hide();
        Ext.getCmp('b_aspectRuleCont').hide();
        Ext.getCmp('b_patternRuleCont').hide();
        Ext.getCmp('b_botRuleCont').hide();
    },

    onImageRender23: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Choose Bot-type to track'
        });
    },

    onB_botRuleContShow: function(component, eOpts) {
        Ext.getCmp('b_parameterRuleCont').hide();
        Ext.getCmp('b_aspectRuleCont').hide();
        Ext.getCmp('b_patternRuleCont').hide();
        Ext.getCmp('b_geoRuleCont').hide();
    }

});
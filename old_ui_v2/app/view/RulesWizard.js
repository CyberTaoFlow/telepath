/*
 * File: app/view/RulesWizard.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.RulesWizard', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Label',
        'Ext.form.field.Radio',
        'Ext.form.field.ComboBox',
        'Ext.button.Button',
        'Ext.Img',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.grid.plugin.CellEditing',
        'Ext.form.field.Number',
        'Ext.form.field.Display',
        'Ext.form.field.Hidden',
        'Ext.form.RadioGroup',
        'Ext.grid.plugin.DragDrop',
        'Ext.selection.RowModel'
    ],

    height: 730,
    hideMode: 'visibility',
    id: 'RulesWizard',
    width: 752,
    resizable: false,
    closeAction: 'hide',
    title: 'Rules Wizard',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    height: 700,
                    id: 'RulesWizard_category',
                    padding: 10,
                    layout: 'absolute',
                    bodyPadding: 10,
                    title: 'Category and Rule',
                    items: [
                        {
                            xtype: 'label',
                            x: 30,
                            y: 20,
                            cls: 'tp-title',
                            width: 540,
                            text: 'Category'
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 60,
                            id: 'RW1_new_category_cb',
                            fieldLabel: '',
                            boxLabel: 'Create a new category',
                            checked: true,
                            listeners: {
                                change: {
                                    fn: me.onRadiofieldChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            x: 230,
                            y: 60,
                            id: 'RW1_new_category_name',
                            width: 340,
                            fieldLabel: '',
                            allowBlank: false,
                            emptyText: 'Enter category name'
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 110,
                            id: 'RW1_exists_category_cb',
                            fieldLabel: '',
                            boxLabel: 'Add to existing category',
                            listeners: {
                                change: {
                                    fn: me.onRW1_exists_category_cbChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'combobox',
                            x: 230,
                            y: 110,
                            disabled: true,
                            id: 'RW1_exists_category_name',
                            width: 340,
                            fieldLabel: '',
                            labelSeparator: ' ',
                            allowBlank: false,
                            emptyText: 'Please select a category',
                            enableKeyEvents: true,
                            editable: false,
                            displayField: 'category',
                            queryCaching: false,
                            store: 'general_rule_group_categories_store',
                            listeners: {
                                keyup: {
                                    fn: me.onRW1_f13Keyup11,
                                    scope: me
                                },
                                change: {
                                    fn: me.onRW1_exists_category_nameChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            x: 30,
                            y: 200,
                            cls: 'tp-title',
                            width: 540,
                            text: 'Rule'
                        },
                        {
                            xtype: 'radiofield',
                            x: 20,
                            y: 230,
                            id: 'RW1_f1',
                            padding: 10,
                            fieldLabel: '',
                            boxLabel: 'Create a new rule',
                            checked: true,
                            listeners: {
                                change: {
                                    fn: me.onRW1_f1Change,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            x: 200,
                            y: 240,
                            id: 'RW1_f2',
                            style: 'margin-left:30px;',
                            width: 340,
                            fieldLabel: '',
                            labelSeparator: ' ',
                            labelWidth: 120,
                            allowBlank: false,
                            emptyText: 'Enter rule name',
                            minLength: 1
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 290,
                            id: 'RW1_f12',
                            fieldLabel: '',
                            boxLabel: 'Add to existing rule',
                            listeners: {
                                change: {
                                    fn: me.onRW1_f12Change,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'combobox',
                            x: 230,
                            y: 290,
                            disabled: true,
                            id: 'RW1_f13',
                            width: 340,
                            fieldLabel: '',
                            allowBlank: false,
                            emptyText: 'Please select a rule',
                            enableKeyEvents: true,
                            editable: false,
                            displayField: 'group',
                            queryCaching: false,
                            store: 'rw_rule_groups_store',
                            listeners: {
                                render: {
                                    fn: me.onRW1_f13Render,
                                    scope: me
                                },
                                keyup: {
                                    fn: me.onRW1_f13Keyup,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 640,
                            y: 620,
                            icon: 'Htmls/images/x.gif',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick23,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 20,
                            y: 620,
                            id: 'RulesWizard_category_next',
                            icon: 'extjs/resources/themes/images/default/grid/page-next.gif',
                            text: 'Next',
                            listeners: {
                                click: {
                                    fn: me.RulesWizard_category_nextnextclick,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    height: 700,
                    hidden: true,
                    id: 'RulesWizard_win1',
                    padding: 10,
                    layout: 'absolute',
                    bodyPadding: 10,
                    title: 'Rule Information',
                    items: [
                        {
                            xtype: 'textfield',
                            x: 0,
                            y: 10,
                            id: 'RW1_f3',
                            style: 'margin-left:30px;',
                            width: 380,
                            fieldLabel: 'Rule Description',
                            labelSeparator: ' ',
                            labelWidth: 125,
                            allowBlank: false,
                            growMax: 0,
                            growMin: 0,
                            minLength: 1
                        },
                        {
                            xtype: 'label',
                            x: 30,
                            y: 50,
                            cls: 'tp-title',
                            width: 380,
                            text: 'Actions'
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 100,
                            y: 10,
                            disabled: true,
                            hidden: true,
                            id: 'RW1_f6',
                            value: true,
                            boxLabel: 'Log ',
                            checked: true,
                            listeners: {
                                render: {
                                    fn: me.onRW1_f6Render,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'image',
                            x: 800,
                            y: 10,
                            height: 20,
                            hidden: true,
                            id: 'RW1_f6_h',
                            width: 20,
                            src: 'Htmls/images/question.png',
                            listeners: {
                                render: {
                                    fn: me.onImageRender361111,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            x: 170,
                            y: 42,
                            height: 25,
                            hidden: true,
                            id: 'RW1_f7_field',
                            width: 330,
                            labelSeparator: ' ',
                            labelWidth: 120,
                            inputType: 'email',
                            allowBlank: false
                        },
                        {
                            xtype: 'image',
                            x: 800,
                            y: 45,
                            height: 20,
                            hidden: true,
                            id: 'RW1_f7_h',
                            width: 20,
                            src: 'Htmls/images/question.png',
                            listeners: {
                                render: {
                                    fn: me.onImageRender3611111,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 30,
                            y: 120,
                            id: 'RW1_f8',
                            boxLabel: 'Syslog',
                            listeners: {
                                render: {
                                    fn: me.onRW1_f8Render,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'image',
                            x: 800,
                            y: 85,
                            height: 20,
                            hidden: true,
                            id: 'RW1_f8_h',
                            width: 20,
                            src: 'Htmls/images/question.png',
                            listeners: {
                                render: {
                                    fn: me.onImageRender36111111,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'image',
                            x: 800,
                            y: 120,
                            height: 20,
                            hidden: true,
                            id: 'RW1_f9_h',
                            width: 20,
                            src: 'Htmls/images/question.png',
                            listeners: {
                                render: {
                                    fn: me.onImageRender361111111,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 30,
                            y: 150,
                            id: 'RW1_f7',
                            boxLabel: 'Email',
                            listeners: {
                                render: {
                                    fn: me.onRW1_f7Render,
                                    scope: me
                                },
                                change: {
                                    fn: me.onRW1_f7Change,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'container',
                            x: 30,
                            y: 190,
                            height: 160,
                            id: 'RW1_f7_cont',
                            width: 380,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'textfield',
                                    disabled: true,
                                    id: 'b_rwEmailField_field',
                                    width: 320,
                                    fieldLabel: 'Address',
                                    labelSeparator: ' ',
                                    labelWidth: 60,
                                    allowBlank: false,
                                    enableKeyEvents: true,
                                    regex: /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/,
                                    regexText: 'illegal email address',
                                    listeners: {
                                        keypress: {
                                            fn: me.onTextfieldKeypress1221,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    x: 330,
                                    y: 0,
                                    disabled: true,
                                    id: 'b_rwEmailField_button',
                                    icon: 'Htmls/images/add.gif',
                                    iconCls: '',
                                    text: 'Add',
                                    listeners: {
                                        click: {
                                            fn: me.RW_check_dupe_add_email,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'gridpanel',
                                    y: 30,
                                    disabled: true,
                                    height: 130,
                                    id: 'b_rwEmailField',
                                    width: 380,
                                    title: '',
                                    enableColumnHide: false,
                                    forceFit: true,
                                    store: 'b_rw_group_emails',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            width: 395,
                                            dataIndex: 'address',
                                            text: 'Address',
                                            editor: {
                                                xtype: 'textfield',
                                                allowBlank: false,
                                                regex: /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/,
                                                regexText: 'illegal email address'
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'td1',
                                            text: 'MyColumn204'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div><img src="Htmls/images/edit.gif" onclick="Ext.getCmp(\'b_rwEmailField\').getPlugin(\'b_rwEmailField_edit\').startEdit('+rowIndex+',Ext.getCmp(\'b_rwEmailField\').columns[0])" align="center"></div>';
                                            },
                                            maxWidth: 60,
                                            text: ''
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div><img src="Htmls/images/delete.gif" onclick="remove_item_from_table(\''+record.internalId+'\',\'b_rwEmailField\')" align="center"></div>';
                                            },
                                            maxWidth: 60,
                                            width: 111,
                                            text: ''
                                        }
                                    ],
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.CellEditing', {
                                            pluginId: 'b_rwEmailField_edit',
                                            listeners: {
                                                validateedit: {
                                                    fn: me.onCellEditingValidateedit,
                                                    scope: me
                                                }
                                            }
                                        })
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            x: 30,
                            y: 360,
                            height: 210,
                            id: 'rw_rule_alerts_cont',
                            width: 380,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'label',
                                    x: 0,
                                    y: 10,
                                    cls: 'tp-title',
                                    width: 380,
                                    text: 'Parameters to show upon alert for the rule'
                                },
                                {
                                    xtype: 'button',
                                    x: 330,
                                    y: 50,
                                    icon: 'Htmls/images/add.gif',
                                    text: 'Add ',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick261,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    hidden: true,
                                    id: 'rw_alert_id',
                                    fieldLabel: 'Label',
                                    listeners: {
                                        change: {
                                            fn: me.onB_ri_alert_idChange1,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    hidden: true,
                                    id: 'rw_alert_name',
                                    fieldLabel: 'Label'
                                },
                                {
                                    xtype: 'gridpanel',
                                    y: 80,
                                    height: 130,
                                    id: 'rw_alert_params',
                                    width: 380,
                                    title: '',
                                    enableColumnHide: false,
                                    forceFit: true,
                                    store: 'rw_alert_params_store',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            width: 395,
                                            dataIndex: 'td0',
                                            text: 'Parameter'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'td1',
                                            text: 'MyColumn204'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div><img src="Htmls/images/edit.gif" onclick="open_parameters_window_for_alerts(\'rw_alert_params\','+record.data.td1+')" align="center"></div>';
                                            },
                                            maxWidth: 60,
                                            text: ''
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div><img src="Htmls/images/delete.gif" onclick="remove_item_from_table(\''+record.internalId+'\',\'rw_alert_params\')" align="center"></div>';
                                            },
                                            maxWidth: 60,
                                            width: 111,
                                            text: ''
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'button',
                            x: 100,
                            y: 620,
                            id: 'RW1_next',
                            icon: 'extjs/resources/themes/images/default/grid/page-next.gif',
                            text: 'Next',
                            listeners: {
                                click: {
                                    fn: me.onRW1_nextClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 640,
                            y: 620,
                            id: 'RW1_cancel',
                            style: 'margin-left:10px;',
                            icon: 'Htmls/images/x.gif',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onRW1_cancelClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 20,
                            y: 620,
                            id: 'RW1_back',
                            style: 'margin-left:10px;',
                            icon: 'extjs/resources/themes/images/default/grid/page-prev.gif',
                            text: 'Back',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick24,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    height: 700,
                    hidden: true,
                    id: 'RulesWizard_win2',
                    padding: 10,
                    layout: 'absolute',
                    bodyPadding: 10,
                    title: 'Criterion Information',
                    items: [
                        {
                            xtype: 'textfield',
                            x: 20,
                            y: 10,
                            id: 'RW2_f1',
                            style: 'margin-left:10px;',
                            fieldLabel: 'Criterion Name',
                            labelSeparator: ' ',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            x: 20,
                            y: 40,
                            id: 'RW2_f2',
                            style: 'margin-left:10px;',
                            fieldLabel: 'Description',
                            labelSeparator: ' ',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            x: 20,
                            y: 70,
                            id: 'RW2_f3',
                            style: 'margin-left:10px;',
                            fieldLabel: 'Owner',
                            labelSeparator: ' ',
                            allowBlank: false
                        },
                        {
                            xtype: 'combobox',
                            x: 20,
                            y: 100,
                            id: 'RW2_f4',
                            style: 'margin-top:5px;\nmargin-left:10px;',
                            fieldLabel: 'Criterion Type',
                            value: 'Parameter',
                            enableKeyEvents: true,
                            editable: false,
                            displayField: 'type',
                            queryMode: 'local',
                            store: 'b_riRuleTypeStore',
                            listeners: {
                                expand: {
                                    fn: me.onRW2_f4Expand,
                                    scope: me
                                },
                                change: {
                                    fn: me.onRW2_f4Change,
                                    scope: me
                                },
                                keyup: {
                                    fn: me.onRW2_f4Keyup,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'fieldcontainer',
                            x: 10,
                            y: 140,
                            height: 130,
                            id: 'RW2_f5',
                            style: 'margin-left:10px;\n//margin-top:10px;',
                            width: 410,
                            layout: 'absolute',
                            labelAlign: 'top',
                            labelStyle: 'font-weight:bold;',
                            items: [
                                {
                                    xtype: 'label',
                                    x: 10,
                                    y: 0,
                                    cls: 'tp-title',
                                    width: 390,
                                    text: 'Scope'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    x: 0,
                                    y: 40,
                                    id: 'RW2_f5_1',
                                    style: 'margin-left:10px;',
                                    boxLabel: 'Application',
                                    listeners: {
                                        change: {
                                            fn: me.onRW2_f5_1Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'combobox',
                                    x: 115,
                                    y: 40,
                                    disabled: true,
                                    id: 'RW2_f5_1_2',
                                    width: 160,
                                    fieldLabel: '',
                                    allowBlank: false,
                                    enableKeyEvents: true,
                                    editable: false,
                                    displayField: 'app',
                                    forceSelection: true,
                                    queryCaching: false,
                                    store: 'general_appsStore',
                                    listeners: {
                                        keyup: {
                                            fn: me.onRW2_f5_1_2Keyup,
                                            scope: me
                                        },
                                        change: {
                                            fn: me.onRW2_f5_1_2Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'checkboxfield',
                                    x: 0,
                                    y: 70,
                                    id: 'RW2_f5_2',
                                    style: 'margin-left:10px;',
                                    boxLabel: 'Source IP',
                                    listeners: {
                                        change: {
                                            fn: me.onRW2_f5_2Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    x: 115,
                                    y: 70,
                                    disabled: true,
                                    id: 'RW2_f5_2_2',
                                    fieldLabel: '',
                                    allowBlank: false,
                                    regex: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/,
                                    regexText: 'Illegal IP Address'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    x: 0,
                                    y: 100,
                                    id: 'RW2_f5_3',
                                    style: 'margin-left:10px;',
                                    boxLabel: 'User',
                                    listeners: {
                                        change: {
                                            fn: me.onRW2_f5_3Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    x: 115,
                                    y: 100,
                                    disabled: true,
                                    id: 'RW2_f5_3_2',
                                    fieldLabel: '',
                                    allowBlank: false
                                },
                                {
                                    xtype: 'checkboxfield',
                                    x: 320,
                                    y: 71,
                                    disabled: true,
                                    id: 'RW2_f5_not',
                                    boxLabel: 'Not'
                                },
                                {
                                    xtype: 'button',
                                    x: 252,
                                    y: 70,
                                    disabled: true,
                                    id: 'RW2_f5_add',
                                    text: 'Add IP(s)',
                                    listeners: {
                                        click: {
                                            fn: me.onRW2_f5_addClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'numberfield',
                            x: 20,
                            y: 290,
                            hidden: true,
                            id: 'RW2_f6',
                            style: 'margin-left:10px;',
                            width: 190,
                            fieldLabel: 'Trigger Criteria After',
                            labelSeparator: '',
                            labelWidth: 120,
                            value: 1,
                            allowBlank: false,
                            minValue: 1
                        },
                        {
                            xtype: 'label',
                            x: 240,
                            y: 293,
                            hidden: true,
                            text: 'Requests'
                        },
                        {
                            xtype: 'numberfield',
                            x: 20,
                            y: 300,
                            id: 'RW2_f7',
                            style: 'margin-left:10px;',
                            width: 190,
                            fieldLabel: 'Trigger alert after',
                            labelSeparator: ' ',
                            labelWidth: 120,
                            value: 1,
                            allowBlank: false,
                            maxValue: 10,
                            minValue: 0
                        },
                        {
                            xtype: 'label',
                            x: 240,
                            y: 304,
                            text: 'criterion matches'
                        },
                        {
                            xtype: 'container',
                            x: 10,
                            y: 360,
                            height: 100,
                            id: 'RulesWizard_alerts_and_score',
                            padding: 10,
                            width: 420,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'label',
                                    x: 20,
                                    y: 30,
                                    cls: 'tp-title',
                                    width: 390,
                                    text: 'Score Type'
                                },
                                {
                                    xtype: 'combobox',
                                    x: 20,
                                    y: 70,
                                    id: 'RWrule_score_type1',
                                    width: 152,
                                    labelAlign: 'top',
                                    value: 'Numeric',
                                    enableKeyEvents: true,
                                    editable: false,
                                    displayField: 'type',
                                    queryMode: 'local',
                                    store: 'b_irScoreType_AStore',
                                    listeners: {
                                        change: {
                                            fn: me.onRWasp_f2Change1,
                                            scope: me
                                        },
                                        keyup: {
                                            fn: me.onRWasp_f2Keyup1,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'numberfield',
                                    x: 200,
                                    y: 35,
                                    id: 'RWrule_score_type2',
                                    style: 'margin-top:35px;',
                                    width: 87,
                                    fieldLabel: '',
                                    labelAlign: 'top',
                                    labelStyle: '',
                                    value: 1,
                                    maxValue: 100,
                                    minValue: 0
                                },
                                {
                                    xtype: 'combobox',
                                    x: 200,
                                    y: 70,
                                    hidden: true,
                                    id: 'RWrule_score_type3',
                                    width: 120,
                                    fieldLabel: '',
                                    value: 'Low',
                                    enableKeyEvents: true,
                                    editable: false,
                                    displayField: 'type',
                                    queryMode: 'local',
                                    store: 'rw_literal',
                                    listeners: {
                                        keyup: {
                                            fn: me.onRWasp_f5Keyup1,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'button',
                            x: 630,
                            y: 620,
                            height: 20,
                            id: 'RW2_cancel',
                            style: 'margin-left:10px;',
                            icon: 'Htmls/images/x.gif',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick1,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 20,
                            y: 620,
                            id: 'RW2_back',
                            style: 'margin-left:10px;',
                            icon: 'extjs/resources/themes/images/default/grid/page-prev.gif',
                            text: 'Back',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 100,
                            y: 620,
                            id: 'RW2_next',
                            icon: 'extjs/resources/themes/images/default/grid/page-next.gif',
                            text: 'Next',
                            listeners: {
                                click: {
                                    fn: me.RW2_nextclick,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    height: 700,
                    hidden: true,
                    id: 'RulesWizard_param',
                    padding: 10,
                    layout: 'absolute',
                    bodyPadding: 10,
                    title: 'Parameter Rule',
                    items: [
                        {
                            xtype: 'label',
                            x: 30,
                            y: 30,
                            cls: 'tp-title',
                            width: 490,
                            text: 'Please select one of the following options:'
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 80,
                            id: 'RWpar_radio_1',
                            fieldLabel: '',
                            boxLabel: '',
                            listeners: {
                                change: {
                                    fn: me.onRWpar_radio_1Change,
                                    scope: me
                                },
                                render: {
                                    fn: me.onRWpar_radio_1Render,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'container',
                            x: 50,
                            y: 50,
                            height: 90,
                            id: 'RWpar_cb1_cont',
                            width: 250,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'displayfield',
                                    x: 0,
                                    y: 20,
                                    id: 'RWpar_f1_page',
                                    style: 'margin-left:10px;',
                                    fieldLabel: 'Page',
                                    labelSeparator: ' ',
                                    listeners: {
                                        change: {
                                            fn: me.onRWpar_f1Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'hiddenfield',
                                    id: 'RWpar_f1_id_page',
                                    width: 0,
                                    fieldLabel: 'Label'
                                },
                                {
                                    xtype: 'textfield',
                                    x: 0,
                                    y: 50,
                                    disabled: true,
                                    id: 'RWpar_f1',
                                    style: 'margin-left:10px;',
                                    fieldLabel: 'Parameter',
                                    labelSeparator: ' ',
                                    labelWidth: 60,
                                    allowBlank: false,
                                    emptyText: 'Select a Parameter',
                                    listeners: {
                                        change: {
                                            fn: me.onRWpar_f1Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'hiddenfield',
                                    id: 'RWpar_f1_id',
                                    width: 0,
                                    fieldLabel: 'Label'
                                },
                                {
                                    xtype: 'button',
                                    x: 230,
                                    y: 50,
                                    disabled: true,
                                    id: 'RWpar_f1_browse',
                                    text: 'Browse',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick7,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 160,
                            id: 'RWpar_radio_2',
                            fieldLabel: '',
                            boxLabel: '',
                            listeners: {
                                change: {
                                    fn: me.onRWpar_radio_1Change1,
                                    scope: me
                                },
                                render: {
                                    fn: me.onRWpar_radio_2Render,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 220,
                            id: 'RWpar_radio_3',
                            fieldLabel: '',
                            boxLabel: 'Title',
                            listeners: {
                                change: {
                                    fn: me.onRWpar_radio_1Change11,
                                    scope: me
                                },
                                render: {
                                    fn: me.onRWpar_radio_2Render1,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 250,
                            id: 'RWpar_radio_4',
                            fieldLabel: '',
                            boxLabel: 'URI',
                            listeners: {
                                change: {
                                    fn: me.onRWpar_radio_1Change111,
                                    scope: me
                                },
                                render: {
                                    fn: me.onRWpar_radio_2Render11,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'container',
                            x: 50,
                            y: 135,
                            height: 70,
                            id: 'RWpar_cb2_cont',
                            width: 90,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'checkboxfield',
                                    x: 10,
                                    y: 0,
                                    disabled: true,
                                    id: 'RWpar_post_cb',
                                    fieldLabel: '',
                                    boxLabel: 'POST'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    x: 10,
                                    y: 25,
                                    disabled: true,
                                    id: 'RWpar_get_cb',
                                    fieldLabel: '',
                                    boxLabel: 'GET'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    x: 10,
                                    y: 50,
                                    disabled: true,
                                    id: 'RWpar_header_cb',
                                    fieldLabel: '',
                                    boxLabel: 'HEADER'
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            x: 10,
                            y: 300,
                            border: 0,
                            height: 330,
                            id: 'RWpar_string_inspection_cont',
                            width: 510,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'label',
                                    x: 20,
                                    y: 0,
                                    cls: 'tp-title',
                                    width: 490,
                                    text: 'String Inspection'
                                },
                                {
                                    xtype: 'container',
                                    y: 30,
                                    height: 30,
                                    id: 'RWpar_heuristic_cont',
                                    width: 660,
                                    layout: 'absolute',
                                    items: [
                                        {
                                            xtype: 'radiofield',
                                            x: 10,
                                            y: 7,
                                            id: 'RWpar_f2',
                                            style: 'margin-left:10px;',
                                            fieldLabel: '',
                                            labelAlign: 'right',
                                            labelPad: 20,
                                            labelStyle: '',
                                            fieldStyle: 'margin-right:5px',
                                            boxLabel: '',
                                            checked: true,
                                            listeners: {
                                                change: {
                                                    fn: me.onRWpar_f2Change,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'label',
                                            x: 45,
                                            y: 10,
                                            height: 20,
                                            id: 'RWpar_f2_label',
                                            text: '                  Heuristic'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    x: 0,
                                    y: 70,
                                    height: 30,
                                    id: 'RWpar_regex_cont',
                                    layout: 'absolute',
                                    items: [
                                        {
                                            xtype: 'radiofield',
                                            x: 20,
                                            y: 5,
                                            id: 'RWpar_f9_1',
                                            fieldLabel: '',
                                            boxLabel: '',
                                            listeners: {
                                                change: {
                                                    fn: me.onRWpar_f9_1Change,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'textfield',
                                            x: 40,
                                            disabled: true,
                                            id: 'RWpar_f9_2',
                                            style: 'margin-left:5px;\nmargin-top:3px;',
                                            fieldLabel: 'Regex',
                                            labelSeparator: ' ',
                                            allowBlank: false
                                        },
                                        {
                                            xtype: 'checkboxfield',
                                            x: 320,
                                            disabled: true,
                                            id: 'RWpar_f9_3',
                                            fieldLabel: '',
                                            boxLabel: 'Not'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    y: 110,
                                    height: 30,
                                    id: 'RWpar_contains_cont',
                                    layout: 'absolute',
                                    items: [
                                        {
                                            xtype: 'radiofield',
                                            x: 10,
                                            y: 5,
                                            id: 'RWpar_f3_1',
                                            style: 'margin-left:10px;',
                                            fieldLabel: '',
                                            boxLabel: '',
                                            listeners: {
                                                change: {
                                                    fn: me.onRWpar_f3_1Change,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'textfield',
                                            x: 40,
                                            disabled: true,
                                            id: 'RWpar_f3_2',
                                            style: 'margin-left:5px;\nmargin-top:3px;',
                                            fieldLabel: 'String Contains',
                                            labelSeparator: ' ',
                                            allowBlank: false
                                        },
                                        {
                                            xtype: 'checkboxfield',
                                            x: 320,
                                            disabled: true,
                                            id: 'RWpar_f3_3',
                                            fieldLabel: '',
                                            boxLabel: 'Not'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    y: 150,
                                    height: 30,
                                    id: 'RWpar_fuzzy_cont',
                                    layout: 'absolute',
                                    items: [
                                        {
                                            xtype: 'radiofield',
                                            x: 10,
                                            y: 5,
                                            id: 'RWpar_f4_1',
                                            style: 'margin-left:10px;',
                                            fieldLabel: '',
                                            boxLabel: '',
                                            listeners: {
                                                change: {
                                                    fn: me.onRWpar_f4_1Change,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'combobox',
                                            x: 40,
                                            disabled: true,
                                            id: 'RWpar_f4_2',
                                            style: 'margin-left:5px;\nmargin-top:3px;',
                                            fieldLabel: 'Fuzzy Length',
                                            labelSeparator: ' ',
                                            value: 'Short',
                                            allowBlank: false,
                                            enableKeyEvents: true,
                                            editable: false,
                                            displayField: 'length',
                                            queryMode: 'local',
                                            store: 'b_riFuzzyLengthStore',
                                            listeners: {
                                                keyup: {
                                                    fn: me.onRWpar_f4_2Keyup,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    y: 190,
                                    height: 30,
                                    id: 'RWpar_length_cont',
                                    layout: 'absolute',
                                    items: [
                                        {
                                            xtype: 'radiofield',
                                            x: 10,
                                            y: 5,
                                            id: 'RWpar_f5_1',
                                            style: 'margin-left:10px;',
                                            fieldLabel: '',
                                            boxLabel: '',
                                            listeners: {
                                                change: {
                                                    fn: me.onRWpar_f5_1Change,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 40,
                                            disabled: true,
                                            id: 'RWpar_f5_2',
                                            style: 'margin-left:5px;\nmargin-top:3px;',
                                            width: 175,
                                            fieldLabel: 'Length',
                                            labelSeparator: ' ',
                                            value: 1,
                                            allowBlank: false,
                                            minValue: 0
                                        },
                                        {
                                            xtype: 'label',
                                            x: 220,
                                            y: 5,
                                            disabled: true,
                                            height: 20,
                                            id: 'char_5',
                                            style: 'margin-left:10px;',
                                            width: 70,
                                            text: 'Characters'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    y: 230,
                                    height: 30,
                                    id: 'RWpar_between_cont',
                                    layout: 'absolute',
                                    items: [
                                        {
                                            xtype: 'radiofield',
                                            x: 10,
                                            y: 5,
                                            id: 'RWpar_f6_1',
                                            style: 'margin-left:10px;',
                                            fieldLabel: '',
                                            boxLabel: '',
                                            listeners: {
                                                change: {
                                                    fn: me.onRWpar_f6_1Change,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 40,
                                            disabled: true,
                                            id: 'RWpar_f6_2',
                                            style: 'margin-left:5px;\nmargin-top:3px;',
                                            width: 199,
                                            fieldLabel: 'Length Between',
                                            labelSeparator: ' ',
                                            labelWidth: 120,
                                            value: 0,
                                            allowBlank: false,
                                            minValue: 0
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 250,
                                            disabled: true,
                                            id: 'RWpar_f6_3',
                                            style: 'margin-left:5px;\nmargin-top:3px;',
                                            width: 110,
                                            fieldLabel: 'and',
                                            labelSeparator: ' ',
                                            labelWidth: 30,
                                            value: 0,
                                            allowBlank: false,
                                            minValue: 0
                                        },
                                        {
                                            xtype: 'label',
                                            x: 370,
                                            y: 5,
                                            disabled: true,
                                            height: 20,
                                            id: 'char_6',
                                            style: 'margin-left:10px;',
                                            width: 70,
                                            text: 'Characters'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    y: 270,
                                    height: 30,
                                    id: 'RWpar_similar_cont',
                                    layout: 'absolute',
                                    items: [
                                        {
                                            xtype: 'radiofield',
                                            x: 10,
                                            y: 5,
                                            id: 'RWpar_f7_1',
                                            style: 'margin-left:10px;',
                                            fieldLabel: '',
                                            boxLabel: '',
                                            listeners: {
                                                change: {
                                                    fn: me.onRWpar_f7_1Change,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 40,
                                            disabled: true,
                                            id: 'RWpar_f7_2',
                                            style: 'margin-left:5px;\nmargin-top:3px;',
                                            width: 199,
                                            fieldLabel: 'Parameter values differ by',
                                            labelSeparator: ' ',
                                            labelWidth: 150,
                                            value: 1,
                                            allowBlank: false,
                                            minValue: 1
                                        },
                                        {
                                            xtype: 'numberfield',
                                            x: 300,
                                            disabled: true,
                                            hidden: true,
                                            id: 'RWpar_f7_3',
                                            style: 'margin-top:3px;',
                                            width: 110,
                                            fieldLabel: '',
                                            value: 1,
                                            minValue: 1
                                        },
                                        {
                                            xtype: 'label',
                                            x: 240,
                                            y: 5,
                                            disabled: true,
                                            id: 'char_7',
                                            style: 'margin-left:10px;',
                                            text: 'characters between requests'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'button',
                            x: 100,
                            y: 620,
                            id: 'RWpar_submit',
                            icon: 'Htmls/images/save.gif',
                            text: 'Submit',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick8,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 20,
                            y: 620,
                            height: 20,
                            style: 'margin-left:10px;',
                            icon: 'extjs/resources/themes/images/default/grid/page-prev.gif',
                            text: 'Back',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick6,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 770,
                            y: 620,
                            style: 'margin-left:10px;',
                            icon: 'Htmls/images/x.gif',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick3,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 300,
                            y: 60,
                            hidden: true,
                            text: 'Browse',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick611,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            x: 45,
                            y: 170,
                            id: 'heuristic',
                            text: ''
                        },
                        {
                            xtype: 'label',
                            x: 375,
                            y: 83,
                            hidden: true,
                            text: 'and/or'
                        }
                    ],
                    listeners: {
                        render: {
                            fn: me.onRulesWizard_paramRender,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'panel',
                    height: 700,
                    hidden: true,
                    id: 'RulesWizard_pat',
                    padding: 10,
                    layout: 'absolute',
                    bodyPadding: 10,
                    title: 'Pattern Rule',
                    items: [
                        {
                            xtype: 'radiogroup',
                            x: 10,
                            y: 50,
                            height: 130,
                            style: 'margin-left:10px;',
                            width: 110,
                            fieldLabel: '',
                            labelAlign: 'top',
                            labelSeparator: ' ',
                            labelStyle: '',
                            layout: {
                                type: 'table',
                                columns: 1
                            },
                            items: [
                                {
                                    xtype: 'radiofield',
                                    id: 'RWpat_f1',
                                    style: 'margin-left:10px;',
                                    fieldLabel: '',
                                    boxLabel: 'IP',
                                    checked: true,
                                    listeners: {
                                        change: {
                                            fn: me.onRWpat_f1Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'radiofield',
                                    id: 'RWpat_f2',
                                    style: 'margin-left:10px;',
                                    fieldLabel: '',
                                    boxLabel: 'SID',
                                    listeners: {
                                        change: {
                                            fn: me.onRWpat_f2Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'radiofield',
                                    id: 'RWpat_f10',
                                    style: 'margin-left:10px;',
                                    fieldLabel: '',
                                    boxLabel: 'User',
                                    listeners: {
                                        change: {
                                            fn: me.onRWpat_f10Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'radiofield',
                                    id: 'RWpat_f3',
                                    style: 'margin-left:10px;',
                                    fieldLabel: '',
                                    boxLabel: 'Other',
                                    listeners: {
                                        change: {
                                            fn: me.onRWpat_f3Change,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'hiddenfield',
                            id: 'RWpat_f1_id',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'container',
                            x: 30,
                            y: 180,
                            height: 10,
                            style: 'border-top:solid;\nborder-width:1px;\npadding-top:25px;',
                            width: 470
                        },
                        {
                            xtype: 'textfield',
                            x: 110,
                            y: 80,
                            hidden: true,
                            id: 'RWpat_f3_id',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'button',
                            x: 290,
                            y: 130,
                            disabled: true,
                            id: 'RWpat_f3_2',
                            text: 'Browse',
                            listeners: {
                                click: {
                                    fn: me.onRWpat_f3_2Click,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            x: 120,
                            y: 130,
                            disabled: true,
                            id: 'RWpat_f3_1',
                            fieldLabel: '',
                            readOnly: true,
                            allowBlank: false
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 250,
                            id: 'RWpat_page_radio',
                            fieldLabel: '',
                            boxLabel: 'Page',
                            listeners: {
                                change: {
                                    fn: me.onRWpat_page_radioChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 210,
                            id: 'RWpat_user_radio',
                            fieldLabel: '',
                            boxLabel: 'User Changes',
                            listeners: {
                                change: {
                                    fn: me.onRWpat_page_radioChange1,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'container',
                            x: 180,
                            y: 250,
                            height: 24,
                            id: 'RWpat_page_container',
                            width: 320,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'textfield',
                                    disabled: true,
                                    id: 'RWpat_f4_page',
                                    style: 'margin-left:10px;',
                                    fieldLabel: '',
                                    labelSeparator: ' ',
                                    labelWidth: 150,
                                    readOnly: true,
                                    allowBlank: false,
                                    listeners: {
                                        change: {
                                            fn: me.onRWpat_f4Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    hidden: true,
                                    id: 'RWpat_f4_id_page',
                                    fieldLabel: 'Label',
                                    listeners: {
                                        change: {
                                            fn: me.onRWpat_f4_id_pageChange,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    x: 180,
                                    y: 0,
                                    disabled: true,
                                    id: 'RWpat_browse_page',
                                    text: 'Browse',
                                    listeners: {
                                        click: {
                                            fn: me.rapat_pageclickselect,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    x: 250,
                                    y: -1,
                                    disabled: true,
                                    id: 'RWpat_remove_page',
                                    text: 'Remove',
                                    listeners: {
                                        click: {
                                            fn: me.rapat_pageclickremove,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 290,
                            id: 'RWpat_parameter_radio',
                            fieldLabel: '',
                            boxLabel: 'Parameter Changes',
                            listeners: {
                                change: {
                                    fn: me.onRWpat_parameter_radioChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'radiofield',
                            x: 30,
                            y: 330,
                            id: 'RWpat_flow_radio',
                            fieldLabel: '',
                            boxLabel: 'Repeating Action',
                            checked: true,
                            listeners: {
                                change: {
                                    fn: me.onRWpat_parameter_radioChange1,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'combobox',
                            x: 130,
                            y: 325,
                            id: 'RWpat_flow_select',
                            style: 'margin-top:5px;\nmargin-left:60px;',
                            width: 220,
                            fieldLabel: '',
                            allowBlank: false,
                            enableKeyEvents: true,
                            editable: false,
                            displayField: 'group',
                            queryCaching: false,
                            queryMode: 'local',
                            store: 'general_flow_group_store',
                            listeners: {
                                keyup: {
                                    fn: me.onRW1_f11Keyup1,
                                    scope: me
                                },
                                change: {
                                    fn: me.onRWpat_flow_selectChange,
                                    scope: me
                                },
                                expand: {
                                    fn: me.onRWpat_flow_selectExpand,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'container',
                            x: 170,
                            y: 290,
                            height: 24,
                            id: 'RWpat_parameter_container',
                            width: 320,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'textfield',
                                    x: 10,
                                    y: -1,
                                    disabled: true,
                                    id: 'RWpat_f4',
                                    style: 'margin-left:10px;',
                                    labelSeparator: ' ',
                                    labelWidth: 150,
                                    readOnly: true,
                                    allowBlank: false,
                                    listeners: {
                                        change: {
                                            fn: me.onRWpat_f4Change,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'textfield',
                                    hidden: true,
                                    id: 'RWpat_f4_id',
                                    fieldLabel: 'Label',
                                    listeners: {
                                        change: {
                                            fn: me.onRWpat_f4_idChange,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    x: 190,
                                    y: -1,
                                    disabled: true,
                                    id: 'RWpat_browse_pararm',
                                    text: 'Browse',
                                    listeners: {
                                        click: {
                                            fn: me.rw_pat_param_br,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    x: 260,
                                    y: 0,
                                    disabled: true,
                                    id: 'RWpat_remove_pararm',
                                    text: 'Remove',
                                    listeners: {
                                        click: {
                                            fn: me.rw_pat_param_remove,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'numberfield',
                            x: 20,
                            y: 410,
                            id: 'RWpat_f5',
                            style: 'margin-left:10px;',
                            width: 300,
                            fieldLabel: 'Count',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            value: 3,
                            allowBlank: false,
                            minValue: 0
                        },
                        {
                            xtype: 'numberfield',
                            x: 20,
                            y: 450,
                            id: 'RWpat_f6',
                            style: 'margin-left:10px;',
                            width: 300,
                            fieldLabel: 'Time Window',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            allowBlank: false,
                            emptyText: 'Select time window',
                            minValue: 0,
                            listeners: {
                                change: {
                                    fn: me.onRWpat_f6Change,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'combobox',
                            x: 340,
                            y: 450,
                            id: 'RWpat_f7',
                            width: 80,
                            fieldLabel: '',
                            value: 'Seconds',
                            enableKeyEvents: true,
                            editable: false,
                            displayField: 'field',
                            queryMode: 'local',
                            store: 'b_riTime2_Pat',
                            listeners: {
                                keyup: {
                                    fn: me.onRWpat_f7Keyup,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 10,
                            y: 620,
                            style: 'margin-left:10px;',
                            icon: 'extjs/resources/themes/images/default/grid/page-prev.gif',
                            text: 'Back',
                            listeners: {
                                click: {
                                    fn: me.rw_pat_back_click,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 90,
                            y: 620,
                            id: 'RWpat_submit',
                            icon: 'Htmls/images/save.gif',
                            text: 'Submit',
                            listeners: {
                                click: {
                                    fn: me.rw_pat_sbumitclick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 770,
                            y: 620,
                            style: 'margin-left:10px;',
                            icon: 'Htmls/images/x.gif',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.rw_pat_cancel,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            x: 30,
                            y: 20,
                            cls: 'tp-title',
                            width: 470,
                            text: 'Anchor'
                        },
                        {
                            xtype: 'label',
                            x: 340,
                            y: 413,
                            text: 'times'
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    height: 700,
                    hidden: true,
                    id: 'RulesWizard_asp',
                    padding: 10,
                    layout: 'absolute',
                    bodyPadding: 10,
                    title: 'Aspect Rule',
                    items: [
                        {
                            xtype: 'combobox',
                            x: 20,
                            y: 20,
                            id: 'RWasp_f1',
                            fieldLabel: 'Aspect Value',
                            labelAlign: 'top',
                            labelStyle: 'margin-bottom:20px;font-weight:bold;',
                            value: 'Query',
                            editable: false,
                            displayField: 'type',
                            queryMode: 'local',
                            store: 'global_aspect_type_store'
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 20,
                            y: 80,
                            id: 'RWasp_f4',
                            style: 'margin-top:40px;',
                            fieldLabel: '',
                            boxLabel: 'Personal'
                        },
                        {
                            xtype: 'button',
                            x: 90,
                            y: 620,
                            icon: 'Htmls/images/save.gif',
                            text: 'Submit',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick9,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 10,
                            y: 620,
                            style: 'margin-left:10px;',
                            icon: 'extjs/resources/themes/images/default/grid/page-prev.gif',
                            text: 'Back',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick10,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 770,
                            y: 620,
                            style: 'margin-left:10px;',
                            icon: 'Htmls/images/x.gif',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick11,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    height: 700,
                    hidden: true,
                    id: 'RulesWizard_geo',
                    padding: 10,
                    layout: 'absolute',
                    bodyPadding: 10,
                    title: 'Geographic Rule',
                    items: [
                        {
                            xtype: 'radiofield',
                            id: 'RWgeo_f1_1',
                            fieldLabel: '',
                            boxLabel: 'Geographic Velocity',
                            checked: true,
                            listeners: {
                                change: {
                                    fn: me.onRWgeo_f1_1Change,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'numberfield',
                            x: 270,
                            y: 10,
                            id: 'RWgeo_f1_2',
                            width: 90,
                            fieldLabel: 'Km in',
                            labelSeparator: ' ',
                            labelWidth: 35,
                            value: 60,
                            minValue: 0
                        },
                        {
                            xtype: 'numberfield',
                            x: 210,
                            y: 10,
                            id: 'RWgeo_f1_3',
                            width: 50,
                            labelSeparator: ' ',
                            labelWidth: 60,
                            value: 10,
                            minValue: 0
                        },
                        {
                            xtype: 'radiofield',
                            x: 10,
                            y: 70,
                            id: 'RWgeo_f2_1',
                            fieldLabel: '',
                            boxLabel: 'User Origin Outside of',
                            listeners: {
                                change: {
                                    fn: me.onRWgeo_f2_1Change,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            x: 20,
                            y: 100,
                            text: '(Drag Country or Ctrl+Click)'
                        },
                        {
                            xtype: 'container',
                            x: 210,
                            y: 70,
                            disabled: true,
                            height: 180,
                            id: 'RWgeo_f2_2_cont',
                            width: 430,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'button',
                                    x: 200,
                                    y: 100,
                                    text: '<<',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick171,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    x: 200,
                                    y: 60,
                                    text: '>>',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick161,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'gridpanel',
                                    x: 10,
                                    y: 15,
                                    height: 150,
                                    id: 'RWgeo_f2_2_all',
                                    width: 150,
                                    title: '',
                                    forceFit: true,
                                    store: 'rw_geoOutsideAll',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<span class="flag flag-' + record.get('Alias') + '"></span>&nbsp;&nbsp;'+record.get('Country');

                                            },
                                            width: 185,
                                            dataIndex: 'Country',
                                            text: 'All'
                                        }
                                    ],
                                    viewConfig: {
                                        plugins: [
                                            Ext.create('Ext.grid.plugin.DragDrop', {

                                            })
                                        ],
                                        listeners: {
                                            drop: {
                                                fn: me.onGriddragdroppluginDrop2,
                                                scope: me
                                            }
                                        }
                                    },
                                    selModel: Ext.create('Ext.selection.RowModel', {
                                        mode: 'MULTI'
                                    }),
                                    listeners: {
                                        render: {
                                            fn: me.onRWgeo_f2_2_allRender,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'gridpanel',
                                    x: 270,
                                    y: 15,
                                    height: 150,
                                    id: 'RWgeo_f2_2_selected',
                                    width: 150,
                                    title: '',
                                    forceFit: true,
                                    store: 'rw_geoOutsideChosen',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<span class="flag flag-' + record.get('Alias') + '"></span>&nbsp;&nbsp;'+record.get('Country');
                                            },
                                            width: 185,
                                            dataIndex: 'Country',
                                            text: 'Selected'
                                        }
                                    ],
                                    viewConfig: {
                                        plugins: [
                                            Ext.create('Ext.grid.plugin.DragDrop', {

                                            })
                                        ],
                                        listeners: {
                                            drop: {
                                                fn: me.onGriddragdroppluginDrop11,
                                                scope: me
                                            }
                                        }
                                    },
                                    selModel: Ext.create('Ext.selection.RowModel', {
                                        mode: 'MULTI'
                                    }),
                                    listeners: {
                                        render: {
                                            fn: me.onRWgeo_f2_2_selectedRender,
                                            scope: me
                                        },
                                        add: {
                                            fn: me.onRWgeo_f2_2_selectedAdd,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'radiofield',
                            x: 10,
                            y: 270,
                            id: 'RWgeo_f3_1',
                            fieldLabel: '',
                            boxLabel: 'User Origin Inside',
                            listeners: {
                                change: {
                                    fn: me.onRWgeo_f3_1Change,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            x: 20,
                            y: 300,
                            text: '(Drag Country or Ctrl+Click)'
                        },
                        {
                            xtype: 'container',
                            x: 210,
                            y: 270,
                            disabled: true,
                            height: 180,
                            id: 'RWgeo_f3_2_cont',
                            width: 430,
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'button',
                                    x: 200,
                                    y: 100,
                                    text: '<<',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick17,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    x: 200,
                                    y: 60,
                                    text: '>>',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick16,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'gridpanel',
                                    x: 10,
                                    y: 15,
                                    height: 150,
                                    id: 'RWgeo_f3_2_all',
                                    width: 150,
                                    title: '',
                                    forceFit: true,
                                    store: 'rw_geoInsideAll',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<span class="flag flag-' + record.get('Alias') + '"></span>&nbsp;&nbsp;'+record.get('Country');
                                            },
                                            width: 185,
                                            dataIndex: 'Country',
                                            text: 'All'
                                        }
                                    ],
                                    viewConfig: {
                                        plugins: [
                                            Ext.create('Ext.grid.plugin.DragDrop', {

                                            })
                                        ],
                                        listeners: {
                                            drop: {
                                                fn: me.onGriddragdroppluginDrop,
                                                scope: me
                                            }
                                        }
                                    },
                                    selModel: Ext.create('Ext.selection.RowModel', {
                                        mode: 'MULTI'
                                    }),
                                    listeners: {
                                        render: {
                                            fn: me.onRWgeo_f3_2_allRender,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'gridpanel',
                                    x: 270,
                                    y: 15,
                                    height: 150,
                                    id: 'RWgeo_f3_2_selected',
                                    width: 150,
                                    title: '',
                                    forceFit: true,
                                    store: 'rw_geoInsideChosen',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<span class="flag flag-' + record.get('Alias') + '"></span>&nbsp;&nbsp;'+record.get('Country');
                                            },
                                            width: 185,
                                            dataIndex: 'Country',
                                            text: 'Selected'
                                        }
                                    ],
                                    viewConfig: {
                                        plugins: [
                                            Ext.create('Ext.grid.plugin.DragDrop', {

                                            })
                                        ],
                                        listeners: {
                                            drop: {
                                                fn: me.onGriddragdroppluginDrop1,
                                                scope: me
                                            }
                                        }
                                    },
                                    selModel: Ext.create('Ext.selection.RowModel', {
                                        mode: 'MULTI'
                                    }),
                                    listeners: {
                                        render: {
                                            fn: me.onRWgeo_f3_2_selectedRender,
                                            scope: me
                                        },
                                        add: {
                                            fn: me.onRWgeo_f3_2_selectedAdd,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'button',
                            x: 20,
                            y: 620,
                            icon: 'extjs/resources/themes/images/default/grid/page-prev.gif',
                            text: 'Back',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick14,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 770,
                            y: 620,
                            height: 20,
                            width: 60,
                            icon: 'Htmls/images/x.gif',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick15,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 90,
                            y: 620,
                            id: 'RWgeo_submit',
                            icon: 'Htmls/images/save.gif',
                            text: 'Submit',
                            listeners: {
                                click: {
                                    fn: me.onRWgeo_submitClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            x: 370,
                            y: 13,
                            height: 20,
                            text: 'Seconds'
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    height: 700,
                    hidden: true,
                    id: 'RulesWizard_bot',
                    padding: 10,
                    layout: 'absolute',
                    bodyPadding: 10,
                    title: 'Bot-Intelligence Rule',
                    items: [
                        {
                            xtype: 'combobox',
                            x: 20,
                            y: 20,
                            id: 'RWbot_type',
                            fieldLabel: 'Bot Type',
                            labelAlign: 'top',
                            labelStyle: 'margin-bottom:20px;font-weight:bold;',
                            value: 'Tor',
                            displayField: 'type',
                            queryMode: 'local',
                            store: 'bot_type_store'
                        },
                        {
                            xtype: 'button',
                            x: 20,
                            y: 620,
                            icon: 'extjs/resources/themes/images/default/grid/page-prev.gif',
                            text: 'Back',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick18,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 770,
                            y: 620,
                            icon: 'Htmls/images/x.gif',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick19,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 90,
                            y: 620,
                            id: 'RWbot_submit',
                            icon: 'Htmls/images/save.gif',
                            text: 'Submit',
                            listeners: {
                                click: {
                                    fn: me.onRWbot_submitClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            listeners: {
                hide: {
                    fn: me.onRulesWizardHide,
                    scope: me
                },
                show: {
                    fn: me.onRulesWizardShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onRadiofieldChange: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            Ext.getCmp('RW1_exists_category_cb').setValue(false)
            Ext.getCmp('RW1_new_category_name').enable()
            Ext.getCmp('RW1_f1').setValue(true)
        }
        else{
            Ext.getCmp('RW1_new_category_name').disable()
        }
    },

    onRW1_exists_category_cbChange: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            Ext.getCmp('RW1_new_category_cb').setValue(false)
            Ext.getCmp('RW1_exists_category_name').enable()
        }
        else{
            Ext.getCmp('RW1_exists_category_name').disable()
        }
    },

    onRW1_f13Keyup11: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    onRW1_exists_category_nameChange: function(field, newValue, oldValue, eOpts) {
        Ext.getCmp('RW1_f13').reset()
        var store = Ext.getCmp('RW1_f13').getStore()
        if(newValue){
            store.getProxy().extraParams['category_id'] = field.valueModels[0].data.id
        }
        else{
            store.getProxy().extraParams['category_id'] = -1
        }
    },

    onRW1_f1Change: function(field, newValue, oldValue, eOpts) {
        /*if (newValue){
        if (Ext.getCmp('RW1_f2').getValue()!=null & Ext.getCmp('RW1_f3').getValue()!=null & Ext.getCmp('RW1_f4').getValue()!=null)
        Ext.getCmp('RW1_next').enable();
        else
        Ext.getCmp('RW1_next').disable();
        Ext.getCmp('RW1_f12').setValue(false);
        Ext.getCmp('RW1_f2').enable();
        Ext.getCmp('RW1_f3').enable();
        Ext.getCmp('RW1_f4').enable();
        Ext.getCmp('RW1_f5').enable();
        Ext.getCmp('RW1_cbg').enable();
        Ext.getCmp('RW1_f10').enable();
        Ext.getCmp('RW1_f11').enable();
        }
        else{
        Ext.getCmp('RW1_f2').disable();
        Ext.getCmp('RW1_f3').disable();
        Ext.getCmp('RW1_f4').disable();
        Ext.getCmp('RW1_f5').disable();
        Ext.getCmp('RW1_cbg').disable();
        Ext.getCmp('RW1_f10').disable();
        Ext.getCmp('RW1_f11').disable();
        }*/


        if (newValue){
            Ext.getCmp('RW1_f2').enable()
            Ext.getCmp('RW1_f12').setValue(false);
        }
        else{
            Ext.getCmp('RW1_f2').disable()
        }
    },

    onRW1_f12Change: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('RW1_f13').enable();
            Ext.getCmp('RW1_f1').setValue(false);
            //Ext.getCmp('RW1_f13').getStore().reload();
            Ext.getCmp('RW1_exists_category_cb').setValue(true)
        }
        else
        Ext.getCmp('RW1_f13').disable();


    },

    onRW1_f13Render: function(component, eOpts) {
        /*
        abstractcomponent.getEl().addListener(
        'mouseover',
        function( e, t, eOpts ){
        Ext.getCmp('RW1_f13_h').show();

        }
        );

        abstractcomponent.getEl().addListener(
        'mouseout',
        function( e, t, eOpts ){
        setInterval(function(){
        Ext.getCmp('RW1_f13_h').hide();
        },
        3000
        )

        }
        );
        */
    },

    onRW1_f13Keyup: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    onButtonClick23: function(button, e, eOpts) {
        Ext.WindowManager.get('RulesWizard').hide();
        Ext.getCmp('main_panel').enable();
    },

    RulesWizard_category_nextnextclick: function(button, e, eOpts) {
        rw_category_window_next()
    },

    onRW1_f6Render: function(component, eOpts) {
        /*
        abstractcomponent.getEl().addListener(
        'mouseover',
        function( e, t, eOpts ){
        Ext.getCmp('RW1_f6_h').show();

        }
        );

        abstractcomponent.getEl().addListener(
        'mouseout',
        function( e, t, eOpts ){
        setInterval(function(){
        Ext.getCmp('RW1_f6_h').hide();
        },
        3000
        )

        }
        );
        */
    },

    onImageRender361111: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Page to apply rule on'
        });
    },

    onImageRender3611111: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Page to apply rule on'
        });
    },

    onRW1_f8Render: function(component, eOpts) {
        /*
        abstractcomponent.getEl().addListener(
        'mouseover',
        function( e, t, eOpts ){
            Ext.getCmp('RW1_f8_h').show();

        }
        );

        abstractcomponent.getEl().addListener(
        'mouseout',
        function( e, t, eOpts ){
            setInterval(function(){
                Ext.getCmp('RW1_f8_h').hide();
            },
            3000
            )

        }
        );
        */
    },

    onImageRender36111111: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Page to apply rule on'
        });
    },

    onImageRender361111111: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Page to apply rule on'
        });
    },

    onRW1_f7Render: function(component, eOpts) {
        /*
        abstractcomponent.getEl().addListener(
        'mouseover',
        function( e, t, eOpts ){
            Ext.getCmp('RW1_f7_h').show();

        }
        );

        abstractcomponent.getEl().addListener(
        'mouseout',
        function( e, t, eOpts ){
            setInterval(function(){
                Ext.getCmp('RW1_f7_h').hide();
            },
            3000
            )

        }
        );
        */
    },

    onRW1_f7Change: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('b_rwEmailField_field').enable();
            Ext.getCmp('b_rwEmailField_button').enable();
            Ext.getCmp('b_rwEmailField').enable();
        } else {
            Ext.getCmp('b_rwEmailField_field').disable();
            Ext.getCmp('b_rwEmailField_button').disable();
            Ext.getCmp('b_rwEmailField').disable();
        }
    },

    onTextfieldKeypress1221: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;
        var field = Ext.getCmp('b_rwEmailField_field');
        var new_add = field.getValue();
        var dup = check_for_duplicates(field,Ext.getCmp('b_rwEmailField_field').getStore())
        if (field.isValid() && !dup){
            Ext.getCmp('b_rwEmailField').getStore().add({address:new_add});
            field.reset();
            field.clearInvalid()
        }
        if (dup){
            field.reset();
            field.clearInvalid()
        }
    },

    RW_check_dupe_add_email: function(button, e, eOpts) {
        var field = Ext.getCmp('b_rwEmailField_field');
        var new_add = field.getValue();
        var dup = check_for_duplicates(field,Ext.getCmp('b_rwEmailField').getStore())
        if (field.isValid() && !dup){
            Ext.getCmp('b_rwEmailField').getStore().add({address:new_add});
            field.reset();
            field.clearInvalid()
        }
        if (dup){
            field.reset();
            field.clearInvalid()
        }
    },

    onCellEditingValidateedit: function(editor, e, eOpts) {
        return validate_edition(editor,e)
    },

    onButtonClick261: function(button, e, eOpts) {
        open_parameters_window_for_alerts('rw_alert_params')
    },

    onB_ri_alert_idChange1: function(field, newValue, oldValue, eOpts) {
        var store=Ext.getCmp("rw_alert_params").getStore()
        var param_name = Ext.getCmp('rw_alert_name').getValue()
        var record = store.find('td1',newValue,0,false,false,true)
        if (record!=-1){
            Ext.Msg.alert('Info', 'Parameter '+param_name+' has already been selected.');
            return;
        }
        if (param_record_to_override){
            param_record_to_override.set('td1',newValue)
            param_record_to_override.set('td0',param_name)
            param_record_to_override = undefined
        }
        else{
            store.add({
                td0:param_name,
                td1:newValue
            })
        }

    },

    onRW1_nextClick: function(button, e, eOpts) {
        rw_group_window_next()
    },

    onRW1_cancelClick: function(button, e, eOpts) {
        //Ext.getCmp('RulesWizard').clearFields();
        Ext.WindowManager.get('RulesWizard').hide();
        Ext.getCmp('main_panel').enable();
    },

    onButtonClick24: function(button, e, eOpts) {
        Ext.getCmp('RulesWizard_win1').hide();
        Ext.getCmp('RulesWizard_category').show();
    },

    onRW2_f4Expand: function(field, eOpts) {

    },

    onRW2_f4Change: function(field, newValue, oldValue, eOpts) {
        Ext.getCmp('RulesWizard_alerts_and_score').show();
        /*if(newValue !="Parameter Rule"){
            Ext.getCmp('RulesWizard_alerts_and_score').show();
            Ext.getCmp("RW2_f6").setValue(10);
        }
        else{
            Ext.getCmp("RW2_f6").setValue(1);
            Ext.getCmp('RulesWizard_alerts_and_score').hide();
        }*/
    },

    onRW2_f4Keyup: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    onRW2_f5_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('RW2_f5_1_2').enable();
        }
        else
        Ext.getCmp('RW2_f5_1_2').disable();
    },

    onRW2_f5_1_2Keyup: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    onRW2_f5_1_2Change: function(field, newValue, oldValue, eOpts) {
        // On change app unvalidate flow if set and not matching app
        if (Ext.getCmp('RW2_f4').value == 'Pattern Rule') {

            if (newValue !="" && Ext.getCmp('RW2_f5_1').value && Ext.getCmp('RWpat_flow_radio') && Ext.getCmp('RWpat_flow_select').value != '') {

                var app_store  = Ext.getCmp('RW2_f5_1_2').getStore();
                var app_app_id = false;

                app_store.each(function(record){
                    if (record.get('app')==newValue) {
                        app_app_id = record.get('id');
                    }
                });

                var flow_store = Ext.getCmp('RWpat_flow_select').getStore();
                var flow_app_id = false;

                flow_store.each(function(record){
                    if (record.get('group')==Ext.getCmp('RWpat_flow_select').value) {
                        flow_app_id = record.get('app_id');
                    }
                });

                if(app_app_id != flow_app_id) {
                    Ext.getCmp('RWpat_flow_select').setValue(null);
                }

            }

        }
    },

    onRW2_f5_2Change: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('RW2_f5_2_2').enable();
            Ext.getCmp('RW2_f5_not').enable();
            Ext.getCmp('RW2_f5_add').enable();
        }
        else {
            Ext.getCmp('RW2_f5_2_2').disable();
            Ext.getCmp('RW2_f5_not').disable();
            Ext.getCmp('RW2_f5_add').disable();
        }

    },

    onRW2_f5_3Change: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('RW2_f5_3_2').enable();
            //Ext.getCmp('RW2_f5_1').setValue(false);
            //Ext.getCmp('RW2_f5_2').setValue(false);
        }
        else
        Ext.getCmp('RW2_f5_3_2').disable();
    },

    onRW2_f5_addClick: function(button, e, eOpts) {
        telepath.rules.addIPsButtonClick('wizard');
    },

    onRWasp_f2Change1: function(field, newValue, oldValue, eOpts) {
        if (newValue=="Numeric"){
            Ext.getCmp('RWrule_score_type2').show();
            Ext.getCmp('RWrule_score_type3').hide();
        }
        else{
            Ext.getCmp('RWrule_score_type2').hide();
            Ext.getCmp('RWrule_score_type3').show();
        }
    },

    onRWasp_f2Keyup1: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    onRWasp_f5Keyup1: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    onButtonClick1: function(button, e, eOpts) {
        //Ext.getCmp('RulesWizard').clearFields();
        Ext.getCmp('RulesWizard_win2').hide();
        Ext.getCmp('RulesWizard_win1').show();
        Ext.WindowManager.get('RulesWizard').hide();
        Ext.getCmp('main_panel').enable();
    },

    onButtonClick: function(button, e, eOpts) {

        if (Ext.getCmp('RW1_f12').getValue()){
            Ext.getCmp('RulesWizard_win2').hide();
            Ext.getCmp('RulesWizard_category').show();
        }
        else{
            Ext.getCmp('RulesWizard_win2').hide();
            Ext.getCmp('RulesWizard_win1').show();
        }
    },

    RW2_nextclick: function(button, e, eOpts) {
        rw_rule_window_next()
    },

    onRWpar_radio_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue) {

            Ext.getCmp('RWpar_radio_2').setValue(false);
            Ext.getCmp('RWpar_radio_3').setValue(false);
            Ext.getCmp('RWpar_radio_4').setValue(false);

            var b_par_containers = ["RWpar_similar_cont",
            "RWpar_between_cont",
            "RWpar_length_cont",
            "RWpar_fuzzy_cont",
            "RWpar_contains_cont",
            "RWpar_regex_cont",
            "RWpar_heuristic_cont"];

            $.each(b_par_containers, function(i, cont) {
                Ext.getCmp(cont).show();
            });

            Ext.getCmp('RWpar_f1').enable();
            Ext.getCmp('RWpar_f1_browse').enable();
            Ext.getCmp('RWpar_post_cb').disable();
            Ext.getCmp('RWpar_get_cb').disable();
            Ext.getCmp('RWpar_header_cb').disable();


        }
    },

    onRWpar_radio_1Render: function(component, eOpts) {
        Ext.getCmp('RWpar_radio_1').fireEvent('change')
    },

    onRWpar_f1Change: function(field, newValue, oldValue, eOpts) {

        // if (Ext.getCmp("RWpar_f1_id").getValue().length>0 & Ext.getCmp("RWpar_f1_id").getValue().charAt(0)!=" " ){
        Ext.getCmp("RWpar_submit").enable();
        //  return;
        // }

    },

    onRWpar_f1Change: function(field, newValue, oldValue, eOpts) {
        Ext.getCmp("RWpar_submit").enable();

    },

    onButtonClick7: function(button, e, eOpts) {
        telepath.rules.openParameters("Parameter_Attribute_RW");
    },

    onRWpar_radio_1Change1: function(field, newValue, oldValue, eOpts) {
        if (newValue) {

            Ext.getCmp('RWpar_radio_1').setValue(false);
            Ext.getCmp('RWpar_radio_3').setValue(false);
            Ext.getCmp('RWpar_radio_4').setValue(false);
            Ext.getCmp('RWpar_f9_1').setValue(true);

            var b_par_containers =
            ["RWpar_similar_cont",
            "RWpar_between_cont",
            "RWpar_length_cont",
            "RWpar_fuzzy_cont",
            "RWpar_contains_cont",
            "RWpar_heuristic_cont"];

            $.each(b_par_containers, function(i, cont) {
                Ext.getCmp(cont).hide();
            });

            Ext.getCmp('RWpar_f1').disable();
            Ext.getCmp('RWpar_f1_browse').disable();
            Ext.getCmp('RWpar_post_cb').enable();
            Ext.getCmp('RWpar_get_cb').enable();
            Ext.getCmp('RWpar_header_cb').enable();

        }

    },

    onRWpar_radio_2Render: function(component, eOpts) {
        Ext.getCmp('RWpar_radio_2').fireEvent('change')
    },

    onRWpar_radio_1Change11: function(field, newValue, oldValue, eOpts) {
        if (newValue) {

            Ext.getCmp('RWpar_radio_1').setValue(false);
            Ext.getCmp('RWpar_radio_2').setValue(false);
            Ext.getCmp('RWpar_radio_4').setValue(false);
            Ext.getCmp('RWpar_f9_1').setValue(true);

            var b_par_containers =
            ["RWpar_similar_cont",
            "RWpar_between_cont",
            "RWpar_length_cont",
            "RWpar_fuzzy_cont",
            "RWpar_heuristic_cont"];

            $.each(b_par_containers, function(i, cont) {
                Ext.getCmp(cont).hide();
            });

            Ext.getCmp("RWpar_contains_cont").show();

            Ext.getCmp('RWpar_f1').disable();
            Ext.getCmp('RWpar_f1_browse').disable();
            Ext.getCmp('RWpar_post_cb').disable();
            Ext.getCmp('RWpar_get_cb').disable();
            Ext.getCmp('RWpar_header_cb').disable();

        }

    },

    onRWpar_radio_2Render1: function(component, eOpts) {
        Ext.getCmp('RWpar_radio_2').fireEvent('change')
    },

    onRWpar_radio_1Change111: function(field, newValue, oldValue, eOpts) {
        if (newValue) {

            Ext.getCmp('RWpar_radio_1').setValue(false);
            Ext.getCmp('RWpar_radio_2').setValue(false);
            Ext.getCmp('RWpar_radio_3').setValue(false);
            Ext.getCmp('RWpar_f9_1').setValue(true);

            var b_par_containers =
            ["RWpar_similar_cont",
            "RWpar_between_cont",
            "RWpar_length_cont",
            "RWpar_fuzzy_cont",
            "RWpar_heuristic_cont"];

            $.each(b_par_containers, function(i, cont) {
                Ext.getCmp(cont).hide();
            });

            Ext.getCmp("RWpar_contains_cont").show();

            Ext.getCmp('RWpar_f1').disable();
            Ext.getCmp('RWpar_f1_browse').disable();
            Ext.getCmp('RWpar_post_cb').disable();
            Ext.getCmp('RWpar_get_cb').disable();
            Ext.getCmp('RWpar_header_cb').disable();

        }

    },

    onRWpar_radio_2Render11: function(component, eOpts) {
        Ext.getCmp('RWpar_radio_2').fireEvent('change')
    },

    onRWpar_f2Change: function(field, newValue, oldValue, eOpts) {
        if (newValue==true){
            Ext.getCmp('RWpar_f6_1').setValue(false);
            Ext.getCmp('RWpar_f7_1').setValue(false);
            Ext.getCmp('RWpar_f4_1').setValue(false);
            Ext.getCmp('RWpar_f5_1').setValue(false);
            Ext.getCmp('RWpar_f3_1').setValue(false);
            Ext.getCmp('RWpar_f9_1').setValue(false);
            //Ext.getCmp('heuristic').enable();
            //Ext.getCmp('heuristic').enable();
            Ext.getCmp('RWpar_f2_label').enable();
        }
        else{
            //Ext.getCmp('heuristic').disable();
            Ext.getCmp('RWpar_f2_label').disable();

        }
    },

    onRWpar_f9_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue==true){
            Ext.getCmp('RWpar_f6_1').setValue(false);
            Ext.getCmp('RWpar_f7_1').setValue(false);
            Ext.getCmp('RWpar_f4_1').setValue(false);
            Ext.getCmp('RWpar_f5_1').setValue(false);
            Ext.getCmp('RWpar_f2').setValue(false);
            Ext.getCmp('RWpar_f3_1').setValue(false);
            //field.enable();
            Ext.getCmp('RWpar_f9_2').enable();
            Ext.getCmp('RWpar_f9_3').enable();
        }
        else{
            //field.disable();
            Ext.getCmp('RWpar_f9_2').disable();
            Ext.getCmp('RWpar_f9_3').disable();
        }
    },

    onRWpar_f3_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue==true){
            Ext.getCmp('RWpar_f6_1').setValue(false);
            Ext.getCmp('RWpar_f7_1').setValue(false);
            Ext.getCmp('RWpar_f4_1').setValue(false);
            Ext.getCmp('RWpar_f5_1').setValue(false);
            Ext.getCmp('RWpar_f9_1').setValue(false);
            Ext.getCmp('RWpar_f2').setValue(false);
            //field.enable();
            Ext.getCmp('RWpar_f3_2').enable();
            Ext.getCmp('RWpar_f3_3').enable();
        }
        else{
            //field.disable();
            Ext.getCmp('RWpar_f3_2').disable();
            Ext.getCmp('RWpar_f3_3').disable();
        }
    },

    onRWpar_f4_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue==true){

        if (Ext.getCmp("RWpar_f4_2").getValue()!="Is too Short" && Ext.getCmp("RWpar_f4_2").getValue()!="Is too Long" && Ext.getCmp("RWpar_f4_2").getValue()!="Either Short/Long")
            Ext.getCmp("RWpar_f4_2").setValue("Is too Short");
            Ext.getCmp('RWpar_f6_1').setValue(false);
            Ext.getCmp('RWpar_f7_1').setValue(false);
            Ext.getCmp('RWpar_f2').setValue(false);
            Ext.getCmp('RWpar_f5_1').setValue(false);
            Ext.getCmp('RWpar_f3_1').setValue(false);
            Ext.getCmp('RWpar_f9_1').setValue(false);
            //field.enable();
            Ext.getCmp('RWpar_f4_2').enable();

        }
        else{
            //field.disable();
            Ext.getCmp('RWpar_f4_2').disable();
        }
    },

    onRWpar_f4_2Keyup: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    onRWpar_f5_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue==true){
            Ext.getCmp('RWpar_f6_1').setValue(false);
            Ext.getCmp('RWpar_f7_1').setValue(false);
            Ext.getCmp('RWpar_f4_1').setValue(false);
            Ext.getCmp('RWpar_f2').setValue(false);
            Ext.getCmp('RWpar_f3_1').setValue(false);
            Ext.getCmp('RWpar_f9_1').setValue(false);
            //field.enable();
            Ext.getCmp('RWpar_f5_2').enable();
            Ext.getCmp('char_5').enable();
        }
        else{
            //field.disable();
            Ext.getCmp('RWpar_f5_2').disable();
            Ext.getCmp('char_5').disable();
        }
    },

    onRWpar_f6_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue==true){
            Ext.getCmp('RWpar_f2').setValue(false);
            Ext.getCmp('RWpar_f7_1').setValue(false);
            Ext.getCmp('RWpar_f4_1').setValue(false);
            Ext.getCmp('RWpar_f5_1').setValue(false);
            Ext.getCmp('RWpar_f3_1').setValue(false);
            Ext.getCmp('RWpar_f9_1').setValue(false);
            //field.enable();
            Ext.getCmp('RWpar_f6_2').enable();
            Ext.getCmp('RWpar_f6_3').enable();
            Ext.getCmp('char_6').enable();
        }
        else{
            //field.disable();
            Ext.getCmp('RWpar_f6_2').disable();
            Ext.getCmp('RWpar_f6_3').disable();
            Ext.getCmp('char_6').disable();
        }
    },

    onRWpar_f7_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue==true){
            Ext.getCmp('RWpar_f6_1').setValue(false);
            Ext.getCmp('RWpar_f2').setValue(false);
            Ext.getCmp('RWpar_f4_1').setValue(false);
            Ext.getCmp('RWpar_f5_1').setValue(false);
            Ext.getCmp('RWpar_f3_1').setValue(false);
            Ext.getCmp('RWpar_f9_1').setValue(false);
            //field.enable();
            Ext.getCmp('RWpar_f7_2').enable();
            Ext.getCmp('RWpar_f7_3').enable();
            Ext.getCmp('char_7').enable();
        }
        else{
            //field.disable();
            Ext.getCmp('RWpar_f7_2').disable();
            Ext.getCmp('RWpar_f7_3').disable();
            Ext.getCmp('char_7').disable();

        }
    },

    onButtonClick8: function(button, e, eOpts) {
        submit_parameter_rule()
    },

    onButtonClick6: function(button, e, eOpts) {
        Ext.getCmp('RulesWizard_param').hide();
        Ext.getCmp('RulesWizard_win2').show();

    },

    onButtonClick3: function(button, e, eOpts) {
        //Ext.getCmp('RulesWizard').clearFields();
        Ext.getCmp('RulesWizard_param').hide();
        Ext.getCmp('RulesWizard_win1').show();
        Ext.WindowManager.get('RulesWizard').hide();
        Ext.getCmp('main_panel').enable();
    },

    onButtonClick611: function(button, e, eOpts) {
        telepath.rules.openParameters("Parameter_Page_RW");
    },

    onRulesWizard_paramRender: function(component, eOpts) {
        $('#RWpar_f1-inputEl').on('keypress', function () {
        Ext.getCmp('RWpar_f1_page').setValue('');
        Ext.getCmp('RWpar_f1_id_page').setValue('');
        Ext.getCmp('RWpar_f1_id').setValue('');
        });

    },

    onRWpat_f1Change: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onRWpat_f2Change: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);

    },

    onRWpat_f10Change: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onRWpat_f3Change: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onRWpat_f3_2Click: function(button, e, eOpts) {
        telepath.rules.openParameters("Pattern_Other_RW");
    },

    onRWpat_page_radioChange: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onRWpat_page_radioChange1: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onRWpat_f4Change: function(field, newValue, oldValue, eOpts) {

        //if (Ext.getCmp("RWpat_f1_id").getValue().length>0 & Ext.getCmp("RWpat_f1_id").getValue().charAt(0)!=" " ){
        //if(Ext.getCmp("RWpat_f6").getValue()!=null)
        //Ext.getCmp("RWpat_submit").enable();
        //       return;
        //}
    },

    onRWpat_f4_id_pageChange: function(field, newValue, oldValue, eOpts) {
        if (newValue==""){
            Ext.getCmp('RWpat_submit').disable();
        }
        else{
            Ext.getCmp('RWpat_submit').enable();
        }
    },

    rapat_pageclickselect: function(button, e, eOpts) {
        telepath.rules.openParameters("Pattern_Dynamic_Page_RW");

    },

    rapat_pageclickremove: function(button, e, eOpts) {
        Ext.getCmp('RWpat_f4_page').reset();
        Ext.getCmp('RWpat_f4_id_page').reset();
        Ext.getCmp('RWpat_submit').disable();
    },

    onRWpat_parameter_radioChange: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onRWpat_parameter_radioChange1: function(field, newValue, oldValue, eOpts) {
        telepath.rules.changeRulePatternCB(field, newValue, oldValue, eOpts);
    },

    onRW1_f11Keyup1: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    onRWpat_flow_selectChange: function(field, newValue, oldValue, eOpts) {
        if (newValue==""){
            Ext.getCmp('RWpat_submit').disable();
        }
        else{
            Ext.getCmp('RWpat_submit').enable();
        }

        if(newValue != '' && Ext.getCmp('RWpat_flow_radio').value) {

            Ext.getCmp('RW2_f5_1').setValue(true);

        	var store  = Ext.getCmp('RWpat_flow_select').getStore();

            store.each(function(record){
                if (record.get('group')==newValue) {
                    var app_id = record.get('app_id');
                    var store  = Ext.getCmp('RW2_f5_1_2').getStore();
        			if(app_id != ""){
        					store.each(function(record){
        						if (record.get('id')==app_id){
        							Ext.getCmp('RW2_f5_1_2').setValue(record.get('app'));
        						}
        					});
        				}
                }
            });

        }
    },

    onRWpat_flow_selectExpand: function(field, eOpts) {
        if(Ext.getCmp('RW2_f5_1').value) { // App filter is on

        	var app_id = Ext.getCmp('RW2_f5_1_2').store.findRecord('app', Ext.getCmp('RW2_f5_1_2').value).data.id;
            Ext.getCmp('RWpat_flow_select').store.filterBy(function(rec) {
                return rec.data.app_id == app_id || app_id == -1;
        	});

        }

    },

    onRWpat_f4Change: function(field, newValue, oldValue, eOpts) {

        //if (Ext.getCmp("RWpat_f1_id").getValue().length>0 & Ext.getCmp("RWpat_f1_id").getValue().charAt(0)!=" " ){
        if(Ext.getCmp("RWpat_f6").getValue()!=null)
        Ext.getCmp("RWpat_submit").enable();
        //       return;
        //}
    },

    onRWpat_f4_idChange: function(field, newValue, oldValue, eOpts) {
        if (newValue==""){
            Ext.getCmp('RWpat_submit').disable();
        }
        else{
            Ext.getCmp('RWpat_submit').enable();
        }
    },

    rw_pat_param_br: function(button, e, eOpts) {
        telepath.rules.openParameters("Pattern_Dynamic_RW");
    },

    rw_pat_param_remove: function(button, e, eOpts) {
        Ext.getCmp('RWpat_f4').reset();
        Ext.getCmp('RWpat_f4_id').reset();
        Ext.getCmp('RWpat_submit').disable();
    },

    onRWpat_f6Change: function(field, newValue, oldValue, eOpts) {
        if(Ext.getCmp("RWpat_f4").getValue()!=null)
                Ext.getCmp("RWpat_submit").enable();
    },

    onRWpat_f7Keyup: function(textfield, e, eOpts) {
        var combo = textfield;
        var event = e;
        var key = String.fromCharCode(event.getKey()),
            boundList = combo.getPicker(),
            store = boundList.getStore(),
            record = store.findRecord(combo.displayField, key);

        if (record) {
            boundList.highlightItem(boundList.getNode(record));
        }
    },

    rw_pat_back_click: function(button, e, eOpts) {

        Ext.getCmp('RulesWizard_pat').hide();
        Ext.getCmp('RulesWizard_win2').show();

    },

    rw_pat_sbumitclick: function(button, e, eOpts) {
        submit_pattern_rule()
    },

    rw_pat_cancel: function(button, e, eOpts) {
        //Ext.getCmp('RulesWizard').clearFields();
        Ext.getCmp('RulesWizard_pat').hide();
        Ext.getCmp('RulesWizard_win1').show();
        Ext.WindowManager.get('RulesWizard').hide();
        Ext.getCmp('main_panel').enable();
    },

    onButtonClick9: function(button, e, eOpts) {
        submit_aspect_rule()

    },

    onButtonClick10: function(button, e, eOpts) {
        Ext.getCmp('RulesWizard_asp').hide();
        Ext.getCmp('RulesWizard_win2').show();

    },

    onButtonClick11: function(button, e, eOpts) {
        //Ext.getCmp('RulesWizard').clearFields();
        Ext.getCmp('RulesWizard_asp').hide();
        Ext.getCmp('RulesWizard_win1').show();
        Ext.WindowManager.get('RulesWizard').hide();
        Ext.getCmp('main_panel').enable();
    },

    onRWgeo_f1_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp("RWgeo_f1_2").enable();
            Ext.getCmp("RWgeo_f1_3").enable();
            Ext.getCmp("RWgeo_f2_1").setValue(false);
            Ext.getCmp("RWgeo_f3_1").setValue(false);
            Ext.getCmp("RWgeo_submit").enable();
        }
        else{
            Ext.getCmp("RWgeo_f1_2").disable();
            Ext.getCmp("RWgeo_f1_3").disable();
        }
    },

    onRWgeo_f2_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp("RWgeo_f2_2_cont").enable();
            Ext.getCmp("RWgeo_f1_1").setValue(false);
            Ext.getCmp("RWgeo_f3_1").setValue(false);
        }
        else{
            Ext.getCmp("RWgeo_f2_2_cont").disable();

        }

        if (newValue && Ext.getCmp('RWgeo_f2_2_selected').getStore().count()>0){
            Ext.getCmp("RWgeo_submit").enable();
        }
        else{
            Ext.getCmp("RWgeo_submit").disable();
        }
    },

    onButtonClick171: function(button, e, eOpts) {
        var alreadySelected = Ext.getCmp('RWgeo_f2_2_selected').getSelectionModel().getSelection();
        var storeSel = Ext.getCmp('RWgeo_f2_2_selected').getStore();
        var storeAll = Ext.getCmp('RWgeo_f2_2_all').getStore();
        for(var i=0;i<alreadySelected.length;i++){
            storeSel.remove(alreadySelected[i]);
            storeAll.add(alreadySelected[i]);
        }

        Ext.getCmp('RWgeo_f2_2_all').getStore().sort('Country','ASC');
    },

    onButtonClick161: function(button, e, eOpts) {
        var newSelected = Ext.getCmp('RWgeo_f2_2_all').getSelectionModel().getSelection();
        var storeSel = Ext.getCmp('RWgeo_f2_2_selected').getStore();
        var storeAll = Ext.getCmp('RWgeo_f2_2_all').getStore();
        for(var i=0;i<newSelected.length;i++){
            storeAll.remove(newSelected[i]);
            storeSel.add(newSelected[i]);
        }

        Ext.getCmp('RWgeo_f2_2_selected').getStore().sort('Country','ASC');
    },

    onGriddragdroppluginDrop2: function() {
        Ext.getCmp('RWgeo_f2_2_all').getStore().sort('Country','ASC');
    },

    onRWgeo_f2_2_allRender: function(component, eOpts) {
        component.getStore().sort('Country','ASC');
    },

    onGriddragdroppluginDrop11: function() {
        Ext.getCmp('RWgeo_f2_2_selected').getStore().sort('Country','ASC');
    },

    onRWgeo_f2_2_selectedRender: function(component, eOpts) {
        component.getStore().sort('Country','ASC');
    },

    onRWgeo_f2_2_selectedAdd: function(container, component, index, eOpts) {
        if (Ext.getCmp('RWgeo_f2_2_selected')!=undefined)
        {
            if (Ext.getCmp('RWgeo_f2_2_selected').getStore().count()>0){
                Ext.getCmp("RWgeo_submit").enable();
            }
        }
    },

    onRWgeo_f3_1Change: function(field, newValue, oldValue, eOpts) {
        if (newValue){

            Ext.getCmp("RWgeo_f3_2_cont").enable();
            Ext.getCmp("RWgeo_f1_1").setValue(false);
            Ext.getCmp("RWgeo_f2_1").setValue(false);
        }
        else{
            Ext.getCmp("RWgeo_f3_2_cont").disable();

        }


        if (newValue && Ext.getCmp('RWgeo_f3_2_selected').getStore().count()>0){
            Ext.getCmp("RWgeo_submit").enable();
        }
        else{
            Ext.getCmp("RWgeo_submit").disable();
        }
    },

    onButtonClick17: function(button, e, eOpts) {
        var alreadySelected = Ext.getCmp('RWgeo_f3_2_selected').getSelectionModel().getSelection();
        var storeSel = Ext.getCmp('RWgeo_f3_2_selected').getStore();
        var storeAll = Ext.getCmp('RWgeo_f3_2_all').getStore();
        for(var i=0;i<alreadySelected.length;i++){
            storeSel.remove(alreadySelected[i]);
            storeAll.add(alreadySelected[i]);
        }
        Ext.getCmp('RWgeo_f3_2_all').getStore().sort('Country','ASC');
    },

    onButtonClick16: function(button, e, eOpts) {
        var newSelected = Ext.getCmp('RWgeo_f3_2_all').getSelectionModel().getSelection();
        var storeSel = Ext.getCmp('RWgeo_f3_2_selected').getStore();
        var storeAll = Ext.getCmp('RWgeo_f3_2_all').getStore();
        for(var i=0;i<newSelected.length;i++){
            storeAll.remove(newSelected[i]);
            storeSel.add(newSelected[i]);
        }

        Ext.getCmp('RWgeo_f3_2_selected').getStore().sort('Country','ASC');
    },

    onGriddragdroppluginDrop: function() {
        Ext.getCmp('RWgeo_f3_2_all').getStore().sort('Country','ASC');
    },

    onRWgeo_f3_2_allRender: function(component, eOpts) {
        component.getStore().sort('Country','ASC');
    },

    onGriddragdroppluginDrop1: function() {
        Ext.getCmp('RWgeo_f3_2_selected').getStore().sort('Country','ASC');
    },

    onRWgeo_f3_2_selectedRender: function(component, eOpts) {
        component.getStore().sort('Country','ASC');
    },

    onRWgeo_f3_2_selectedAdd: function(container, component, index, eOpts) {
        if (Ext.getCmp('RWgeo_f3_2_selected')!=undefined)
        {
            if (Ext.getCmp('RWgeo_f3_2_selected').getStore().count()>0){
                Ext.getCmp("RWgeo_submit").enable();
            }
        }
    },

    onButtonClick14: function(button, e, eOpts) {
        Ext.getCmp('RulesWizard_geo').hide();
        Ext.getCmp('RulesWizard_win2').show();

    },

    onButtonClick15: function(button, e, eOpts) {
        Ext.getCmp('RulesWizard_geo').hide();
        Ext.getCmp('RulesWizard_win1').show();
        Ext.WindowManager.get('RulesWizard').hide();

    },

    onRWgeo_submitClick: function(button, e, eOpts) {
        submit_geo_rule()
    },

    onRulesWizardHide: function(component, eOpts) {
        Ext.getCmp('main_panel').enable();
        Ext.getStore('rw_geoOutsideChosen').removeAll();
        Ext.getStore('rw_geoOutsideAll').load();
        Ext.getStore('rw_geoInsideChosen').removeAll();
        Ext.getStore('rw_geoInsideAll').load();
        component.destroy();
    },

    onButtonClick18: function(button, e, eOpts) {
        Ext.getCmp('RulesWizard_bot').hide();
        Ext.getCmp('RulesWizard_win2').show();
    },

    onButtonClick19: function(button, e, eOpts) {
        Ext.getCmp('RulesWizard_bot').hide();
        Ext.getCmp('RulesWizard_win1').show();
        Ext.WindowManager.get('RulesWizard').hide();

    },

    onRWbot_submitClick: function(button, e, eOpts) {
        submit_bot_rule()
    },

    onRulesWizardShow: function(component, eOpts) {
        telepath.rules.onWizardShow(component);
    }

});
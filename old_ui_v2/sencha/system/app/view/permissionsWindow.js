/*
 * File: app/view/permissionsWindow.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.permissionsWindow', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.column.Number',
        'Ext.grid.View',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 361,
    id: 'permissionsWindow',
    width: 684,
    layout: 'fit',
    closeAction: 'hide',
    title: 'Telepath Permissions',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    store: 'permissionsStore',
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            width: 50,
                            defaultWidth: 50,
                            dataIndex: 'id',
                            text: 'ID',
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'class',
                            text: 'Class'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'function',
                            text: 'Function'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 150,
                            defaultWidth: 150,
                            dataIndex: 'alias',
                            text: 'Alias'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'description',
                            text: 'Description',
                            flex: 1
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    text: 'Add Permission',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    listeners: {
                        itemclick: {
                            fn: me.onGridpanelItemClick,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        telepath.permissions.create();
    },

    onGridpanelItemClick: function(dataview, record, item, index, e, eOpts) {
        telepath.permissions.edit(record);
    }

});
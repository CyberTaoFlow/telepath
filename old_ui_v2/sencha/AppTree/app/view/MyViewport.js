/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    margin: '100px 0px 0px 0px',
    layout: {
        type: 'absolute'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    x: 20,
                    y: 50,
                    height: 220,
                    id: 'usersGrid',
                    width: 450,
                    title: 'My Grid Panel',
                    store: 'MyArrayStore',
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            disabled: true,
                            width: 41,
                            resizable: false,
                            enableColumnHide: false,
                            sealed: true,
                            dataIndex: 'id',
                            locked: true,
                            text: '',
                            format: '00000'
                        },
                        {
                            xtype: 'booleancolumn',
                            dataIndex: 'active',
                            text: 'Active',
                            editor: {
                                xtype: 'checkboxfield'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'username',
                            text: 'Username',
                            editor: {
                                xtype: 'textfield'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'password',
                            text: 'Password',
                            editor: {
                                xtype: 'textfield'
                            }
                        },
                        {
                            xtype: 'datecolumn',
                            dataIndex: 'expiration',
                            text: 'Expiration',
                            editor: {
                                xtype: 'datefield'
                            }
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.CellEditing', {
                            listeners: {
                                edit: {
                                    fn: me.onCellEditingEdit,
                                    scope: me
                                }
                            }
                        })
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    text: 'Add'
                                },
                                {
                                    xtype: 'button',
                                    text: 'Remove',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onCellEditingEdit: function(editor, e, eOpts) {

    },

    onButtonClick: function(button, e, eOpts) {
        var sm = Ext.getCmp('usersGrid').getSelectionModel();
        Ext.getCmp('usersGrid').store.remove(sm.getSelection());
        sm.select(0);
    }

});
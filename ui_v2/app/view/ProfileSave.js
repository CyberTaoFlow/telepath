/*
 * File: app/view/ProfileSave.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.ProfileSave', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.field.Text',
        'Ext.button.Button'
    ],

    height: 149,
    id: 'ProfileSave',
    width: 400,
    resizable: false,
    layout: 'absolute',
    closeAction: 'hide',
    title: 'Save Profile',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'textfield',
                    x: 50,
                    y: 30,
                    id: 'profileName',
                    fieldLabel: 'Profile Name',
                    labelSeparator: ' ',
                    enableKeyEvents: true,
                    listeners: {
                        change: {
                            fn: me.onProfileNameChange,
                            scope: me
                        },
                        keypress: {
                            fn: me.onProfileNameKeypress,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'button',
                    x: 170,
                    y: 70,
                    disabled: true,
                    id: 'saveProfile',
                    icon: 'Htmls/images/save.gif',
                    text: 'Save',
                    listeners: {
                        click: {
                            fn: me.onButtonClick1,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'button',
                    x: 230,
                    y: 70,
                    icon: 'Htmls/images/x.gif',
                    text: 'Cancel',
                    listeners: {
                        click: {
                            fn: me.onButtonClick,
                            scope: me
                        }
                    }
                }
            ],
            listeners: {
                destroy: {
                    fn: me.onProfileSaveDestroy,
                    scope: me
                },
                show: {
                    fn: me.onProfileSaveShow,
                    scope: me
                },
                hide: {
                    fn: me.onProfileSaveHide,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onProfileNameChange: function(field, newValue, oldValue, eOpts) {
        if (newValue.length>0 & newValue.charAt(0)!=" ")
            Ext.getCmp("saveProfile").enable();
        else
            Ext.getCmp("saveProfile").disable();
    },

    onProfileNameKeypress: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;

        Ext.WindowManager.get('ProfileSave').hide();
        SaveProfile();
    },

    onButtonClick1: function(button, e, eOpts) {

        Ext.WindowManager.get('ProfileSave').hide();
        SaveProfile();
    },

    onButtonClick: function(button, e, eOpts) {
        Ext.getCmp('profileName').setValue("");
        Ext.WindowManager.get('ProfileSave').hide();
    },

    onProfileSaveDestroy: function(component, eOpts) {
        Ext.getCmp('main_panel').enable()
    },

    onProfileSaveShow: function(component, eOpts) {
        Ext.getCmp('main_panel').disable()
    },

    onProfileSaveHide: function(component, eOpts) {
        Ext.getCmp('main_panel').enable()
    }

});
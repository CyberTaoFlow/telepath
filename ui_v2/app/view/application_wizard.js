/*
 * File: app/view/application_wizard.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.application_wizard', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.field.Hidden',
        'Ext.form.Label',
        'Ext.form.field.ComboBox',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.grid.plugin.CellEditing',
        'Ext.form.field.Radio',
        'Ext.form.RadioGroup',
        'Ext.form.field.Number',
        'Ext.form.Panel',
        'Ext.form.field.File',
        'Ext.grid.plugin.RowEditing'
    ],

    height: 710,
    id: 'application_wizard',
    width: 627,
    resizable: false,
    layout: 'anchor',
    bodyPadding: 10,
    title: 'Add Application',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'hiddenfield',
                    anchor: '100%',
                    id: 'app_wizard_app_id_to_add',
                    fieldLabel: 'Label'
                },
                {
                    xtype: 'panel',
                    height: 610,
                    id: 'app_wizard_general',
                    width: 595,
                    layout: 'absolute',
                    title: 'General',
                    items: [
                        {
                            xtype: 'textfield',
                            x: 10,
                            y: 30,
                            id: 'app_wizard_general_display_name',
                            width: 350,
                            fieldLabel: 'Display Name',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            name: 'test',
                            allowBlank: false,
                            enableKeyEvents: true,
                            listeners: {
                                keypress: {
                                    fn: me.onApp_wizard_general_display_nameKeypress,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            x: 10,
                            y: 70,
                            id: 'app_wizard_general_application_domain',
                            width: 350,
                            fieldLabel: 'Application Domain',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            allowBlank: false,
                            enableKeyEvents: true,
                            listeners: {
                                keypress: {
                                    fn: me.onApp_wizard_general_application_domainKeypress,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            x: 10,
                            y: 110,
                            style: 'background-color:#EEE;\nfont-weight:bold;',
                            width: 570,
                            text: 'Application Cookies'
                        },
                        {
                            xtype: 'combobox',
                            x: 10,
                            y: 140,
                            id: 'app_wizard_general_cookie_name',
                            width: 310,
                            fieldLabel: 'Cookie Name',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            enableKeyEvents: true,
                            displayField: 'cookie',
                            queryMode: 'local',
                            store: 'app_wizard_cookieStore',
                            listeners: {
                                keypress: {
                                    fn: me.onApp_wizard_general_cookie_nameKeypress,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 330,
                            y: 140,
                            id: 'app_wizard_general_add_cookie_button',
                            text: 'Add',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick11,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'gridpanel',
                            x: 165,
                            y: 170,
                            height: 150,
                            id: 'app_wizard_general_add_cookie_list',
                            width: 200,
                            title: '',
                            enableColumnHide: false,
                            enableColumnMove: false,
                            forceFit: true,
                            store: 'app_wizard_cookie_list_store',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 300,
                                    dataIndex: 'cookie',
                                    editor: {
                                        xtype: 'textfield',
                                        allowBlank: false
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        return '<div><img src="Htmls/images/edit.gif" onclick="Ext.getCmp(\'app_wizard_general_add_cookie_list\').getPlugin(\'ip_cell_edit\').startEdit('+rowIndex+',Ext.getCmp(\'app_wizard_general_add_cookie_list\').columns[0])" align="center"></div>';
                                    },
                                    maxWidth: 60,
                                    text: ''
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        return '<div><img src="Htmls/images/delete.gif" onclick="remove_item_from_table(\''+record.internalId+'\',\'app_wizard_general_add_cookie_list\')" align="center"></div>';
                                    },
                                    maxWidth: 60,
                                    width: 111,
                                    text: ''
                                }
                            ],
                            plugins: [
                                Ext.create('Ext.grid.plugin.CellEditing', {
                                    pluginId: 'ip_cell_edit',
                                    listeners: {
                                        validateedit: {
                                            fn: me.onCellEditingValidateedit,
                                            scope: me
                                        }
                                    }
                                })
                            ]
                        },
                        {
                            xtype: 'label',
                            x: 10,
                            y: 340,
                            style: 'background-color:#EEE;\nfont-weight:bold;',
                            width: 570,
                            text: 'Application IP Addresses'
                        },
                        {
                            xtype: 'textfield',
                            x: 10,
                            y: 370,
                            id: 'app_wizard_general_add_ip_field',
                            width: 310,
                            fieldLabel: 'Add New IP',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            allowBlank: false,
                            enableKeyEvents: true,
                            regex: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/,
                            regexText: 'Illegal IP Address',
                            listeners: {
                                keypress: {
                                    fn: me.onC_appAdd_ssl_ipKeypress,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 330,
                            y: 370,
                            id: 'app_wizard_general_add_ip_button',
                            text: 'Add',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick1,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            x: 400,
                            y: 370,
                            hidden: true,
                            id: 'app_wizard_general_add_ip_list_alert',
                            style: {
                                color: 'red'
                            },
                            text: 'Please insert at least one IP address'
                        },
                        {
                            xtype: 'gridpanel',
                            isValid: function() {
                                if(!Ext.getCmp('app_wizard_general_add_ip_list').getStore().getCount()){
                                    Ext.getCmp('app_wizard_general_add_ip_list_alert').show();
                                    return false;
                                }

                                else{
                                    Ext.getCmp('app_wizard_general_add_ip_list_alert').hide();
                                    return true;
                                }
                            },
                            x: 165,
                            y: 400,
                            height: 150,
                            id: 'app_wizard_general_add_ip_list',
                            width: 200,
                            title: '',
                            enableColumnHide: false,
                            enableColumnMove: false,
                            forceFit: true,
                            store: 'appAdd_ssl_server_ip_store',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 300,
                                    dataIndex: 'ip',
                                    editor: {
                                        xtype: 'textfield',
                                        regex: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/,
                                        regexText: 'Illegal IP Adrees'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        return '<div><img src="Htmls/images/edit.gif" onclick="Ext.getCmp(\'app_wizard_general_add_ip_list\').getPlugin(\'ip_cell_edit\').startEdit('+rowIndex+',Ext.getCmp(\'app_wizard_general_add_ip_list\').columns[0])" align="center"></div>';
                                    },
                                    maxWidth: 60,
                                    text: ''
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        return '<div><img src="Htmls/images/delete.gif" onclick="remove_item_from_table(\''+record.internalId+'\',\'app_wizard_general_add_ip_list\')" align="center"></div>';
                                    },
                                    maxWidth: 60,
                                    width: 111,
                                    text: ''
                                }
                            ],
                            plugins: [
                                Ext.create('Ext.grid.plugin.CellEditing', {
                                    pluginId: 'ip_cell_edit',
                                    listeners: {
                                        validateedit: {
                                            fn: me.onCellEditingValidateedit1,
                                            scope: me
                                        }
                                    }
                                })
                            ]
                        }
                    ],
                    listeners: {
                        show: {
                            fn: me.onApp_wizard_generalShow,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'panel',
                    height: 610,
                    hidden: true,
                    id: 'app_wizard_authentication',
                    width: 594,
                    layout: 'absolute',
                    title: 'Authentication',
                    items: [
                        {
                            xtype: 'label',
                            x: 10,
                            y: 20,
                            style: 'background-color:#EEE;\nfont-weight:bold;',
                            width: 570,
                            text: 'User Identification'
                        },
                        {
                            xtype: 'label',
                            x: 10,
                            y: 200,
                            style: 'background-color:#EEE;\nfont-weight:bold;',
                            width: 570,
                            text: 'Success Criteria'
                        },
                        {
                            xtype: 'radiofield',
                            x: 10,
                            y: 50,
                            id: 'app_wizard_authentication_automatic_cb',
                            fieldLabel: '',
                            boxLabel: 'Automatic',
                            checked: true,
                            listeners: {
                                change: {
                                    fn: me.onApp_wizard_authentication_automatic_cbChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'radiofield',
                            x: 10,
                            y: 80,
                            disabled: true,
                            id: 'app_wizard_authentication_form_cb',
                            fieldLabel: '',
                            boxLabel: 'Form',
                            listeners: {
                                change: {
                                    fn: me.onApp_wizard_authentication_form_cbChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            x: 110,
                            y: 80,
                            hidden: true,
                            id: 'app_wizard_authentication_form_parameter',
                            width: 290,
                            fieldLabel: 'Username Parameter',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            x: 80,
                            y: 50,
                            hidden: true,
                            id: 'app_wizard_authentication_form_parameter_id',
                            fieldLabel: 'Label',
                            value: 'Display Field',
                            allowBlank: false
                        },
                        {
                            xtype: 'button',
                            x: 430,
                            y: 80,
                            hidden: true,
                            id: 'app_wizard_authentication_form_parameter_browse',
                            text: 'Browse'
                        },
                        {
                            xtype: 'radiofield',
                            x: 10,
                            y: 110,
                            id: 'app_wizard_authentication_basic_cb',
                            fieldLabel: '',
                            boxLabel: 'Basic',
                            listeners: {
                                change: {
                                    fn: me.onApp_wizard_authentication_basic_cbChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'radiofield',
                            x: 10,
                            y: 140,
                            id: 'app_wizard_authentication_digest_cb',
                            fieldLabel: '',
                            boxLabel: 'Digest',
                            listeners: {
                                change: {
                                    fn: me.onApp_wizard_authentication_digest_cbChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'radiofield',
                            x: 10,
                            y: 170,
                            id: 'app_wizard_authentication_ntlm_cb',
                            fieldLabel: '',
                            boxLabel: 'NTLM',
                            listeners: {
                                change: {
                                    fn: me.onApp_wizard_authentication_ntlm_cbChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'radiogroup',
                            x: 10,
                            y: 240,
                            width: 400,
                            fieldLabel: 'Form Authentication',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            items: [
                                {
                                    xtype: 'radiofield',
                                    id: 'app_wizard_authentication_form_authentication_on',
                                    boxLabel: 'On',
                                    checked: true,
                                    listeners: {
                                        change: {
                                            fn: me.onApp_wizard_authentication_form_authentication_onChange,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'radiofield',
                                    id: 'app_wizard_authentication_form_authentication_off',
                                    boxLabel: 'Off',
                                    listeners: {
                                        change: {
                                            fn: me.onApp_wizard_authentication_form_authentication_offChange,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 10,
                            y: 300,
                            id: 'app_wizard_authentication_success_cookie_cb',
                            fieldLabel: '',
                            boxLabel: 'Cookie',
                            listeners: {
                                change: {
                                    fn: me.onApp_wizard_authentication_success_cookie_cbChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'combobox',
                            x: 120,
                            y: 300,
                            disabled: true,
                            id: 'app_wizard_authentication_success_cookie_name',
                            fieldLabel: 'Name',
                            labelSeparator: ' ',
                            labelWidth: 50,
                            allowBlank: false,
                            displayField: 'cookie',
                            queryMode: 'local',
                            store: 'c_app_cookieStore'
                        },
                        {
                            xtype: 'textfield',
                            x: 380,
                            y: 300,
                            disabled: true,
                            id: 'app_wizard_authentication_success_cookie_value',
                            width: 200,
                            fieldLabel: 'Value',
                            labelSeparator: ' ',
                            labelWidth: 50,
                            allowBlank: false
                        },
                        {
                            xtype: 'radiofield',
                            x: 120,
                            y: 340,
                            disabled: true,
                            id: 'app_wizard_authentication_success_cookie_missing',
                            fieldLabel: '',
                            boxLabel: 'Above value is missing ',
                            checked: true
                        },
                        {
                            xtype: 'radiofield',
                            x: 380,
                            y: 340,
                            disabled: true,
                            id: 'app_wizard_authentication_success_cookie_appears',
                            fieldLabel: '',
                            boxLabel: 'Above value appears'
                        },
                        {
                            xtype: 'container',
                            x: 10,
                            y: 280,
                            height: 20,
                            style: 'border-top-width: 1px;\nborder-top-style: solid;\nborder-top-color: black',
                            width: 570
                        },
                        {
                            xtype: 'container',
                            x: 10,
                            y: 390,
                            height: 20,
                            style: 'border-top-width: 1px;\nborder-top-style: solid;\nborder-top-color: black',
                            width: 570
                        },
                        {
                            xtype: 'container',
                            x: 10,
                            y: 520,
                            height: 20,
                            style: 'border-top-width: 1px;\nborder-top-style: solid;\nborder-top-color: black',
                            width: 570
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 10,
                            y: 430,
                            disabled: true,
                            id: 'app_wizard_authentication_success_redirect_cb',
                            fieldLabel: '',
                            boxLabel: 'Redirect',
                            listeners: {
                                change: {
                                    fn: me.onApp_wizard_authentication_success_redirect_cbChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            x: 120,
                            y: 430,
                            disabled: true,
                            id: 'app_wizard_authentication_success_redirect_page',
                            fieldLabel: 'Page',
                            labelSeparator: ' ',
                            labelWidth: 60,
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            x: 120,
                            y: 410,
                            disabled: true,
                            hidden: true,
                            id: 'app_wizard_authentication_success_redirect_page_id',
                            fieldLabel: 'Label',
                            allowBlank: false
                        },
                        {
                            xtype: 'label',
                            x: 10,
                            y: 410,
                            style: 'font-weight:bold;',
                            width: 570,
                            text: 'Note: Redirect Page can only be selected after the application has been created'
                        },
                        {
                            xtype: 'button',
                            x: 350,
                            y: 430,
                            disabled: true,
                            id: 'app_wizard_authentication_success_redirect_page_browse',
                            text: 'Browse',
                            listeners: {
                                click: {
                                    fn: me.onApp_wizard_authentication_success_redirect_page_browseClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'numberfield',
                            x: 120,
                            y: 480,
                            disabled: true,
                            id: 'app_wizard_authentication_success_redirect_response_1',
                            width: 250,
                            fieldLabel: 'Response Status is between',
                            labelSeparator: ' ',
                            labelWidth: 180,
                            allowBlank: false,
                            allowDecimals: false,
                            maxValue: 599,
                            minValue: 200
                        },
                        {
                            xtype: 'numberfield',
                            x: 380,
                            y: 480,
                            disabled: true,
                            id: 'app_wizard_authentication_success_redirect_response_2',
                            width: 100,
                            fieldLabel: 'and',
                            labelSeparator: ' ',
                            labelWidth: 30,
                            allowBlank: false,
                            allowDecimals: false,
                            maxValue: 599,
                            minValue: 200
                        },
                        {
                            xtype: 'checkboxfield',
                            x: 10,
                            y: 540,
                            id: 'app_wizard_authentication_success_body_value_cb',
                            fieldLabel: '',
                            boxLabel: 'Body Value',
                            listeners: {
                                change: {
                                    fn: me.onApp_wizard_authentication_success_body_value_cbChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            x: 120,
                            y: 540,
                            disabled: true,
                            id: 'app_wizard_authentication_success_body_value_value',
                            width: 460,
                            fieldLabel: 'Value to search in HTML body',
                            labelSeparator: ' ',
                            labelWidth: 200,
                            allowBlank: false
                        }
                    ],
                    listeners: {
                        show: {
                            fn: me.onApp_wizard_authenticationShow1,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'panel',
                    height: 610,
                    hidden: true,
                    id: 'app_wizard_ssl',
                    layout: 'absolute',
                    title: 'SSL',
                    items: [
                        {
                            xtype: 'checkboxgroup',
                            x: 20,
                            y: 50,
                            id: 'app_wizard_ssl_cbs',
                            width: 330,
                            fieldLabel: 'SSL',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            items: [
                                {
                                    xtype: 'radiofield',
                                    id: 'app_wizard_ssl_on',
                                    boxLabel: 'On',
                                    listeners: {
                                        change: {
                                            fn: me.onC_appAdd_ssl_onChange11,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'radiofield',
                                    id: 'app_wizard_ssl_off',
                                    boxLabel: 'Off',
                                    checked: true,
                                    listeners: {
                                        change: {
                                            fn: me.onC_appAdd_ssl_offChange11,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            x: 20,
                            y: 90,
                            baseCls: 'x-component',
                            id: 'app_wizard_upload_certificate',
                            width: 330,
                            layout: 'absolute',
                            title: '',
                            items: [
                                {
                                    xtype: 'filefield',
                                    y: 10,
                                    disabled: true,
                                    id: 'app_wizard_upload_certificate_form',
                                    width: 330,
                                    fieldLabel: 'Certificate',
                                    labelSeparator: ' ',
                                    name: 'file',
                                    allowBlank: false
                                }
                            ]
                        },
                        {
                            xtype: 'form',
                            x: 20,
                            y: 140,
                            baseCls: 'x-component',
                            id: 'app_wizard_upload_private_key',
                            width: 330,
                            bodyPadding: '',
                            title: '',
                            items: [
                                {
                                    xtype: 'filefield',
                                    disabled: true,
                                    id: 'app_wizard_upload_private_key_form',
                                    width: 329,
                                    fieldLabel: 'Private Key',
                                    labelSeparator: ' ',
                                    name: 'file',
                                    allowBlank: false
                                }
                            ]
                        },
                        {
                            xtype: 'numberfield',
                            x: 20,
                            y: 180,
                            disabled: true,
                            id: 'app_wizard_ssl_port',
                            width: 200,
                            fieldLabel: 'Server Port',
                            labelSeparator: ' ',
                            value: 443,
                            allowBlank: false,
                            enforceMaxLength: true,
                            maxLength: 4,
                            allowDecimals: false,
                            maxValue: 9999,
                            minValue: 0
                        },
                        {
                            xtype: 'textfield',
                            x: 20,
                            y: 215,
                            disabled: true,
                            id: 'app_wizard_ssl_password',
                            width: 280,
                            fieldLabel: 'Certificate Password',
                            labelSeparator: ' ',
                            inputType: 'password',
                            enableKeyEvents: true,
                            listeners: {
                                keypress: {
                                    fn: me.onApp_wizard_ssl_passwordKeypress,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 130,
                            y: 410,
                            hidden: true,
                            style: 'margin-left:16%;\nmargin-top:5%;',
                            width: 60,
                            icon: 'Htmls/images/add.gif',
                            text: 'Add',
                            listeners: {
                                click: {
                                    fn: me.onC_appAdd_addClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            x: 10,
                            y: 20,
                            style: 'background-color:#EEE;\nfont-weight:bold;',
                            width: 570,
                            text: 'SSL'
                        }
                    ],
                    listeners: {
                        show: {
                            fn: me.onApp_wizard_authenticationShow,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'panel',
                    height: 610,
                    hidden: true,
                    id: 'app_wizard_advanced',
                    layout: 'absolute',
                    title: 'Advanced',
                    items: [
                        {
                            xtype: 'label',
                            x: 10,
                            y: 20,
                            style: 'background-color:#EEE;\nfont-weight:bold;',
                            width: 570,
                            text: 'Application Global Pages'
                        },
                        {
                            xtype: 'textfield',
                            x: 10,
                            y: 60,
                            hidden: true,
                            id: 'app_wizard_advanced_global_pages_description',
                            width: 520,
                            fieldLabel: 'Page Description',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            enableKeyEvents: true,
                            listeners: {
                                keypress: {
                                    fn: me.onApp_wizard_advanced_global_pages_descriptionKeypress,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            x: 10,
                            y: 100,
                            id: 'app_wizard_advanced_global_pages_regex',
                            width: 520,
                            fieldLabel: 'Regular Expression',
                            labelSeparator: ' ',
                            labelWidth: 150,
                            allowBlank: false,
                            enableKeyEvents: true,
                            listeners: {
                                keypress: {
                                    fn: me.onC_appAdd_global_headerKeypress,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 540,
                            y: 100,
                            text: 'Add',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick2,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'gridpanel',
                            x: 10,
                            y: 140,
                            height: 170,
                            id: 'app_wizard_advanced_global_pages_list',
                            width: 570,
                            title: '',
                            enableColumnHide: false,
                            enableColumnMove: false,
                            forceFit: true,
                            store: 'app_wizard_global_pages_store',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    hidden: true,
                                    dataIndex: 'desc',
                                    text: 'Description',
                                    editor: {
                                        xtype: 'textfield'
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 319,
                                    dataIndex: 'page',
                                    text: 'Regular Expression',
                                    editor: {
                                        xtype: 'textfield',
                                        allowBlank: false
                                    }
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        return '<div><img src="Htmls/images/edit.gif" onclick="edit_global_pages(\'app_wizard_advanced_global_pages_list\',\'c_appAdd_global_pages_list_edit\',\''+record.get('page')+'\')" align="center"></div>';
                                    },
                                    maxWidth: 50,
                                    dataIndex: 'edit',
                                    text: ''
                                },
                                {
                                    xtype: 'gridcolumn',
                                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                        return '<div><img src="Htmls/images/delete.gif" onclick="remove_item_from_table(\''+record.internalId+'\',\'app_wizard_advanced_global_pages_list\')" align="center"></div>';
                                    },
                                    maxWidth: 50,
                                    dataIndex: 'delete',
                                    text: ''
                                }
                            ],
                            plugins: [
                                Ext.create('Ext.grid.plugin.RowEditing', {
                                    pluginId: 'c_appAdd_global_pages_list_edit',
                                    listeners: {
                                        validateedit: {
                                            fn: me.onRowEditingValidateedit,
                                            scope: me
                                        }
                                    }
                                })
                            ]
                        },
                        {
                            xtype: 'textfield',
                            x: 10,
                            y: 380,
                            id: 'app_wizard_advanced_injected_header_name',
                            width: 350,
                            fieldLabel: 'Injected Header Name',
                            labelSeparator: ' ',
                            labelWidth: 170
                        },
                        {
                            xtype: 'textfield',
                            x: 10,
                            y: 430,
                            id: 'app_wizard_advanced_session_clear_name',
                            width: 350,
                            fieldLabel: 'Session Clear Cookie Name',
                            labelSeparator: ' ',
                            labelWidth: 170
                        },
                        {
                            xtype: 'textfield',
                            x: 10,
                            y: 480,
                            id: 'app_wizard_advanced_session_clear_value',
                            width: 350,
                            fieldLabel: 'Session Clear Cookie Value',
                            labelSeparator: ' ',
                            labelWidth: 170
                        },
                        {
                            xtype: 'textfield',
                            x: 10,
                            y: 10,
                            hidden: true,
                            id: 'c_appAdd_globalPages',
                            width: 350,
                            fieldLabel: 'Global Pages',
                            labelSeparator: ' ',
                            labelWidth: 150
                        },
                        {
                            xtype: 'label',
                            x: 10,
                            y: 340,
                            style: 'background-color:#EEE;\nfont-weight:bold;',
                            width: 570,
                            text: 'API Settings'
                        }
                    ],
                    listeners: {
                        show: {
                            fn: me.onApp_wizard_advancedShow,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'panel',
                    height: 45,
                    width: 595,
                    layout: 'absolute',
                    title: '',
                    items: [
                        {
                            xtype: 'button',
                            x: 10,
                            y: 10,
                            id: 'app_wizard_save_button',
                            width: 60,
                            icon: 'Htmls/images/save.gif',
                            text: 'Save',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 200,
                            y: 10,
                            id: 'app_wizard_authentication_button',
                            allowDepress: false,
                            enableToggle: true,
                            icon: 'Htmls/images/user.gif',
                            text: 'Authentication',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick3,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 330,
                            y: 10,
                            id: 'app_wizard_ssl_button',
                            allowDepress: false,
                            enableToggle: true,
                            icon: 'Htmls/images/ssl.gif',
                            text: 'SSL',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick4,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 410,
                            y: 10,
                            hidden: true,
                            id: 'app_wizard_advanced_button',
                            allowDepress: false,
                            enableToggle: true,
                            icon: 'Htmls/images/edit.gif',
                            text: 'Advanced',
                            listeners: {
                                click: {
                                    fn: me.onApp_wizard_advanced_buttonClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 100,
                            y: 10,
                            id: 'app_wizard_general_button',
                            allowDepress: false,
                            enableToggle: true,
                            icon: 'Htmls/images/exclamation.gif',
                            pressed: true,
                            text: 'General',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick5,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 520,
                            y: 10,
                            icon: 'Htmls/images/x.gif',
                            text: 'Cancel',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick231,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            listeners: {
                destroy: {
                    fn: me.onAddApplicationDestroy,
                    scope: me
                },
                hide: {
                    fn: me.onAddApplicationHide,
                    scope: me
                },
                show: {
                    fn: me.onAddApplicationShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onApp_wizard_general_display_nameKeypress: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;
        Ext.getCmp('app_wizard_save_button').fireEvent('click');
    },

    onApp_wizard_general_application_domainKeypress: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;
        Ext.getCmp('app_wizard_save_button').fireEvent('click');
    },

    onApp_wizard_general_cookie_nameKeypress: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;
        var field = Ext.getCmp('app_wizard_general_cookie_name');
        var new_cookie = field.getValue();
        if (check_for_duplicates(field,Ext.getCmp('app_wizard_general_add_cookie_list').getStore())){
            field.reset();
            return;
        }
        if (field.isValid()){
            Ext.getCmp('app_wizard_general_add_cookie_list').getStore().add({cookie:new_cookie});
            field.reset();
        }

    },

    onButtonClick11: function(button, e, eOpts) {
        var field = Ext.getCmp('app_wizard_general_cookie_name');
        var new_cookie = field.getValue();
        if (check_for_duplicates(field,Ext.getCmp('app_wizard_general_add_cookie_list').getStore())){
            field.reset();
            return;
        }
        if (field.isValid()){
            Ext.getCmp('app_wizard_general_add_cookie_list').getStore().add({cookie:new_cookie});
            field.reset();
        }

    },

    onCellEditingValidateedit: function(editor, e, eOpts) {
        return validate_edition(editor,e)
    },

    onC_appAdd_ssl_ipKeypress: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;
        var field = Ext.getCmp('app_wizard_general_add_ip_field');
        var new_ip = field.getValue();
        if (check_for_duplicates(field,Ext.getCmp('app_wizard_general_add_ip_list').getStore())){
            field.reset();
            return;
        }
        if (field.isValid()){
            Ext.getCmp('app_wizard_general_add_ip_list').getStore().add({ip:new_ip});
            field.reset();
        }

    },

    onButtonClick1: function(button, e, eOpts) {
        var field = Ext.getCmp('app_wizard_general_add_ip_field');
        var new_ip = field.getValue();
        if (check_for_duplicates(field,Ext.getCmp('app_wizard_general_add_ip_list').getStore())){
            field.reset();
            return;
        }
        if (field.isValid()){
            Ext.getCmp('app_wizard_general_add_ip_list').getStore().add({ip:new_ip});
            field.reset();
        }

    },

    onApp_wizard_generalShow: function(component, eOpts) {
        Ext.getCmp('app_wizard_authentication').hide()
        Ext.getCmp('app_wizard_ssl').hide()
        Ext.getCmp('app_wizard_advanced').hide()
        Ext.getCmp('app_wizard_general_display_name').focus(true)
    },

    onCellEditingValidateedit1: function(editor, e, eOpts) {
        return validate_edition(editor,e)
    },

    onAddApplicationDestroy: function(component, eOpts) {
        Ext.getCmp('main_panel').enable();
    },

    onAddApplicationHide: function(component, eOpts) {
        Ext.getCmp('main_panel').enable();
        Ext.getCmp('app_wizard_general_add_cookie_list').getStore().removeAll();
        Ext.getCmp('app_wizard_general_add_ip_list').getStore().removeAll();
        Ext.getCmp('app_wizard_advanced_global_pages_list').getStore().removeAll();
        component.destroy();
    },

    onApp_wizard_authentication_automatic_cbChange: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            //Ext.getCmp('app_wizard_authentication_automatic_cb').setValue(false);
        	Ext.getCmp('app_wizard_authentication_form_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_basic_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_digest_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_ntlm_cb').setValue(false);
        }
    },

    onApp_wizard_authentication_form_cbChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('app_wizard_authentication_form_parameter').show()
            Ext.getCmp('app_wizard_authentication_form_parameter_browse').show()
        }
        else{
            Ext.getCmp('app_wizard_authentication_form_parameter').hide()
            Ext.getCmp('app_wizard_authentication_form_parameter_browse').hide()
        }

        if(newValue){
            Ext.getCmp('app_wizard_authentication_automatic_cb').setValue(false);
        	//Ext.getCmp('app_wizard_authentication_form_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_basic_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_digest_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_ntlm_cb').setValue(false);
        }
    },

    onApp_wizard_authentication_basic_cbChange: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            Ext.getCmp('app_wizard_authentication_automatic_cb').setValue(false);
        	Ext.getCmp('app_wizard_authentication_form_cb').setValue(false);
            //Ext.getCmp('app_wizard_authentication_basic_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_digest_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_ntlm_cb').setValue(false);
        }
    },

    onApp_wizard_authentication_digest_cbChange: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            Ext.getCmp('app_wizard_authentication_automatic_cb').setValue(false);
        	Ext.getCmp('app_wizard_authentication_form_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_basic_cb').setValue(false);
            //Ext.getCmp('app_wizard_authentication_digest_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_ntlm_cb').setValue(false);
        }
    },

    onApp_wizard_authentication_ntlm_cbChange: function(field, newValue, oldValue, eOpts) {
        if(newValue){
            Ext.getCmp('app_wizard_authentication_automatic_cb').setValue(false);
        	Ext.getCmp('app_wizard_authentication_form_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_basic_cb').setValue(false);
            Ext.getCmp('app_wizard_authentication_digest_cb').setValue(false);
           // Ext.getCmp('app_wizard_authentication_ntlm_cb').setValue(false);
        }
    },

    onApp_wizard_authentication_form_authentication_onChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('app_wizard_authentication_form_authentication_off').setValue(false);
            Ext.getCmp('app_wizard_authentication_success_cookie_cb').enable()
            if (Ext.getCmp('app_wizard_authentication_success_cookie_cb').getValue()){
                Ext.getCmp('app_wizard_authentication_success_cookie_name').enable()
                Ext.getCmp('app_wizard_authentication_success_cookie_value').enable()
                Ext.getCmp('app_wizard_authentication_success_cookie_missing').enable()
                Ext.getCmp('app_wizard_authentication_success_cookie_appears').enable()
            }
            Ext.getCmp('app_wizard_authentication_success_redirect_cb').enable()
            if (Ext.getCmp('app_wizard_authentication_success_redirect_cb').getValue()){
                Ext.getCmp('app_wizard_authentication_success_redirect_page').enable()
                Ext.getCmp('app_wizard_authentication_success_redirect_page_browse').enable()
                Ext.getCmp('app_wizard_authentication_success_redirect_response_1').enable()
                Ext.getCmp('app_wizard_authentication_success_redirect_response_2').enable()
            }
            Ext.getCmp('app_wizard_authentication_success_body_value_cb').enable()
            if (Ext.getCmp('app_wizard_authentication_success_body_value_cb').getValue()){
                Ext.getCmp('app_wizard_authentication_success_body_value_value').enable()
            }
        }

    },

    onApp_wizard_authentication_form_authentication_offChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('app_wizard_authentication_form_authentication_on').setValue(false);
            Ext.getCmp('app_wizard_authentication_success_cookie_cb').disable()
            Ext.getCmp('app_wizard_authentication_success_cookie_name').disable()
            Ext.getCmp('app_wizard_authentication_success_cookie_value').disable()
            Ext.getCmp('app_wizard_authentication_success_cookie_missing').disable()
            Ext.getCmp('app_wizard_authentication_success_cookie_appears').disable()
            Ext.getCmp('app_wizard_authentication_success_redirect_cb').disable()
            Ext.getCmp('app_wizard_authentication_success_redirect_page').disable()
            Ext.getCmp('app_wizard_authentication_success_redirect_page_browse').disable()
            Ext.getCmp('app_wizard_authentication_success_redirect_response_1').disable()
            Ext.getCmp('app_wizard_authentication_success_redirect_response_2').disable()
            Ext.getCmp('app_wizard_authentication_success_body_value_cb').disable()
            Ext.getCmp('app_wizard_authentication_success_body_value_value').disable()
        }
    },

    onApp_wizard_authentication_success_cookie_cbChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('app_wizard_authentication_success_cookie_name').enable();
            Ext.getCmp('app_wizard_authentication_success_cookie_value').enable();
            Ext.getCmp('app_wizard_authentication_success_cookie_missing').enable();
            Ext.getCmp('app_wizard_authentication_success_cookie_appears').enable();
        }
        else{
            Ext.getCmp('app_wizard_authentication_success_cookie_name').disable();
            Ext.getCmp('app_wizard_authentication_success_cookie_value').disable();
            Ext.getCmp('app_wizard_authentication_success_cookie_missing').disable();
            Ext.getCmp('app_wizard_authentication_success_cookie_appears').disable();
        }
    },

    onApp_wizard_authentication_success_redirect_cbChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('app_wizard_authentication_success_redirect_page').enable();
            Ext.getCmp('app_wizard_authentication_success_redirect_page_id').enable();
            Ext.getCmp('app_wizard_authentication_success_redirect_page_browse').enable();
            Ext.getCmp('app_wizard_authentication_success_redirect_response_1').enable();
            Ext.getCmp('app_wizard_authentication_success_redirect_response_2').enable();
        }
        else{
            Ext.getCmp('app_wizard_authentication_success_redirect_page').disable();
            Ext.getCmp('app_wizard_authentication_success_redirect_page_id').disable();
            Ext.getCmp('app_wizard_authentication_success_redirect_page_browse').disable();
            Ext.getCmp('app_wizard_authentication_success_redirect_response_1').disable();
            Ext.getCmp('app_wizard_authentication_success_redirect_response_2').disable();
        }
    },

    onApp_wizard_authentication_success_redirect_page_browseClick: function(button, e, eOpts) {
        telepath.config.openParameters("app_wizard_redirect_page");
    },

    onApp_wizard_authentication_success_body_value_cbChange: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('app_wizard_authentication_success_body_value_value').enable();
        }
        else{
            Ext.getCmp('app_wizard_authentication_success_body_value_value').disable();
        }
    },

    onApp_wizard_authenticationShow1: function(component, eOpts) {
        Ext.getCmp('app_wizard_general').hide()
        Ext.getCmp('app_wizard_ssl').hide()
        Ext.getCmp('app_wizard_advanced').hide()
    },

    onC_appAdd_ssl_onChange11: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('app_wizard_upload_certificate_form').enable();
            Ext.getCmp('app_wizard_upload_private_key_form').enable();
            Ext.getCmp('app_wizard_ssl_port').enable();
            Ext.getCmp('app_wizard_ssl_password').enable();
            Ext.getCmp('app_wizard_ssl_off').setValue(false)
        }


    },

    onC_appAdd_ssl_offChange11: function(field, newValue, oldValue, eOpts) {
        if (newValue){
            Ext.getCmp('app_wizard_upload_certificate_form').disable();
            Ext.getCmp('app_wizard_upload_private_key_form').disable();
            Ext.getCmp('app_wizard_ssl_port').disable();
            Ext.getCmp('app_wizard_ssl_password').disable();
            Ext.getCmp('app_wizard_ssl_on').setValue(false)
            Ext.getCmp('app_wizard_general_add_ip_list_alert').hide();
        }
    },

    onApp_wizard_ssl_passwordKeypress: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;
        Ext.getCmp('app_wizard_save_button').fireEvent('click');
    },

    onC_appAdd_addClick: function(button, e, eOpts) {
        var ip_list_valid;
        if (Ext.getCmp('c_appAdd_ssl_ip_list').getStore().getCount()>0){
            ip_list_valid = true
        }
        else{
            ip_list_valid = false
        }
        if (Ext.getCmp('c_appAdd_ssl_on').getValue() &&
        Ext.getCmp('c_appAdd_upload_certificate_form').isValid() &
        Ext.getCmp('c_appAdd_upload_private_key_form').isValid() &
        Ext.getCmp('c_appAdd_ssl_port').isValid() &
        Ext.getCmp('c_appAdd_ssl_ip').isValid() &
        Ext.getCmp('c_appAdd_ssl_password').isValid() &
        ip_list_valid
        )
        {
            add_new_app();
        }
        else if(!Ext.getCmp('c_appAdd_ssl_on').getValue()){
            add_new_app();
        }
        else if (!ip_list_valid)
        Ext.Msg.alert("Error","Please add at least one IP address for the SSL server")
        else
        return;

    },

    onApp_wizard_authenticationShow: function(component, eOpts) {
        Ext.getCmp('app_wizard_authentication').hide()
        Ext.getCmp('app_wizard_general').hide()
        Ext.getCmp('app_wizard_advanced').hide()
    },

    onApp_wizard_advanced_global_pages_descriptionKeypress: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;
        var desc_field = Ext.getCmp('app_wizard_advanced_global_pages_description')
        var regex_field = Ext.getCmp('app_wizard_advanced_global_pages_regex')
        var store = Ext.getCmp('app_wizard_advanced_global_pages_list').getStore();
        if (check_for_duplicates(field,Ext.getCmp('app_wizard_advanced_global_pages_list').getStore())){
            field.reset();
            return;
        }
        if (regex_field.isValid() & desc_field.isValid()){
            store.add({page:regex_field.getValue(),
            desc:desc_field.getValue() });
            regex_field.reset();
            desc_field.reset();
        }
    },

    onC_appAdd_global_headerKeypress: function(textfield, e, eOpts) {
        if (e.keyCode!=13)
        return;
        var desc_field = Ext.getCmp('app_wizard_advanced_global_pages_description')
        var regex_field = Ext.getCmp('app_wizard_advanced_global_pages_regex')
        var store = Ext.getCmp('app_wizard_advanced_global_pages_list').getStore();
        if (check_for_duplicates(field,Ext.getCmp('app_wizard_advanced_global_pages_list').getStore())){
            field.reset();
            return;
        }
        if (regex_field.isValid() & desc_field.isValid()){
            store.add({page:regex_field.getValue(),
            desc:desc_field.getValue() });
            regex_field.reset();
            desc_field.reset();
        }

    },

    onButtonClick2: function(button, e, eOpts) {
        var desc_field = Ext.getCmp('app_wizard_advanced_global_pages_description')
        var regex_field = Ext.getCmp('app_wizard_advanced_global_pages_regex')
        var store = Ext.getCmp('app_wizard_advanced_global_pages_list').getStore();
        if (check_for_duplicates(regex_field,Ext.getCmp('app_wizard_advanced_global_pages_list').getStore())){
            regex_field.reset();
            return;
        }
        if (regex_field.isValid()) { //& desc_field.isValid()
            store.add({page:regex_field.getValue(),
            desc:desc_field.getValue() });
            regex_field.reset();
            desc_field.reset();
        }
    },

    onRowEditingValidateedit: function(editor, e, eOpts) {
        return validate_edition(editor,e)
    },

    onApp_wizard_advancedShow: function(component, eOpts) {
        Ext.getCmp('app_wizard_authentication').hide()
        Ext.getCmp('app_wizard_general').hide()
        Ext.getCmp('app_wizard_ssl').hide()
    },

    onButtonClick: function(button, e, eOpts) {
        add_new_app();
    },

    onButtonClick3: function(button, e, eOpts) {
        Ext.getCmp('app_wizard_authentication').show()
        if (Ext.getCmp('app_wizard_ssl_button').pressed)
        Ext.getCmp('app_wizard_ssl_button').toggle();
        if (Ext.getCmp('app_wizard_general_button').pressed)
        Ext.getCmp('app_wizard_general_button').toggle();
        if (Ext.getCmp('app_wizard_advanced_button').pressed)
        Ext.getCmp('app_wizard_advanced_button').toggle();
    },

    onButtonClick4: function(button, e, eOpts) {
        Ext.getCmp('app_wizard_ssl').show()
        if (Ext.getCmp('app_wizard_authentication_button').pressed)
        Ext.getCmp('app_wizard_authentication_button').toggle();
        if (Ext.getCmp('app_wizard_general_button').pressed)
        Ext.getCmp('app_wizard_general_button').toggle();
        if (Ext.getCmp('app_wizard_advanced_button').pressed)
        Ext.getCmp('app_wizard_advanced_button').toggle();
    },

    onApp_wizard_advanced_buttonClick: function(button, e, eOpts) {
        Ext.getCmp('app_wizard_advanced').show();
        if (Ext.getCmp('app_wizard_ssl_button').pressed)
        Ext.getCmp('app_wizard_ssl_button').toggle();
        if (Ext.getCmp('app_wizard_general_button').pressed)
        Ext.getCmp('app_wizard_general_button').toggle();
        if (Ext.getCmp('app_wizard_authentication_button').pressed)
        Ext.getCmp('app_wizard_advanced_button').toggle();
    },

    onButtonClick5: function(button, e, eOpts) {
        Ext.getCmp('app_wizard_general').show()
        if (Ext.getCmp('app_wizard_ssl_button').pressed)
        Ext.getCmp('app_wizard_ssl_button').toggle();
        if (Ext.getCmp('app_wizard_advanced_button').pressed)
        Ext.getCmp('app_wizard_advanced_button').toggle();
        if (Ext.getCmp('app_wizard_authentication_button').pressed)
        Ext.getCmp('app_wizard_authentication_button').toggle();
    },

    onButtonClick231: function(button, e, eOpts) {
        Ext.getCmp('application_wizard').destroy();
        Ext.getCmp('main_panel').enable();
    },

    onAddApplicationShow: function(component, eOpts) {
        Ext.getCmp('main_panel').disable();
        get_next_app_id();
    }

});
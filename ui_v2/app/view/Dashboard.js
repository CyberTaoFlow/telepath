/*
 * File: app/view/Dashboard.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.Dashboard', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.dashboard',

    requires: [
        'Ext.form.field.Date',
        'Ext.form.field.Time',
        'Ext.button.Button',
        'Ext.panel.Tool',
        'Ext.form.Label',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.selection.CellModel'
    ],

    border: 0,
    id: 'dashboardPanel',
    overflowY: 'auto',
    manageHeight: false,
    title: 'Dashboard',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    border: 1,
                    height: 111,
                    id: 'd_settings',
                    layout: 'absolute',
                    bodyPadding: 10,
                    collapsed: false,
                    collapsible: true,
                    title: 'Dashboard Settings',
                    items: [
                        {
                            xtype: 'datefield',
                            x: 10,
                            y: 10,
                            id: 'd_startDate',
                            style: 'margin-right:15px;',
                            width: 160,
                            fieldLabel: 'Start Date',
                            labelSeparator: ' ',
                            labelWidth: 75,
                            editable: false,
                            format: 'd/m/y',
                            listeners: {
                                select: {
                                    fn: me.onD_startDateSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'timefield',
                            x: 180,
                            y: 10,
                            id: 'd_startHour',
                            width: 60,
                            fieldLabel: '',
                            value: '0:00',
                            editable: false,
                            format: 'G:i',
                            listeners: {
                                select: {
                                    fn: me.onD_startHourSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'datefield',
                            x: 10,
                            y: 40,
                            id: 'd_endDate',
                            style: 'margin-right:15px;',
                            width: 160,
                            fieldLabel: 'End Date',
                            labelSeparator: ' ',
                            labelWidth: 75,
                            editable: false,
                            format: 'd/m/y',
                            listeners: {
                                select: {
                                    fn: me.onD_endDateSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'timefield',
                            x: 180,
                            y: 40,
                            id: 'd_endHour',
                            width: 60,
                            fieldLabel: '',
                            value: '23:59',
                            editable: false,
                            format: 'G:i ',
                            listeners: {
                                select: {
                                    fn: me.onD_endHourSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 700,
                            y: 10,
                            hidden: true,
                            id: 'd_apply',
                            width: 70,
                            icon: 'Htmls/images/save.gif',
                            text: 'Apply',
                            listeners: {
                                click: {
                                    fn: me.onD_applyClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            x: 790,
                            y: 10,
                            hidden: true,
                            id: 'd_cancel',
                            width: 70,
                            icon: 'Htmls/images/x.gif',
                            text: 'Reset',
                            listeners: {
                                click: {
                                    fn: me.onD_cancelClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'combobox',
                            x: 500,
                            y: 10,
                            id: 'd_refresh',
                            style: 'margin-right:15px;',
                            width: 180,
                            fieldLabel: 'Refresh Rate (Mins)',
                            labelSeparator: ' ',
                            labelWidth: 120,
                            value: 5,
                            size: 8,
                            editable: false,
                            displayField: 'val',
                            queryMode: 'local',
                            store: 'd_refreshStore',
                            valueField: 'val',
                            listeners: {
                                select: {
                                    fn: me.onD_refreshSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'combobox',
                            x: 260,
                            y: 10,
                            id: 'd_trendsScale',
                            width: 220,
                            fieldLabel: 'Display Period',
                            labelSeparator: ' ',
                            labelWidth: 90,
                            value: 'Year',
                            editable: false,
                            displayField: 'type',
                            queryMode: 'local',
                            store: 'd_trendsScaleStore',
                            valueField: 'type',
                            listeners: {
                                change: {
                                    fn: me.onD_trendsScaleChange,
                                    scope: me
                                }
                            }
                        }
                    ],
                    listeners: {
                        collapse: {
                            fn: me.onD_settingsCollapse,
                            scope: me
                        },
                        expand: {
                            fn: me.onD_settingsExpand,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'panel',
                    border: 1,
                    height: 300,
                    hidden: true,
                    id: 'd_realtime',
                    layout: 'absolute',
                    bodyPadding: 10,
                    collapsed: true,
                    collapsible: true,
                    title: 'Realtime Monitor',
                    listeners: {
                        collapse: {
                            fn: me.onD_settingsCollapse1,
                            scope: me
                        },
                        expand: {
                            fn: me.onD_settingsExpand1,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'panel',
                    height: 900,
                    id: 'd_faccade',
                    minHeight: 900,
                    padding: '',
                    layout: {
                        type: 'table',
                        columns: 1
                    },
                    items: [
                        {
                            xtype: 'container',
                            height: 600,
                            id: 'd_draggableRow',
                            layout: 'absolute',
                            items: [
                                {
                                    xtype: 'panel',
                                    draggable: true,
                                    height: 300,
                                    id: 'd_trendsPanel',
                                    padding: '',
                                    width: 512,
                                    layout: 'fit',
                                    bodyPadding: '0 10 0 20 ',
                                    title: 'Alert Trends',
                                    listeners: {
                                        move: {
                                            fn: me.onD_trendsPanelMove,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'panel',
                                    x: 510,
                                    y: 300,
                                    draggable: true,
                                    height: 300,
                                    id: 'd_anomalyPanel',
                                    width: 512,
                                    title: 'Attacks',
                                    items: [
                                        {
                                            xtype: 'container',
                                            height: 290,
                                            id: 'd_LeftPieCont',
                                            padding: '0 10 20 20 ',
                                            style: 'margin-left:auto;\nmargin-right:auto;\n\nmargin-top:auto;',
                                            layout: 'fit'
                                        }
                                    ],
                                    listeners: {
                                        move: {
                                            fn: me.onD_anomalyPanelMove,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'panel',
                                    x: -1,
                                    y: 300,
                                    draggable: true,
                                    height: 300,
                                    id: 'd_countriesPanel',
                                    width: 512,
                                    title: 'Attack Origins',
                                    items: [
                                        {
                                            xtype: 'container',
                                            height: 290,
                                            id: 'd_RightPieCont',
                                            padding: '0 10 20 20 ',
                                            style: 'margin-left:auto;\nmargin-right:auto;',
                                            layout: 'fit'
                                        }
                                    ],
                                    listeners: {
                                        move: {
                                            fn: me.onD_countriesPanelMove,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'panel',
                                    x: 510,
                                    y: 0,
                                    draggable: true,
                                    height: 300,
                                    id: 'd_mapPanel',
                                    width: 512,
                                    layout: 'absolute',
                                    bodyStyle: 'background-color:#fff;',
                                    title: 'Hot Spots',
                                    tools: [
                                        {
                                            xtype: 'tool',
                                            disabled: true,
                                            type: 'maximize',
                                            listeners: {
                                                click: {
                                                    fn: me.onToolClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ],
                                    items: [
                                        {
                                            xtype: 'container',
                                            id: 'd_mapDidntLoad',
                                            style: 'margin-top:40%;',
                                            items: [
                                                {
                                                    xtype: 'label',
                                                    style: 'margin-left:35%;',
                                                    text: 'No internet connection - could not load map'
                                                }
                                            ]
                                        }
                                    ],
                                    listeners: {
                                        move: {
                                            fn: me.onD_mapPanelMove,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            id: 'd_secondRow',
                            layout: {
                                type: 'table',
                                columns: 2
                            }
                        },
                        {
                            xtype: 'container',
                            height: 300,
                            id: 'd_thirdRow',
                            width: 1024,
                            layout: 'border',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    region: 'center',
                                    id: 'd_suspectsPanel',
                                    title: 'Top Suspects',
                                    enableColumnHide: false,
                                    enableColumnMove: false,
                                    forceFit: true,
                                    store: 'd_suspectsStore',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return date_format('d/m/y H:i:s', value);
                                            },
                                            maxWidth: 110,
                                            width: 110,
                                            dataIndex: 'td0',
                                            text: 'Time',
                                            listeners: {
                                                render: {
                                                    fn: me.onGridcolumnRender,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            maxWidth: 110,
                                            width: 110,
                                            dataIndex: 'td2',
                                            text: 'IP',
                                            editor: {
                                                xtype: 'textfield',
                                                allowBlank: false
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'td3',
                                            text: 'City',
                                            editor: {
                                                xtype: 'textfield',
                                                allowBlank: false
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                                return '<div><span class="flag flag-' + record.data['td4'].toLowerCase() + '"></span>&nbsp;&nbsp;'
                                                + aliasToName[record.data['td4']] + (record.data['td3'] != 'Unknown' ? ', ' + record.data['td3'] : '') + '</div>';
                                            },
                                            dataIndex: 'td4',
                                            text: 'Location',
                                            editor: {
                                                xtype: 'textfield',
                                                allowBlank: false
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            maxWidth: 70,
                                            width: 70,
                                            dataIndex: 'td12',
                                            text: 'Anomaly'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'td1',
                                            text: 'User',
                                            editor: {
                                                xtype: 'textfield',
                                                allowBlank: false
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            hidden: true,
                                            dataIndex: 'td13',
                                            text: 'SID'
                                        }
                                    ],
                                    viewConfig: {
                                        enableTextSelection: false
                                    },
                                    selModel: Ext.create('Ext.selection.CellModel', {
                                        listeners: {
                                            select: {
                                                fn: me.onCellModelSelect,
                                                scope: me
                                            }
                                        }
                                    }),
                                    tools: [
                                        {
                                            xtype: 'tool',
                                            type: 'maximize',
                                            listeners: {
                                                click: {
                                                    fn: me.onToolClick2,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ],
                                    listeners: {
                                        expand: {
                                            fn: me.onD_suspectsPanelExpand,
                                            scope: me
                                        },
                                        itemcontextmenu: {
                                            fn: me.onD_suspectsPanelItemContextMenu,
                                            scope: me
                                        },
                                        celldblclick: {
                                            fn: me.onD_suspectsPanelCellDblClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'panel',
                                    region: 'east',
                                    id: 'd_sessions',
                                    padding: '',
                                    width: 512,
                                    layout: 'fit',
                                    bodyPadding: '0 10 20 20 ',
                                    hideCollapseTool: true,
                                    title: 'Sessions',
                                    listeners: {
                                        expand: {
                                            fn: me.onD_sessionsExpand,
                                            scope: me
                                        },
                                        collapse: {
                                            fn: me.onD_sessionsCollapse,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                render: {
                    fn: me.onDashboardPanelRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onD_startDateSelect: function(field, value, eOpts) {
        d_startDate_select(field,value,eOpts);
    },

    onD_startHourSelect: function(combo, records, eOpts) {
        d_startHour_select(combo,records,eOpts);
    },

    onD_endDateSelect: function(field, value, eOpts) {
        d_endDate_select(field,value,eOpts);
    },

    onD_endHourSelect: function(combo, records, eOpts) {
        d_endHour_select(combo,records,eOpts);
    },

    onD_applyClick: function(button, e, eOpts) {
        Ext.getCmp('d_apply').hide();
        Ext.getCmp('d_cancel').hide();
        d_appsFlag = true;
        d_updateConfig();
    },

    onD_cancelClick: function(button, e, eOpts) {
        d_cancel_click_handler();
    },

    onD_refreshSelect: function(combo, records, eOpts) {
        d_refreshFlag = true;
        Ext.getCmp('d_apply').show();
        Ext.getCmp('d_cancel').show();
    },

    onD_trendsScaleChange: function(field, newValue, oldValue, eOpts) {
        d_trendsScale_change(newValue);
        Ext.getCmp('d_apply').show();
        Ext.getCmp('d_cancel').show();
    },

    onD_settingsCollapse: function(p, eOpts) {
        init_height_by_dashboard()
    },

    onD_settingsExpand: function(p, eOpts) {
        init_height_by_dashboard()
    },

    onD_settingsCollapse1: function(p, eOpts) {
        telepath.realtime.collapse();
    },

    onD_settingsExpand1: function(p, eOpts) {
        telepath.realtime.expand();
    },

    onD_trendsPanelMove: function(component, x, y, eOpts) {
        telepath.dashboard.panelMove(component.id,x,y);
    },

    onD_anomalyPanelMove: function(component, x, y, eOpts) {
        telepath.dashboard.panelMove(component.id,x,y);
    },

    onD_countriesPanelMove: function(component, x, y, eOpts) {
        telepath.dashboard.panelMove(component.id,x,y);
    },

    onToolClick: function(tool, e, eOpts) {
        var win = Ext.create('MyApp.view.d_mapLarge').show();

    },

    onD_mapPanelMove: function(component, x, y, eOpts) {
        telepath.dashboard.panelMove(component.id,x,y);
    },

    onGridcolumnRender: function(component, eOpts) {
        var tip = Ext.create('Ext.tip.ToolTip', {
            target: component.getEl(),
            html: 'Double click on a date to investigate'
        });
    },

    onCellModelSelect: function(cellmodel, record, row, column, eOpts) {
        d_selected_record = record;

        setTimeout(function () {
            d_selected_index = cellmodel.selection.columnHeader.dataIndex;
        }, 50);
    },

    onToolClick2: function(tool, e, eOpts) {
        var win = Ext.WindowManager.get('d_suspectsLarge');
        if (win==undefined)
            Ext.create('MyApp.view.d_suspectsLarge').show();
        else
            win.show();
    },

    onD_suspectsPanelExpand: function(p, eOpts) {

    },

    onD_suspectsPanelItemContextMenu: function(dataview, record, item, index, e, eOpts) {
        d_suspectsPanel_rightclick(dataview,record,item,index,e,eOpts);
    },

    onD_suspectsPanelCellDblClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        d_suspectsPanel_celldblclick(tableview,  td,  cellIndex, record,  tr,  rowIndex,  e,  eOpts );
    },

    onD_sessionsExpand: function(p, eOpts) {
        Ext.getCmp('d_susQuery').hide();
        Ext.getCmp('d_susPath').hide();
        Ext.getCmp('d_susLocation').hide();
    },

    onD_sessionsCollapse: function(p, eOpts) {
        Ext.getCmp('d_susQuery').show();
        Ext.getCmp('d_susPath').show();
        Ext.getCmp('d_susLocation').show();

    },

    onDashboardPanelRender: function(component, eOpts) {
        telepath.dashboard.event('render', component);
    }

});